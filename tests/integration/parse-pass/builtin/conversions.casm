CASM conversions

enum en = {e1, e2, e3}
enum en2 = {e2_1, e2_2}

init main

rule main = {
    assert Boolean2Integer(true) = 1
    assert Boolean2Integer(false) = 0
    assert Boolean2Integer(undef) = undef
    assert Integer2Boolean(1) = true
    assert Integer2Boolean(0) = false
    assert Integer2Boolean(-1) = true
    assert Integer2Boolean(42) = true
    assert Integer2Boolean(undef) = undef

    assert Enum2Integer(e1) = 0
    assert Enum2Integer(e2) = 1
    assert Enum2Integer(e3) = 2
    assert Enum2Integer(undef) = undef
    let e:en = undef in assert Enum2Integer(e) = undef

    assert Enum2Integer(e2_1) = 0
    assert Enum2Integer(e2_2) = 1

    let e:en = Integer2Enum(0) in assert e = e1
    let e:en = Integer2Enum(1) in assert e = e2
    let e:en = Integer2Enum(2) in assert e = e3
    let e:en = Integer2Enum(3) in assert e = undef
    let e:en = Integer2Enum(4) in assert e = undef

    let e:en2 = Integer2Enum(0) in assert e = e2_1
    let e:en2 = Integer2Enum(1) in assert e = e2_2
    let e:en2 = Integer2Enum(2) in assert e = undef

    program(self) := undef
}
