Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | error

    7 AttributedDefinition: "[" Attributes "]" Definition
    8                     | Definition

    9 Definitions: Definitions AttributedDefinition
   10            | AttributedDefinition

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   12                   | ProgramFunctionDefinition

   13 MaybeInitially: "initially" "{" MaybeInitializers "}"
   14               | %empty

   15 MaybeDefined: "defined" "{" Term "}"
   16             | %empty

   17 FunctionParameters: FunctionParameters "*" Type
   18                   | Type

   19 MaybeFunctionParameters: FunctionParameters
   20                        | %empty

   21 ProgramFunctionDefinition: "init" IdentifierPath
   22                          | "init" "{" MaybeInitializers "}"

   23 Initializer: Term
   24            | Term "->" Term
   25            | TwoOrMoreArguments "->" Term

   26 Initializers: Initializers "," Initializer
   27             | Initializer

   28 MaybeInitializers: Initializers
   29                  | %empty

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   32 Identifier: "identifier"

   33 Identifiers: Identifiers "," Identifier
   34            | Identifier

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   36                        | Identifier

   37 IdentifierPath: DotSeparatedIdentifiers
   38               | "." DotSeparatedIdentifiers

   39 Variable: Identifier ":" Type
   40         | Identifier

   41 Parameters: Parameters "," Variable
   42           | Variable

   43 MaybeParameters: "(" Parameters ")"
   44                | "(" error ")"
   45                | %empty

   46 Type: BasicType
   47     | ComposedType
   48     | RelationType
   49     | FixedSizedType

   50 BasicType: IdentifierPath

   51 ComposedType: IdentifierPath "<" Types ">"

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   53 FixedSizedType: IdentifierPath "'" Term

   54 Types: Types "," Type
   55      | Type

   56 Atom: Reference
   57     | BitNumber
   58     | IntegerNumber
   59     | FloatingNumber
   60     | RationalNumber
   61     | String
   62     | Undefined
   63     | Boolean

   64 Undefined: "undef"

   65 Boolean: "true"
   66        | "false"

   67 String: "string"

   68 BitNumber: "binary"
   69          | "hexadecimal"

   70 IntegerNumber: "integer"

   71 FloatingNumber: "floating"

   72 RationalNumber: "rational"

   73 Reference: "@" IdentifierPath

   74 Term: DirectCallExpression
   75     | IndirectCallExpression
   76     | ConditionalExpression
   77     | UniversalQuantifierExpression
   78     | ExistentialQuantifierExpression
   79     | Expression
   80     | List
   81     | Range
   82     | Atom

   83 Expression: "(" Term ")"
   84           | "+" Term
   85           | "-" Term
   86           | Term "+" Term
   87           | Term "-" Term
   88           | Term "*" Term
   89           | Term "/" Term
   90           | Term "%" Term
   91           | Term "^" Term
   92           | Term "!=" Term
   93           | Term "=" Term
   94           | Term "<" Term
   95           | Term ">" Term
   96           | Term "<=" Term
   97           | Term ">=" Term
   98           | Term "or" Term
   99           | Term "xor" Term
  100           | Term "and" Term
  101           | Term "=>" Term
  102           | Term "implies" Term
  103           | "not" Term

  104 Range: "[" Term ".." Term "]"

  105 List: "[" "]"
  106     | "[" Terms "]"

  107 Terms: Terms "," Term
  108      | Term

  109 Arguments: "(" Terms ")"
  110          | "(" error ")"
  111          | "(" ")"

  112 TwoOrMoreArguments: "(" Term "," Terms ")"

  113 DirectCallExpression: IdentifierPath
  114                     | IdentifierPath Arguments

  115 IndirectCallExpression: "(" "*" Term ")" Arguments

  116 ConditionalExpression: "if" Term "then" Term "else" Term

  117 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  118 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  119 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  120               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  121 Rule: SkipRule
  122     | ConditionalRule
  123     | CaseRule
  124     | LetRule
  125     | ForallRule
  126     | ChooseRule
  127     | IterateRule
  128     | BlockRule
  129     | SequenceRule
  130     | UpdateRule
  131     | CallRule

  132 Rules: Rules Rule
  133      | Rule

  134 SkipRule: "skip"

  135 ConditionalRule: "if" Term "then" Rule
  136                | "if" Term "then" Rule "else" Rule

  137 CaseRule: "case" Term "of" "{" CaseLabels "}"
  138         | "case" Term "of" "{" error "}"

  139 CaseLabel: "default" ":" Rule
  140          | "_" ":" Rule
  141          | Term ":" Rule

  142 CaseLabels: CaseLabel CaseLabels
  143           | CaseLabel

  144 LetRule: "let" Variable "=" Term "in" Rule

  145 ForallRule: "forall" Variable "in" Term "do" Rule

  146 ChooseRule: "choose" Variable "in" Term "do" Rule

  147 IterateRule: "iterate" Rule

  148 BlockRule: "{" Rules "}"
  149          | "par" Rules "endpar"
  150          | "{" error "}"
  151          | "par" error "endpar"

  152 SequenceRule: "{|" Rules "|}"
  153             | "seq" Rules "endseq"
  154             | "{|" error "|}"
  155             | "seq" error "endseq"

  156 UpdateRule: DirectCallExpression ":=" Term

  157 CallRule: "call" DirectCallExpression
  158         | DirectCallExpression
  159         | "call" IndirectCallExpression
  160         | IndirectCallExpression

  161 Attribute: BasicAttribute
  162          | ExpressionAttribute

  163 Attributes: Attributes "," Attribute
  164           | Attribute

  165 BasicAttribute: Identifier

  166 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 6 44 110 138 150 151 154 155
"CASM" (258) 1
"init" (259) 21 22
"derived" (260) 30
"enum" (261) 31
"rule" (262) 119 120
"function" (263) 11
"initially" (264) 13
"defined" (265) 15
"seq" (266) 153 155
"endseq" (267) 153 155
"par" (268) 149 151
"endpar" (269) 149 151
"skip" (270) 134
"let" (271) 144
"in" (272) 117 118 144 145 146
"forall" (273) 117 145
"choose" (274) 146
"iterate" (275) 147
"do" (276) 145 146
"call" (277) 157 159
"if" (278) 116 135 136
"then" (279) 116 135 136
"else" (280) 116 136
"case" (281) 137 138
"of" (282) 137 138
"default" (283) 139
"holds" (284) 117
"exists" (285) 118
"with" (286) 118
"undef" (287) 64
"false" (288) 66
"true" (289) 65
"and" (290) 100
"or" (291) 98
"xor" (292) 99
"implies" (293) 102
"not" (294) 103
"+" (295) 84 86
"-" (296) 85 87
"=" (297) 30 31 93 119 120 144
"(" (298) 43 44 83 109 110 111 112 115
")" (299) 43 44 83 109 110 111 112 115
"[" (300) 7 104 105 106
"]" (301) 7 104 105 106
"{" (302) 13 15 22 31 137 138 148 150
"}" (303) 13 15 22 31 137 138 148 150
":" (304) 11 39 139 140 141
"_" (305) 140
"@" (306) 73
"," (307) 26 33 41 54 107 112 163
"<" (308) 51 52 94
">" (309) 51 52 95
"*" (310) 17 88 115
"/" (311) 89
"%" (312) 90
"^" (313) 91
"'" (314) 53
".." (315) 104
"." (316) 35 38
"->" (317) 11 24 25 30 52 120
"=>" (318) 101
":=" (319) 156
"!=" (320) 92
"<=" (321) 96
">=" (322) 97
"{|" (323) 152 154
"|}" (324) 152 154
"binary" (325) 68
"hexadecimal" (326) 69
"integer" (327) 70
"rational" (328) 72
"floating" (329) 71
"string" (330) 67
"identifier" (331) 32
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5 6, on right: 7 8
AttributedDefinition (84)
    on left: 7 8, on right: 9 10
Definitions (85)
    on left: 9 10, on right: 1 9
FunctionDefinition (86)
    on left: 11 12, on right: 2
MaybeInitially (87)
    on left: 13 14, on right: 11
MaybeDefined (88)
    on left: 15 16, on right: 11
FunctionParameters (89)
    on left: 17 18, on right: 17 19
MaybeFunctionParameters (90)
    on left: 19 20, on right: 11 52
ProgramFunctionDefinition (91)
    on left: 21 22, on right: 12
Initializer (92)
    on left: 23 24 25, on right: 26 27
Initializers (93)
    on left: 26 27, on right: 26 28
MaybeInitializers (94)
    on left: 28 29, on right: 13 22
DerivedDefinition (95)
    on left: 30, on right: 3
EnumerationDefinition (96)
    on left: 31, on right: 5
Identifier (97)
    on left: 32, on right: 11 30 31 33 34 35 36 39 40 119 120 165 166
Identifiers (98)
    on left: 33 34, on right: 31 33
DotSeparatedIdentifiers (99)
    on left: 35 36, on right: 35 37 38
IdentifierPath (100)
    on left: 37 38, on right: 21 50 51 52 53 73 113 114
Variable (101)
    on left: 39 40, on right: 41 42 117 118 144 145 146
Parameters (102)
    on left: 41 42, on right: 41 43
MaybeParameters (103)
    on left: 43 44 45, on right: 30 119 120
Type (104)
    on left: 46 47 48 49, on right: 11 17 18 30 39 52 54 55 120
BasicType (105)
    on left: 50, on right: 46
ComposedType (106)
    on left: 51, on right: 47
RelationType (107)
    on left: 52, on right: 48
FixedSizedType (108)
    on left: 53, on right: 49
Types (109)
    on left: 54 55, on right: 51 54
Atom (110)
    on left: 56 57 58 59 60 61 62 63, on right: 82
Undefined (111)
    on left: 64, on right: 62
Boolean (112)
    on left: 65 66, on right: 63
String (113)
    on left: 67, on right: 61
BitNumber (114)
    on left: 68 69, on right: 57
IntegerNumber (115)
    on left: 70, on right: 58
FloatingNumber (116)
    on left: 71, on right: 59
RationalNumber (117)
    on left: 72, on right: 60
Reference (118)
    on left: 73, on right: 56
Term (119)
    on left: 74 75 76 77 78 79 80 81 82, on right: 15 23 24 25 30 53
    83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104 107 108 112 115 116 117 118 135 136 137 138 141 144 145
    146 156 166
Expression (120)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103, on right: 79
Range (121)
    on left: 104, on right: 81
List (122)
    on left: 105 106, on right: 80
Terms (123)
    on left: 107 108, on right: 106 107 109 112
Arguments (124)
    on left: 109 110 111, on right: 114 115
TwoOrMoreArguments (125)
    on left: 112, on right: 25
DirectCallExpression (126)
    on left: 113 114, on right: 74 156 157 158
IndirectCallExpression (127)
    on left: 115, on right: 75 159 160
ConditionalExpression (128)
    on left: 116, on right: 76
UniversalQuantifierExpression (129)
    on left: 117, on right: 77
ExistentialQuantifierExpression (130)
    on left: 118, on right: 78
RuleDefinition (131)
    on left: 119 120, on right: 4
Rule (132)
    on left: 121 122 123 124 125 126 127 128 129 130 131, on right:
    119 120 132 133 135 136 139 140 141 144 145 146 147
Rules (133)
    on left: 132 133, on right: 132 148 149 152 153
SkipRule (134)
    on left: 134, on right: 121
ConditionalRule (135)
    on left: 135 136, on right: 122
CaseRule (136)
    on left: 137 138, on right: 123
CaseLabel (137)
    on left: 139 140 141, on right: 142 143
CaseLabels (138)
    on left: 142 143, on right: 137 142
LetRule (139)
    on left: 144, on right: 124
ForallRule (140)
    on left: 145, on right: 125
ChooseRule (141)
    on left: 146, on right: 126
IterateRule (142)
    on left: 147, on right: 127
BlockRule (143)
    on left: 148 149 150 151, on right: 128
SequenceRule (144)
    on left: 152 153 154 155, on right: 129
UpdateRule (145)
    on left: 156, on right: 130
CallRule (146)
    on left: 157 158 159 160, on right: 131
Attribute (147)
    on left: 161 162, on right: 163 164
Attributes (148)
    on left: 163 164, on right: 7 163
BasicAttribute (149)
    on left: 165, on right: 161
ExpressionAttribute (150)
    on left: 166, on right: 162


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    Definition                 go to state 10
    AttributedDefinition       go to state 11
    Definitions                go to state 12
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 18


State 3

    6 Definition: error .

    $default  reduce using rule 6 (Definition)


State 4

   21 ProgramFunctionDefinition: "init" . IdentifierPath
   22                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 19
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 24


State 5

   30 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 25


State 6

   31 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier  go to state 26


State 7

  119 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  120               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 27


State 8

   11 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 21

    Identifier  go to state 28


State 9

    7 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 30
    Attributes           go to state 31
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 10

    8 AttributedDefinition: Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 11

   10 Definitions: AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 12

    1 Specification: "CASM" Definitions .
    9 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 10
    AttributedDefinition       go to state 34
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 13

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 14

   12 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 12 (FunctionDefinition)


State 15

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 16

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 17

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 18

    0 $accept: Specification "end of file" .

    $default  accept


State 19

   22 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 55
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 20

   38 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 76


State 21

   32 Identifier: "identifier" .

    $default  reduce using rule 32 (Identifier)


State 22

   36 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 36 (DotSeparatedIdentifiers)


State 23

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 77

    $default  reduce using rule 37 (IdentifierPath)


State 24

   21 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 25

   30 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 79


State 26

   31 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 80


State 27

  119 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  120               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 81


State 28

   11 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 82


State 29

  165 BasicAttribute: Identifier .
  166 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 165 (BasicAttribute)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 84
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 30

  164 Attributes: Attribute .

    $default  reduce using rule 164 (Attributes)


State 31

    7 AttributedDefinition: "[" Attributes . "]" Definition
  163 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 85
    ","  shift, and go to state 86


State 32

  161 Attribute: BasicAttribute .

    $default  reduce using rule 161 (Attribute)


State 33

  162 Attribute: ExpressionAttribute .

    $default  reduce using rule 162 (Attribute)


State 34

    9 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 35

  117 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 88


State 36

  116 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 89
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 37

  118 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 90


State 38

   64 Undefined: "undef" .

    $default  reduce using rule 64 (Undefined)


State 39

   66 Boolean: "false" .

    $default  reduce using rule 66 (Boolean)


State 40

   65 Boolean: "true" .

    $default  reduce using rule 65 (Boolean)


State 41

  103 Expression: "not" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 91
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 42

   84 Expression: "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 92
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 43

   85 Expression: "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 93
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 44

   83 Expression: "(" . Term ")"
  112 TwoOrMoreArguments: "(" . Term "," Terms ")"
  115 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 94
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 95
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 45

  104 Range: "[" . Term ".." Term "]"
  105 List: "[" . "]"
  106     | "[" . Terms "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "]"            shift, and go to state 96
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 97
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 98
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 46

   73 Reference: "@" . IdentifierPath

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 99


State 47

   68 BitNumber: "binary" .

    $default  reduce using rule 68 (BitNumber)


State 48

   69 BitNumber: "hexadecimal" .

    $default  reduce using rule 69 (BitNumber)


State 49

   70 IntegerNumber: "integer" .

    $default  reduce using rule 70 (IntegerNumber)


State 50

   72 RationalNumber: "rational" .

    $default  reduce using rule 72 (RationalNumber)


State 51

   71 FloatingNumber: "floating" .

    $default  reduce using rule 71 (FloatingNumber)


State 52

   67 String: "string" .

    $default  reduce using rule 67 (String)


State 53

   27 Initializers: Initializer .

    $default  reduce using rule 27 (Initializers)


State 54

   26 Initializers: Initializers . "," Initializer
   28 MaybeInitializers: Initializers .

    ","  shift, and go to state 100

    $default  reduce using rule 28 (MaybeInitializers)


State 55

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 101


State 56

  113 DirectCallExpression: IdentifierPath .
  114                     | IdentifierPath . Arguments

    "("  shift, and go to state 102

    $default  reduce using rule 113 (DirectCallExpression)

    Arguments  go to state 103


State 57

   82 Term: Atom .

    $default  reduce using rule 82 (Term)


State 58

   62 Atom: Undefined .

    $default  reduce using rule 62 (Atom)


State 59

   63 Atom: Boolean .

    $default  reduce using rule 63 (Atom)


State 60

   61 Atom: String .

    $default  reduce using rule 61 (Atom)


State 61

   57 Atom: BitNumber .

    $default  reduce using rule 57 (Atom)


State 62

   58 Atom: IntegerNumber .

    $default  reduce using rule 58 (Atom)


State 63

   59 Atom: FloatingNumber .

    $default  reduce using rule 59 (Atom)


State 64

   60 Atom: RationalNumber .

    $default  reduce using rule 60 (Atom)


State 65

   56 Atom: Reference .

    $default  reduce using rule 56 (Atom)


State 66

   23 Initializer: Term .
   24            | Term . "->" Term
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "->"       shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 23 (Initializer)


State 67

   79 Term: Expression .

    $default  reduce using rule 79 (Term)


State 68

   81 Term: Range .

    $default  reduce using rule 81 (Term)


State 69

   80 Term: List .

    $default  reduce using rule 80 (Term)


State 70

   25 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 122


State 71

   74 Term: DirectCallExpression .

    $default  reduce using rule 74 (Term)


State 72

   75 Term: IndirectCallExpression .

    $default  reduce using rule 75 (Term)


State 73

   76 Term: ConditionalExpression .

    $default  reduce using rule 76 (Term)


State 74

   77 Term: UniversalQuantifierExpression .

    $default  reduce using rule 77 (Term)


State 75

   78 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 78 (Term)


State 76

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   38 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 38 (IdentifierPath)


State 77

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 123


State 78

   43 MaybeParameters: "(" . Parameters ")"
   44                | "(" . error ")"

    error         shift, and go to state 124
    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 125
    Parameters  go to state 126


State 79

   30 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 127


State 80

   31 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 128


State 81

  119 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  120               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 129
    "->"  shift, and go to state 130


State 82

   11 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 131
    MaybeFunctionParameters  go to state 132
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 134
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 83

   83 Expression: "(" . Term ")"
  115 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 94
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 139
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 84

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  166 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 166 (ExpressionAttribute)


State 85

    7 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8

    Definition                 go to state 140
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 86

  163 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 141
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 87

   39 Variable: Identifier . ":" Type
   40         | Identifier .

    ":"  shift, and go to state 142

    $default  reduce using rule 40 (Variable)


State 88

  117 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 143


State 89

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  116 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 144
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 90

  118 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 145


State 91

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  103           | "not" Term .

    $default  reduce using rule 103 (Expression)


State 92

   84 Expression: "+" Term .
   86           | Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    $default  reduce using rule 84 (Expression)


State 93

   85 Expression: "-" Term .
   86           | Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    $default  reduce using rule 85 (Expression)


State 94

  115 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 146
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 95

   83 Expression: "(" Term . ")"
   86           | Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  112 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 147
    ","        shift, and go to state 148
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 96

  105 List: "[" "]" .

    $default  reduce using rule 105 (List)


State 97

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  104 Range: "[" Term . ".." Term "]"
  108 Terms: Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    ".."       shift, and go to state 149
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 108 (Terms)


State 98

  106 List: "[" Terms . "]"
  107 Terms: Terms . "," Term

    "]"  shift, and go to state 150
    ","  shift, and go to state 151


State 99

   73 Reference: "@" IdentifierPath .

    $default  reduce using rule 73 (Reference)


State 100

   26 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Initializer                      go to state 152
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 101

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 102

  109 Arguments: "(" . Terms ")"
  110          | "(" . error ")"
  111          | "(" . ")"

    error          shift, and go to state 153
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    ")"            shift, and go to state 154
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 155
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 156
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 103

  114 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 114 (DirectCallExpression)


State 104

  100 Expression: Term "and" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 157
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 105

   98 Expression: Term "or" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 158
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 106

   99 Expression: Term "xor" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 159
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 107

  102 Expression: Term "implies" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 160
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 108

   86 Expression: Term "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 161
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 109

   87 Expression: Term "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 162
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 110

   93 Expression: Term "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 163
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 111

   94 Expression: Term "<" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 164
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 112

   95 Expression: Term ">" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 165
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 113

   88 Expression: Term "*" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 166
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 114

   89 Expression: Term "/" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 167
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 115

   90 Expression: Term "%" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 168
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 116

   91 Expression: Term "^" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 169
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 117

   24 Initializer: Term "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 170
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 118

  101 Expression: Term "=>" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 171
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 119

   92 Expression: Term "!=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 172
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 120

   96 Expression: Term "<=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 173
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 121

   97 Expression: Term ">=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 174
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 122

   25 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 175
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 123

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 124

   44 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 176


State 125

   42 Parameters: Variable .

    $default  reduce using rule 42 (Parameters)


State 126

   41 Parameters: Parameters . "," Variable
   43 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 177
    ","  shift, and go to state 178


State 127

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 179
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 128

   31 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier   go to state 180
    Identifiers  go to state 181


State 129

  119 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 197
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 130

  120 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 209
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 131

   17 FunctionParameters: FunctionParameters . "*" Type
   19 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 210

    $default  reduce using rule 19 (MaybeFunctionParameters)


State 132

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 211


State 133

   50 BasicType: IdentifierPath .
   51 ComposedType: IdentifierPath . "<" Types ">"
   52 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   53 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 212
    "'"  shift, and go to state 213

    $default  reduce using rule 50 (BasicType)


State 134

   18 FunctionParameters: Type .

    $default  reduce using rule 18 (FunctionParameters)


State 135

   46 Type: BasicType .

    $default  reduce using rule 46 (Type)


State 136

   47 Type: ComposedType .

    $default  reduce using rule 47 (Type)


State 137

   48 Type: RelationType .

    $default  reduce using rule 48 (Type)


State 138

   49 Type: FixedSizedType .

    $default  reduce using rule 49 (Type)


State 139

   83 Expression: "(" Term . ")"
   86           | Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 147
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 140

    7 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 141

  163 Attributes: Attributes "," Attribute .

    $default  reduce using rule 163 (Attributes)


State 142

   39 Variable: Identifier ":" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 214
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 143

  117 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 215
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 144

  116 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 216
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 145

  118 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 217
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 146

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  115 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 218
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 147

   83 Expression: "(" Term ")" .

    $default  reduce using rule 83 (Expression)


State 148

  112 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 155
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 219
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 149

  104 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 220
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 150

  106 List: "[" Terms "]" .

    $default  reduce using rule 106 (List)


State 151

  107 Terms: Terms "," . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 221
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 152

   26 Initializers: Initializers "," Initializer .

    $default  reduce using rule 26 (Initializers)


State 153

  110 Arguments: "(" error . ")"

    ")"  shift, and go to state 222


State 154

  111 Arguments: "(" ")" .

    $default  reduce using rule 111 (Arguments)


State 155

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  108 Terms: Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 108 (Terms)


State 156

  107 Terms: Terms . "," Term
  109 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 223
    ","  shift, and go to state 151


State 157

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  100           | Term "and" Term .
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "="   shift, and go to state 110
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "!="  shift, and go to state 119
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 100 (Expression)


State 158

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   98           | Term "or" Term .
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"  shift, and go to state 104
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 98 (Expression)


State 159

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
   99           | Term "xor" Term .
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"  shift, and go to state 104
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 99 (Expression)


State 160

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  102           | Term "implies" Term .

    "and"  shift, and go to state 104
    "or"   shift, and go to state 105
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 102 (Expression)


State 161

   86 Expression: Term . "+" Term
   86           | Term "+" Term .
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 86 (Expression)


State 162

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   87           | Term "-" Term .
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 87 (Expression)


State 163

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   93           | Term "=" Term .
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 93 (Expression)


State 164

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   94           | Term "<" Term .
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 94 (Expression)


State 165

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   95           | Term ">" Term .
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 95 (Expression)


State 166

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   88           | Term "*" Term .
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 88 (Expression)


State 167

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   89           | Term "/" Term .
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 89 (Expression)


State 168

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   90           | Term "%" Term .
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 90 (Expression)


State 169

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   91           | Term "^" Term .
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    $default  reduce using rule 91 (Expression)


State 170

   24 Initializer: Term "->" Term .
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 24 (Initializer)


State 171

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  101           | Term "=>" Term .
  102           | Term . "implies" Term

    "and"  shift, and go to state 104
    "or"   shift, and go to state 105
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 101 (Expression)


State 172

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   92           | Term "!=" Term .
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 92 (Expression)


State 173

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   96           | Term "<=" Term .
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 96 (Expression)


State 174

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   97           | Term ">=" Term .
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 97 (Expression)


State 175

   25 Initializer: TwoOrMoreArguments "->" Term .
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 25 (Initializer)


State 176

   44 MaybeParameters: "(" error ")" .

    $default  reduce using rule 44 (MaybeParameters)


State 177

   43 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 43 (MaybeParameters)


State 178

   41 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 224


State 179

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 225


State 180

   34 Identifiers: Identifier .

    $default  reduce using rule 34 (Identifiers)


State 181

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   33 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 226
    ","  shift, and go to state 227


State 182

  153 SequenceRule: "seq" . Rules "endseq"
  155             | "seq" . error "endseq"

    error         shift, and go to state 228
    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 229
    Rules                    go to state 230
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 183

  149 BlockRule: "par" . Rules "endpar"
  151          | "par" . error "endpar"

    error         shift, and go to state 231
    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 229
    Rules                    go to state 232
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 184

  134 SkipRule: "skip" .

    $default  reduce using rule 134 (SkipRule)


State 185

  144 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 233


State 186

  145 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 234


State 187

  146 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 235


State 188

  147 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 236
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 189

  157 CallRule: "call" . DirectCallExpression
  159         | "call" . IndirectCallExpression

    "("           shift, and go to state 192
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 237
    IndirectCallExpression   go to state 238


State 190

  135 ConditionalRule: "if" . Term "then" Rule
  136                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 239
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 191

  137 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  138         | "case" . Term "of" "{" error "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 240
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 192

  115 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 94


State 193

  148 BlockRule: "{" . Rules "}"
  150          | "{" . error "}"

    error         shift, and go to state 241
    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 229
    Rules                    go to state 242
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 194

  152 SequenceRule: "{|" . Rules "|}"
  154             | "{|" . error "|}"

    error         shift, and go to state 243
    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 229
    Rules                    go to state 244
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 195

  156 UpdateRule: DirectCallExpression . ":=" Term
  158 CallRule: DirectCallExpression .

    ":="  shift, and go to state 245

    $default  reduce using rule 158 (CallRule)


State 196

  160 CallRule: IndirectCallExpression .

    $default  reduce using rule 160 (CallRule)


State 197

  119 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 119 (RuleDefinition)


State 198

  121 Rule: SkipRule .

    $default  reduce using rule 121 (Rule)


State 199

  122 Rule: ConditionalRule .

    $default  reduce using rule 122 (Rule)


State 200

  123 Rule: CaseRule .

    $default  reduce using rule 123 (Rule)


State 201

  124 Rule: LetRule .

    $default  reduce using rule 124 (Rule)


State 202

  125 Rule: ForallRule .

    $default  reduce using rule 125 (Rule)


State 203

  126 Rule: ChooseRule .

    $default  reduce using rule 126 (Rule)


State 204

  127 Rule: IterateRule .

    $default  reduce using rule 127 (Rule)


State 205

  128 Rule: BlockRule .

    $default  reduce using rule 128 (Rule)


State 206

  129 Rule: SequenceRule .

    $default  reduce using rule 129 (Rule)


State 207

  130 Rule: UpdateRule .

    $default  reduce using rule 130 (Rule)


State 208

  131 Rule: CallRule .

    $default  reduce using rule 131 (Rule)


State 209

  120 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 246


State 210

   17 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 247
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 211

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 248
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 212

   51 ComposedType: IdentifierPath "<" . Types ">"
   52 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 131
    MaybeFunctionParameters  go to state 249
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 250
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138
    Types                    go to state 251


State 213

   53 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 252
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 214

   39 Variable: Identifier ":" Type .

    $default  reduce using rule 39 (Variable)


State 215

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  117 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 253
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 216

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  116 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 254
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 217

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  118 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 255
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 218

  115 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 102

    Arguments  go to state 256


State 219

  107 Terms: Terms . "," Term
  112 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 257
    ","  shift, and go to state 151


State 220

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  104 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "]"        shift, and go to state 258
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 221

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  107 Terms: Terms "," Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 107 (Terms)


State 222

  110 Arguments: "(" error ")" .

    $default  reduce using rule 110 (Arguments)


State 223

  109 Arguments: "(" Terms ")" .

    $default  reduce using rule 109 (Arguments)


State 224

   41 Parameters: Parameters "," Variable .

    $default  reduce using rule 41 (Parameters)


State 225

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 259
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 226

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 31 (EnumerationDefinition)


State 227

   33 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 260


State 228

  155 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 261


State 229

  133 Rules: Rule .

    $default  reduce using rule 133 (Rules)


State 230

  132 Rules: Rules . Rule
  153 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 182
    "endseq"      shift, and go to state 262
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 263
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 231

  151 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 264


State 232

  132 Rules: Rules . Rule
  149 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "endpar"      shift, and go to state 265
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 263
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 233

  144 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 266


State 234

  145 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 267


State 235

  146 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 268


State 236

  147 IterateRule: "iterate" Rule .

    $default  reduce using rule 147 (IterateRule)


State 237

  157 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 157 (CallRule)


State 238

  159 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 159 (CallRule)


State 239

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  135 ConditionalRule: "if" Term . "then" Rule
  136                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 269
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 240

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  137 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  138         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 270
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 241

  150 BlockRule: "{" error . "}"

    "}"  shift, and go to state 271


State 242

  132 Rules: Rules . Rule
  148 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "}"           shift, and go to state 272
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 263
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 243

  154 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 273


State 244

  132 Rules: Rules . Rule
  152 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "|}"          shift, and go to state 274
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 263
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 245

  156 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 275
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 246

  120 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 276
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 247

   17 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 17 (FunctionParameters)


State 248

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 277

    $default  reduce using rule 16 (MaybeDefined)

    MaybeDefined  go to state 278


State 249

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 279


State 250

   18 FunctionParameters: Type .
   55 Types: Type .

    ","       reduce using rule 55 (Types)
    ">"       reduce using rule 55 (Types)
    $default  reduce using rule 18 (FunctionParameters)


State 251

   51 ComposedType: IdentifierPath "<" Types . ">"
   54 Types: Types . "," Type

    ","  shift, and go to state 280
    ">"  shift, and go to state 281


State 252

   53 FixedSizedType: IdentifierPath "'" Term .
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "<"        shift, and go to state 111
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 53 (FixedSizedType)


State 253

  117 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 282
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 254

  116 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 283
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 255

  118 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 284
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 256

  115 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 115 (IndirectCallExpression)


State 257

  112 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 112 (TwoOrMoreArguments)


State 258

  104 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 104 (Range)


State 259

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 30 (DerivedDefinition)


State 260

   33 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 33 (Identifiers)


State 261

  155 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 155 (SequenceRule)


State 262

  153 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 153 (SequenceRule)


State 263

  132 Rules: Rules Rule .

    $default  reduce using rule 132 (Rules)


State 264

  151 BlockRule: "par" error "endpar" .

    $default  reduce using rule 151 (BlockRule)


State 265

  149 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 149 (BlockRule)


State 266

  144 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 285
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 267

  145 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 286
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 268

  146 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 287
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 269

  135 ConditionalRule: "if" Term "then" . Rule
  136                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 288
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 270

  137 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  138         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 289


State 271

  150 BlockRule: "{" error "}" .

    $default  reduce using rule 150 (BlockRule)


State 272

  148 BlockRule: "{" Rules "}" .

    $default  reduce using rule 148 (BlockRule)


State 273

  154 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 154 (SequenceRule)


State 274

  152 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 152 (SequenceRule)


State 275

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  156 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 156 (UpdateRule)


State 276

  120 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 120 (RuleDefinition)


State 277

   15 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 290


State 278

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 291

    $default  reduce using rule 14 (MaybeInitially)

    MaybeInitially  go to state 292


State 279

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 293
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 280

   54 Types: Types "," . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 133
    Type                     go to state 294
    BasicType                go to state 135
    ComposedType             go to state 136
    RelationType             go to state 137
    FixedSizedType           go to state 138


State 281

   51 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 51 (ComposedType)


State 282

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  117 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 117 (UniversalQuantifierExpression)


State 283

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  116 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 116 (ConditionalExpression)


State 284

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  118 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 118 (ExistentialQuantifierExpression)


State 285

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  144 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 295
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 286

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  145 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 296
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 287

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  146 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 297
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 288

  135 ConditionalRule: "if" Term "then" Rule .
  136                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 298

    $default  reduce using rule 135 (ConditionalRule)


State 289

  137 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  138         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 299
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 300
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 301
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 302
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 303
    CaseLabels                       go to state 304


State 290

   15 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 305
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 291

   13 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 306


State 292

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 11 (FunctionDefinition)


State 293

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 307


State 294

   54 Types: Types "," Type .

    $default  reduce using rule 54 (Types)


State 295

  144 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 308
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 296

  145 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 309
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 297

  146 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 310
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 298

  136 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 311
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 299

  138 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 312


State 300

  139 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 313


State 301

  140 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 314


State 302

   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term
  141 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ":"        shift, and go to state 315
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 303

  142 CaseLabels: CaseLabel . CaseLabels
  143           | CaseLabel .

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 300
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 301
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 143 (CaseLabels)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 302
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 303
    CaseLabels                       go to state 316


State 304

  137 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 317


State 305

   15 MaybeDefined: "defined" "{" Term . "}"
   86 Expression: Term . "+" Term
   87           | Term . "-" Term
   88           | Term . "*" Term
   89           | Term . "/" Term
   90           | Term . "%" Term
   91           | Term . "^" Term
   92           | Term . "!=" Term
   93           | Term . "=" Term
   94           | Term . "<" Term
   95           | Term . ">" Term
   96           | Term . "<=" Term
   97           | Term . ">=" Term
   98           | Term . "or" Term
   99           | Term . "xor" Term
  100           | Term . "and" Term
  101           | Term . "=>" Term
  102           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "}"        shift, and go to state 318
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 306

   13 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 319
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 307

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 52 (RelationType)


State 308

  144 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 144 (LetRule)


State 309

  145 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 145 (ForallRule)


State 310

  146 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 146 (ChooseRule)


State 311

  136 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 136 (ConditionalRule)


State 312

  138 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 138 (CaseRule)


State 313

  139 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 320
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 314

  140 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 321
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 315

  141 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 182
    "par"         shift, and go to state 183
    "skip"        shift, and go to state 184
    "let"         shift, and go to state 185
    "forall"      shift, and go to state 186
    "choose"      shift, and go to state 187
    "iterate"     shift, and go to state 188
    "call"        shift, and go to state 189
    "if"          shift, and go to state 190
    "case"        shift, and go to state 191
    "("           shift, and go to state 192
    "{"           shift, and go to state 193
    "."           shift, and go to state 20
    "{|"          shift, and go to state 194
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 195
    IndirectCallExpression   go to state 196
    Rule                     go to state 322
    SkipRule                 go to state 198
    ConditionalRule          go to state 199
    CaseRule                 go to state 200
    LetRule                  go to state 201
    ForallRule               go to state 202
    ChooseRule               go to state 203
    IterateRule              go to state 204
    BlockRule                go to state 205
    SequenceRule             go to state 206
    UpdateRule               go to state 207
    CallRule                 go to state 208


State 316

  142 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 142 (CaseLabels)


State 317

  137 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 137 (CaseRule)


State 318

   15 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 15 (MaybeDefined)


State 319

   13 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 323


State 320

  139 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 139 (CaseLabel)


State 321

  140 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 140 (CaseLabel)


State 322

  141 CaseLabel: Term ":" Rule .

    $default  reduce using rule 141 (CaseLabel)


State 323

   13 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 13 (MaybeInitially)
