Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | error

    7 AttributedDefinition: "[" Attributes "]" Definition
    8                     | Definition

    9 Definitions: Definitions AttributedDefinition
   10            | AttributedDefinition

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   12                   | ProgramFunctionDefinition

   13 MaybeInitially: "initially" "{" MaybeInitializers "}"
   14               | %empty

   15 MaybeDefined: "defined" "{" Term "}"
   16             | %empty

   17 FunctionParameters: FunctionParameters "*" Type
   18                   | Type

   19 MaybeFunctionParameters: FunctionParameters
   20                        | %empty

   21 ProgramFunctionDefinition: "init" IdentifierPath
   22                          | "init" "{" MaybeInitializers "}"

   23 Initializer: Term
   24            | Term "->" Term
   25            | TwoOrMoreArguments "->" Term

   26 Initializers: Initializers "," Initializer
   27             | Initializer

   28 MaybeInitializers: Initializers
   29                  | %empty

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   32 Identifier: "identifier"

   33 Identifiers: Identifiers "," Identifier
   34            | Identifier

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   36                        | Identifier

   37 IdentifierPath: DotSeparatedIdentifiers
   38               | "." DotSeparatedIdentifiers

   39 Variable: Identifier ":" Type
   40         | Identifier

   41 Parameters: Parameters "," Variable
   42           | Variable

   43 MaybeParameters: "(" Parameters ")"
   44                | %empty

   45 Type: BasicType
   46     | ComposedType
   47     | RelationType
   48     | FixedSizedType

   49 BasicType: IdentifierPath

   50 ComposedType: IdentifierPath "<" Types ">"

   51 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   52 FixedSizedType: IdentifierPath "'" Term

   53 Types: Types "," Type
   54      | Type

   55 Atom: Reference
   56     | BitNumber
   57     | IntegerNumber
   58     | FloatingNumber
   59     | RationalNumber
   60     | String
   61     | Undefined
   62     | Boolean

   63 Undefined: "undef"

   64 Boolean: "true"
   65        | "false"

   66 String: "string"

   67 BitNumber: "binary"
   68          | "hexadecimal"

   69 IntegerNumber: "integer"

   70 FloatingNumber: "floating"

   71 RationalNumber: "rational"

   72 Reference: "@" IdentifierPath

   73 Term: DirectCallExpression
   74     | IndirectCallExpression
   75     | ConditionalExpression
   76     | UniversalQuantifierExpression
   77     | ExistentialQuantifierExpression
   78     | Expression
   79     | List
   80     | Range
   81     | Atom

   82 Expression: "(" Term ")"
   83           | "+" Term
   84           | "-" Term
   85           | Term "+" Term
   86           | Term "-" Term
   87           | Term "*" Term
   88           | Term "/" Term
   89           | Term "%" Term
   90           | Term "^" Term
   91           | Term "!=" Term
   92           | Term "=" Term
   93           | Term "<" Term
   94           | Term ">" Term
   95           | Term "<=" Term
   96           | Term ">=" Term
   97           | Term "or" Term
   98           | Term "xor" Term
   99           | Term "and" Term
  100           | Term "=>" Term
  101           | Term "implies" Term
  102           | "not" Term

  103 Range: "[" Term ".." Term "]"

  104 List: "[" "]"
  105     | "[" Terms "]"

  106 Terms: Terms "," Term
  107      | Term

  108 Arguments: "(" Terms ")"
  109          | "(" error ")"
  110          | "(" ")"

  111 TwoOrMoreArguments: "(" Term "," Terms ")"

  112 DirectCallExpression: IdentifierPath
  113                     | IdentifierPath Arguments

  114 IndirectCallExpression: "(" "*" Term ")" Arguments

  115 ConditionalExpression: "if" Term "then" Term "else" Term

  116 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  117 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  118 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  119               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  120 Rule: SkipRule
  121     | ConditionalRule
  122     | CaseRule
  123     | LetRule
  124     | ForallRule
  125     | ChooseRule
  126     | IterateRule
  127     | BlockRule
  128     | SequenceRule
  129     | UpdateRule
  130     | CallRule

  131 Rules: Rules Rule
  132      | Rule

  133 SkipRule: "skip"

  134 ConditionalRule: "if" Term "then" Rule
  135                | "if" Term "then" Rule "else" Rule

  136 CaseRule: "case" Term "of" "{" CaseLabels "}"
  137         | "case" Term "of" "{" error "}"

  138 CaseLabel: "default" ":" Rule
  139          | "_" ":" Rule
  140          | Term ":" Rule

  141 CaseLabels: CaseLabel CaseLabels
  142           | CaseLabel

  143 LetRule: "let" Variable "=" Term "in" Rule

  144 ForallRule: "forall" Variable "in" Term "do" Rule

  145 ChooseRule: "choose" Variable "in" Term "do" Rule

  146 IterateRule: "iterate" Rule

  147 BlockRule: "{" Rules "}"
  148          | "par" Rules "endpar"
  149          | "{" error "}"
  150          | "par" error "endpar"

  151 SequenceRule: "{|" Rules "|}"
  152             | "seq" Rules "endseq"
  153             | "{|" error "|}"
  154             | "seq" error "endseq"

  155 UpdateRule: DirectCallExpression ":=" Term

  156 CallRule: "call" DirectCallExpression
  157         | DirectCallExpression
  158         | "call" IndirectCallExpression
  159         | IndirectCallExpression

  160 Attribute: BasicAttribute
  161          | ExpressionAttribute

  162 Attributes: Attributes "," Attribute
  163           | Attribute

  164 BasicAttribute: Identifier

  165 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 6 109 137 149 150 153 154
"CASM" (258) 1
"init" (259) 21 22
"derived" (260) 30
"enum" (261) 31
"rule" (262) 118 119
"function" (263) 11
"initially" (264) 13
"defined" (265) 15
"seq" (266) 152 154
"endseq" (267) 152 154
"par" (268) 148 150
"endpar" (269) 148 150
"skip" (270) 133
"let" (271) 143
"in" (272) 116 117 143 144 145
"forall" (273) 116 144
"choose" (274) 145
"iterate" (275) 146
"do" (276) 144 145
"call" (277) 156 158
"if" (278) 115 134 135
"then" (279) 115 134 135
"else" (280) 115 135
"case" (281) 136 137
"of" (282) 136 137
"default" (283) 138
"holds" (284) 116
"exists" (285) 117
"with" (286) 117
"undef" (287) 63
"false" (288) 65
"true" (289) 64
"and" (290) 99
"or" (291) 97
"xor" (292) 98
"implies" (293) 101
"not" (294) 102
"+" (295) 83 85
"-" (296) 84 86
"=" (297) 30 31 92 118 119 143
"(" (298) 43 82 108 109 110 111 114
")" (299) 43 82 108 109 110 111 114
"[" (300) 7 103 104 105
"]" (301) 7 103 104 105
"{" (302) 13 15 22 31 136 137 147 149
"}" (303) 13 15 22 31 136 137 147 149
":" (304) 11 39 138 139 140
"_" (305) 139
"@" (306) 72
"," (307) 26 33 41 53 106 111 162
"<" (308) 50 51 93
">" (309) 50 51 94
"*" (310) 17 87 114
"/" (311) 88
"%" (312) 89
"^" (313) 90
"'" (314) 52
".." (315) 103
"." (316) 35 38
"->" (317) 11 24 25 30 51 119
"=>" (318) 100
":=" (319) 155
"!=" (320) 91
"<=" (321) 95
">=" (322) 96
"{|" (323) 151 153
"|}" (324) 151 153
"binary" (325) 67
"hexadecimal" (326) 68
"integer" (327) 69
"rational" (328) 71
"floating" (329) 70
"string" (330) 66
"identifier" (331) 32
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5 6, on right: 7 8
AttributedDefinition (84)
    on left: 7 8, on right: 9 10
Definitions (85)
    on left: 9 10, on right: 1 9
FunctionDefinition (86)
    on left: 11 12, on right: 2
MaybeInitially (87)
    on left: 13 14, on right: 11
MaybeDefined (88)
    on left: 15 16, on right: 11
FunctionParameters (89)
    on left: 17 18, on right: 17 19
MaybeFunctionParameters (90)
    on left: 19 20, on right: 11 51
ProgramFunctionDefinition (91)
    on left: 21 22, on right: 12
Initializer (92)
    on left: 23 24 25, on right: 26 27
Initializers (93)
    on left: 26 27, on right: 26 28
MaybeInitializers (94)
    on left: 28 29, on right: 13 22
DerivedDefinition (95)
    on left: 30, on right: 3
EnumerationDefinition (96)
    on left: 31, on right: 5
Identifier (97)
    on left: 32, on right: 11 30 31 33 34 35 36 39 40 118 119 164 165
Identifiers (98)
    on left: 33 34, on right: 31 33
DotSeparatedIdentifiers (99)
    on left: 35 36, on right: 35 37 38
IdentifierPath (100)
    on left: 37 38, on right: 21 49 50 51 52 72 112 113
Variable (101)
    on left: 39 40, on right: 41 42 116 117 143 144 145
Parameters (102)
    on left: 41 42, on right: 41 43
MaybeParameters (103)
    on left: 43 44, on right: 30 118 119
Type (104)
    on left: 45 46 47 48, on right: 11 17 18 30 39 51 53 54 119
BasicType (105)
    on left: 49, on right: 45
ComposedType (106)
    on left: 50, on right: 46
RelationType (107)
    on left: 51, on right: 47
FixedSizedType (108)
    on left: 52, on right: 48
Types (109)
    on left: 53 54, on right: 50 53
Atom (110)
    on left: 55 56 57 58 59 60 61 62, on right: 81
Undefined (111)
    on left: 63, on right: 61
Boolean (112)
    on left: 64 65, on right: 62
String (113)
    on left: 66, on right: 60
BitNumber (114)
    on left: 67 68, on right: 56
IntegerNumber (115)
    on left: 69, on right: 57
FloatingNumber (116)
    on left: 70, on right: 58
RationalNumber (117)
    on left: 71, on right: 59
Reference (118)
    on left: 72, on right: 55
Term (119)
    on left: 73 74 75 76 77 78 79 80 81, on right: 15 23 24 25 30 52
    82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 106 107 111 114 115 116 117 134 135 136 137 140 143 144 145
    155 165
Expression (120)
    on left: 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
    100 101 102, on right: 78
Range (121)
    on left: 103, on right: 80
List (122)
    on left: 104 105, on right: 79
Terms (123)
    on left: 106 107, on right: 105 106 108 111
Arguments (124)
    on left: 108 109 110, on right: 113 114
TwoOrMoreArguments (125)
    on left: 111, on right: 25
DirectCallExpression (126)
    on left: 112 113, on right: 73 155 156 157
IndirectCallExpression (127)
    on left: 114, on right: 74 158 159
ConditionalExpression (128)
    on left: 115, on right: 75
UniversalQuantifierExpression (129)
    on left: 116, on right: 76
ExistentialQuantifierExpression (130)
    on left: 117, on right: 77
RuleDefinition (131)
    on left: 118 119, on right: 4
Rule (132)
    on left: 120 121 122 123 124 125 126 127 128 129 130, on right:
    118 119 131 132 134 135 138 139 140 143 144 145 146
Rules (133)
    on left: 131 132, on right: 131 147 148 151 152
SkipRule (134)
    on left: 133, on right: 120
ConditionalRule (135)
    on left: 134 135, on right: 121
CaseRule (136)
    on left: 136 137, on right: 122
CaseLabel (137)
    on left: 138 139 140, on right: 141 142
CaseLabels (138)
    on left: 141 142, on right: 136 141
LetRule (139)
    on left: 143, on right: 123
ForallRule (140)
    on left: 144, on right: 124
ChooseRule (141)
    on left: 145, on right: 125
IterateRule (142)
    on left: 146, on right: 126
BlockRule (143)
    on left: 147 148 149 150, on right: 127
SequenceRule (144)
    on left: 151 152 153 154, on right: 128
UpdateRule (145)
    on left: 155, on right: 129
CallRule (146)
    on left: 156 157 158 159, on right: 130
Attribute (147)
    on left: 160 161, on right: 162 163
Attributes (148)
    on left: 162 163, on right: 7 162
BasicAttribute (149)
    on left: 164, on right: 160
ExpressionAttribute (150)
    on left: 165, on right: 161


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    Definition                 go to state 10
    AttributedDefinition       go to state 11
    Definitions                go to state 12
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 18


State 3

    6 Definition: error .

    $default  reduce using rule 6 (Definition)


State 4

   21 ProgramFunctionDefinition: "init" . IdentifierPath
   22                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 19
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 24


State 5

   30 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 25


State 6

   31 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier  go to state 26


State 7

  118 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  119               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 27


State 8

   11 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 21

    Identifier  go to state 28


State 9

    7 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 30
    Attributes           go to state 31
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 10

    8 AttributedDefinition: Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 11

   10 Definitions: AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 12

    1 Specification: "CASM" Definitions .
    9 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 10
    AttributedDefinition       go to state 34
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 13

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 14

   12 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 12 (FunctionDefinition)


State 15

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 16

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 17

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 18

    0 $accept: Specification "end of file" .

    $default  accept


State 19

   22 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 55
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 20

   38 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 76


State 21

   32 Identifier: "identifier" .

    $default  reduce using rule 32 (Identifier)


State 22

   36 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 36 (DotSeparatedIdentifiers)


State 23

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 77

    $default  reduce using rule 37 (IdentifierPath)


State 24

   21 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 25

   30 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 78

    $default  reduce using rule 44 (MaybeParameters)

    MaybeParameters  go to state 79


State 26

   31 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 80


State 27

  118 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  119               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 78

    $default  reduce using rule 44 (MaybeParameters)

    MaybeParameters  go to state 81


State 28

   11 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 82


State 29

  164 BasicAttribute: Identifier .
  165 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 164 (BasicAttribute)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 84
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 30

  163 Attributes: Attribute .

    $default  reduce using rule 163 (Attributes)


State 31

    7 AttributedDefinition: "[" Attributes . "]" Definition
  162 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 85
    ","  shift, and go to state 86


State 32

  160 Attribute: BasicAttribute .

    $default  reduce using rule 160 (Attribute)


State 33

  161 Attribute: ExpressionAttribute .

    $default  reduce using rule 161 (Attribute)


State 34

    9 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 35

  116 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 88


State 36

  115 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 89
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 37

  117 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 90


State 38

   63 Undefined: "undef" .

    $default  reduce using rule 63 (Undefined)


State 39

   65 Boolean: "false" .

    $default  reduce using rule 65 (Boolean)


State 40

   64 Boolean: "true" .

    $default  reduce using rule 64 (Boolean)


State 41

  102 Expression: "not" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 91
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 42

   83 Expression: "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 92
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 43

   84 Expression: "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 93
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 44

   82 Expression: "(" . Term ")"
  111 TwoOrMoreArguments: "(" . Term "," Terms ")"
  114 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 94
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 95
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 45

  103 Range: "[" . Term ".." Term "]"
  104 List: "[" . "]"
  105     | "[" . Terms "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "]"            shift, and go to state 96
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 97
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 98
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 46

   72 Reference: "@" . IdentifierPath

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 99


State 47

   67 BitNumber: "binary" .

    $default  reduce using rule 67 (BitNumber)


State 48

   68 BitNumber: "hexadecimal" .

    $default  reduce using rule 68 (BitNumber)


State 49

   69 IntegerNumber: "integer" .

    $default  reduce using rule 69 (IntegerNumber)


State 50

   71 RationalNumber: "rational" .

    $default  reduce using rule 71 (RationalNumber)


State 51

   70 FloatingNumber: "floating" .

    $default  reduce using rule 70 (FloatingNumber)


State 52

   66 String: "string" .

    $default  reduce using rule 66 (String)


State 53

   27 Initializers: Initializer .

    $default  reduce using rule 27 (Initializers)


State 54

   26 Initializers: Initializers . "," Initializer
   28 MaybeInitializers: Initializers .

    ","  shift, and go to state 100

    $default  reduce using rule 28 (MaybeInitializers)


State 55

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 101


State 56

  112 DirectCallExpression: IdentifierPath .
  113                     | IdentifierPath . Arguments

    "("  shift, and go to state 102

    $default  reduce using rule 112 (DirectCallExpression)

    Arguments  go to state 103


State 57

   81 Term: Atom .

    $default  reduce using rule 81 (Term)


State 58

   61 Atom: Undefined .

    $default  reduce using rule 61 (Atom)


State 59

   62 Atom: Boolean .

    $default  reduce using rule 62 (Atom)


State 60

   60 Atom: String .

    $default  reduce using rule 60 (Atom)


State 61

   56 Atom: BitNumber .

    $default  reduce using rule 56 (Atom)


State 62

   57 Atom: IntegerNumber .

    $default  reduce using rule 57 (Atom)


State 63

   58 Atom: FloatingNumber .

    $default  reduce using rule 58 (Atom)


State 64

   59 Atom: RationalNumber .

    $default  reduce using rule 59 (Atom)


State 65

   55 Atom: Reference .

    $default  reduce using rule 55 (Atom)


State 66

   23 Initializer: Term .
   24            | Term . "->" Term
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "->"       shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 23 (Initializer)


State 67

   78 Term: Expression .

    $default  reduce using rule 78 (Term)


State 68

   80 Term: Range .

    $default  reduce using rule 80 (Term)


State 69

   79 Term: List .

    $default  reduce using rule 79 (Term)


State 70

   25 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 122


State 71

   73 Term: DirectCallExpression .

    $default  reduce using rule 73 (Term)


State 72

   74 Term: IndirectCallExpression .

    $default  reduce using rule 74 (Term)


State 73

   75 Term: ConditionalExpression .

    $default  reduce using rule 75 (Term)


State 74

   76 Term: UniversalQuantifierExpression .

    $default  reduce using rule 76 (Term)


State 75

   77 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 77 (Term)


State 76

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   38 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 38 (IdentifierPath)


State 77

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 123


State 78

   43 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 124
    Parameters  go to state 125


State 79

   30 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 126


State 80

   31 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 127


State 81

  118 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  119               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 128
    "->"  shift, and go to state 129


State 82

   11 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 130
    MaybeFunctionParameters  go to state 131
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 133
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 83

   82 Expression: "(" . Term ")"
  114 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 94
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 138
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 84

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  165 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 165 (ExpressionAttribute)


State 85

    7 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8

    Definition                 go to state 139
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 86

  162 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 140
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 87

   39 Variable: Identifier . ":" Type
   40         | Identifier .

    ":"  shift, and go to state 141

    $default  reduce using rule 40 (Variable)


State 88

  116 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 142


State 89

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  115 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 143
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 90

  117 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 144


State 91

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  102           | "not" Term .

    $default  reduce using rule 102 (Expression)


State 92

   83 Expression: "+" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    $default  reduce using rule 83 (Expression)


State 93

   84 Expression: "-" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    $default  reduce using rule 84 (Expression)


State 94

  114 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 145
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 95

   82 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  111 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 146
    ","        shift, and go to state 147
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 96

  104 List: "[" "]" .

    $default  reduce using rule 104 (List)


State 97

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 Range: "[" Term . ".." Term "]"
  107 Terms: Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    ".."       shift, and go to state 148
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 107 (Terms)


State 98

  105 List: "[" Terms . "]"
  106 Terms: Terms . "," Term

    "]"  shift, and go to state 149
    ","  shift, and go to state 150


State 99

   72 Reference: "@" IdentifierPath .

    $default  reduce using rule 72 (Reference)


State 100

   26 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Initializer                      go to state 151
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 101

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 102

  108 Arguments: "(" . Terms ")"
  109          | "(" . error ")"
  110          | "(" . ")"

    error          shift, and go to state 152
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    ")"            shift, and go to state 153
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 154
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 155
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 103

  113 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 113 (DirectCallExpression)


State 104

   99 Expression: Term "and" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 156
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 105

   97 Expression: Term "or" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 157
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 106

   98 Expression: Term "xor" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 158
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 107

  101 Expression: Term "implies" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 159
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 108

   85 Expression: Term "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 160
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 109

   86 Expression: Term "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 161
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 110

   92 Expression: Term "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 162
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 111

   93 Expression: Term "<" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 163
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 112

   94 Expression: Term ">" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 164
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 113

   87 Expression: Term "*" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 165
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 114

   88 Expression: Term "/" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 166
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 115

   89 Expression: Term "%" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 167
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 116

   90 Expression: Term "^" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 168
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 117

   24 Initializer: Term "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 169
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 118

  100 Expression: Term "=>" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 170
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 119

   91 Expression: Term "!=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 171
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 120

   95 Expression: Term "<=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 172
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 121

   96 Expression: Term ">=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 173
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 122

   25 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 174
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 123

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 124

   42 Parameters: Variable .

    $default  reduce using rule 42 (Parameters)


State 125

   41 Parameters: Parameters . "," Variable
   43 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 175
    ","  shift, and go to state 176


State 126

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 177
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 127

   31 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier   go to state 178
    Identifiers  go to state 179


State 128

  118 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 195
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 129

  119 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 207
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 130

   17 FunctionParameters: FunctionParameters . "*" Type
   19 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 208

    $default  reduce using rule 19 (MaybeFunctionParameters)


State 131

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 209


State 132

   49 BasicType: IdentifierPath .
   50 ComposedType: IdentifierPath . "<" Types ">"
   51 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   52 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 210
    "'"  shift, and go to state 211

    $default  reduce using rule 49 (BasicType)


State 133

   18 FunctionParameters: Type .

    $default  reduce using rule 18 (FunctionParameters)


State 134

   45 Type: BasicType .

    $default  reduce using rule 45 (Type)


State 135

   46 Type: ComposedType .

    $default  reduce using rule 46 (Type)


State 136

   47 Type: RelationType .

    $default  reduce using rule 47 (Type)


State 137

   48 Type: FixedSizedType .

    $default  reduce using rule 48 (Type)


State 138

   82 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 146
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 139

    7 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 140

  162 Attributes: Attributes "," Attribute .

    $default  reduce using rule 162 (Attributes)


State 141

   39 Variable: Identifier ":" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 212
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 142

  116 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 213
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 143

  115 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 214
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 144

  117 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 215
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 145

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  114 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ")"        shift, and go to state 216
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 146

   82 Expression: "(" Term ")" .

    $default  reduce using rule 82 (Expression)


State 147

  111 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 154
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 217
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 148

  103 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 218
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 149

  105 List: "[" Terms "]" .

    $default  reduce using rule 105 (List)


State 150

  106 Terms: Terms "," . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 219
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 151

   26 Initializers: Initializers "," Initializer .

    $default  reduce using rule 26 (Initializers)


State 152

  109 Arguments: "(" error . ")"

    ")"  shift, and go to state 220


State 153

  110 Arguments: "(" ")" .

    $default  reduce using rule 110 (Arguments)


State 154

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  107 Terms: Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 107 (Terms)


State 155

  106 Terms: Terms . "," Term
  108 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 221
    ","  shift, and go to state 150


State 156

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
   99           | Term "and" Term .
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "="   shift, and go to state 110
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "!="  shift, and go to state 119
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 99 (Expression)


State 157

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   97           | Term "or" Term .
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"  shift, and go to state 104
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 97 (Expression)


State 158

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   98           | Term "xor" Term .
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"  shift, and go to state 104
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 98 (Expression)


State 159

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  101           | Term "implies" Term .

    "and"  shift, and go to state 104
    "or"   shift, and go to state 105
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 101 (Expression)


State 160

   85 Expression: Term . "+" Term
   85           | Term "+" Term .
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 85 (Expression)


State 161

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   86           | Term "-" Term .
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 86 (Expression)


State 162

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   92           | Term "=" Term .
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 92 (Expression)


State 163

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   93           | Term "<" Term .
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 93 (Expression)


State 164

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   94           | Term ">" Term .
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 94 (Expression)


State 165

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   87           | Term "*" Term .
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 87 (Expression)


State 166

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   88           | Term "/" Term .
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 88 (Expression)


State 167

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   89           | Term "%" Term .
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "^"  shift, and go to state 116

    $default  reduce using rule 89 (Expression)


State 168

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   90           | Term "^" Term .
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    $default  reduce using rule 90 (Expression)


State 169

   24 Initializer: Term "->" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 24 (Initializer)


State 170

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  100           | Term "=>" Term .
  101           | Term . "implies" Term

    "and"  shift, and go to state 104
    "or"   shift, and go to state 105
    "xor"  shift, and go to state 106
    "+"    shift, and go to state 108
    "-"    shift, and go to state 109
    "="    shift, and go to state 110
    "<"    shift, and go to state 111
    ">"    shift, and go to state 112
    "*"    shift, and go to state 113
    "/"    shift, and go to state 114
    "%"    shift, and go to state 115
    "^"    shift, and go to state 116
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 100 (Expression)


State 171

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   91           | Term "!=" Term .
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"   shift, and go to state 108
    "-"   shift, and go to state 109
    "<"   shift, and go to state 111
    ">"   shift, and go to state 112
    "*"   shift, and go to state 113
    "/"   shift, and go to state 114
    "%"   shift, and go to state 115
    "^"   shift, and go to state 116
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 91 (Expression)


State 172

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   95           | Term "<=" Term .
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 95 (Expression)


State 173

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   96           | Term ">=" Term .
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "+"  shift, and go to state 108
    "-"  shift, and go to state 109
    "*"  shift, and go to state 113
    "/"  shift, and go to state 114
    "%"  shift, and go to state 115
    "^"  shift, and go to state 116

    $default  reduce using rule 96 (Expression)


State 174

   25 Initializer: TwoOrMoreArguments "->" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 25 (Initializer)


State 175

   43 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 43 (MaybeParameters)


State 176

   41 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 222


State 177

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 223


State 178

   34 Identifiers: Identifier .

    $default  reduce using rule 34 (Identifiers)


State 179

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   33 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 224
    ","  shift, and go to state 225


State 180

  152 SequenceRule: "seq" . Rules "endseq"
  154             | "seq" . error "endseq"

    error         shift, and go to state 226
    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 227
    Rules                    go to state 228
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 181

  148 BlockRule: "par" . Rules "endpar"
  150          | "par" . error "endpar"

    error         shift, and go to state 229
    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 227
    Rules                    go to state 230
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 182

  133 SkipRule: "skip" .

    $default  reduce using rule 133 (SkipRule)


State 183

  143 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 231


State 184

  144 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 232


State 185

  145 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 233


State 186

  146 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 234
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 187

  156 CallRule: "call" . DirectCallExpression
  158         | "call" . IndirectCallExpression

    "("           shift, and go to state 190
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 235
    IndirectCallExpression   go to state 236


State 188

  134 ConditionalRule: "if" . Term "then" Rule
  135                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 237
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 189

  136 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  137         | "case" . Term "of" "{" error "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 238
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 190

  114 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 94


State 191

  147 BlockRule: "{" . Rules "}"
  149          | "{" . error "}"

    error         shift, and go to state 239
    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 227
    Rules                    go to state 240
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 192

  151 SequenceRule: "{|" . Rules "|}"
  153             | "{|" . error "|}"

    error         shift, and go to state 241
    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 227
    Rules                    go to state 242
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 193

  155 UpdateRule: DirectCallExpression . ":=" Term
  157 CallRule: DirectCallExpression .

    ":="  shift, and go to state 243

    $default  reduce using rule 157 (CallRule)


State 194

  159 CallRule: IndirectCallExpression .

    $default  reduce using rule 159 (CallRule)


State 195

  118 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 118 (RuleDefinition)


State 196

  120 Rule: SkipRule .

    $default  reduce using rule 120 (Rule)


State 197

  121 Rule: ConditionalRule .

    $default  reduce using rule 121 (Rule)


State 198

  122 Rule: CaseRule .

    $default  reduce using rule 122 (Rule)


State 199

  123 Rule: LetRule .

    $default  reduce using rule 123 (Rule)


State 200

  124 Rule: ForallRule .

    $default  reduce using rule 124 (Rule)


State 201

  125 Rule: ChooseRule .

    $default  reduce using rule 125 (Rule)


State 202

  126 Rule: IterateRule .

    $default  reduce using rule 126 (Rule)


State 203

  127 Rule: BlockRule .

    $default  reduce using rule 127 (Rule)


State 204

  128 Rule: SequenceRule .

    $default  reduce using rule 128 (Rule)


State 205

  129 Rule: UpdateRule .

    $default  reduce using rule 129 (Rule)


State 206

  130 Rule: CallRule .

    $default  reduce using rule 130 (Rule)


State 207

  119 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 244


State 208

   17 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 245
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 209

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 246
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 210

   50 ComposedType: IdentifierPath "<" . Types ">"
   51 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 130
    MaybeFunctionParameters  go to state 247
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 248
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137
    Types                    go to state 249


State 211

   52 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 250
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 212

   39 Variable: Identifier ":" Type .

    $default  reduce using rule 39 (Variable)


State 213

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  116 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 251
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 214

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  115 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 252
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 215

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  117 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 253
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 216

  114 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 102

    Arguments  go to state 254


State 217

  106 Terms: Terms . "," Term
  111 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 255
    ","  shift, and go to state 150


State 218

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "]"        shift, and go to state 256
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 219

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  106 Terms: Terms "," Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 106 (Terms)


State 220

  109 Arguments: "(" error ")" .

    $default  reduce using rule 109 (Arguments)


State 221

  108 Arguments: "(" Terms ")" .

    $default  reduce using rule 108 (Arguments)


State 222

   41 Parameters: Parameters "," Variable .

    $default  reduce using rule 41 (Parameters)


State 223

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 257
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 224

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 31 (EnumerationDefinition)


State 225

   33 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 258


State 226

  154 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 259


State 227

  132 Rules: Rule .

    $default  reduce using rule 132 (Rules)


State 228

  131 Rules: Rules . Rule
  152 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 180
    "endseq"      shift, and go to state 260
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 261
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 229

  150 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 262


State 230

  131 Rules: Rules . Rule
  148 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "endpar"      shift, and go to state 263
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 261
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 231

  143 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 264


State 232

  144 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 265


State 233

  145 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 266


State 234

  146 IterateRule: "iterate" Rule .

    $default  reduce using rule 146 (IterateRule)


State 235

  156 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 156 (CallRule)


State 236

  158 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 158 (CallRule)


State 237

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  134 ConditionalRule: "if" Term . "then" Rule
  135                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 267
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 238

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  136 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  137         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 268
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 239

  149 BlockRule: "{" error . "}"

    "}"  shift, and go to state 269


State 240

  131 Rules: Rules . Rule
  147 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "}"           shift, and go to state 270
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 261
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 241

  153 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 271


State 242

  131 Rules: Rules . Rule
  151 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "|}"          shift, and go to state 272
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 261
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 243

  155 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 273
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 244

  119 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 274
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 245

   17 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 17 (FunctionParameters)


State 246

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 275

    $default  reduce using rule 16 (MaybeDefined)

    MaybeDefined  go to state 276


State 247

   51 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 277


State 248

   18 FunctionParameters: Type .
   54 Types: Type .

    ","       reduce using rule 54 (Types)
    ">"       reduce using rule 54 (Types)
    $default  reduce using rule 18 (FunctionParameters)


State 249

   50 ComposedType: IdentifierPath "<" Types . ">"
   53 Types: Types . "," Type

    ","  shift, and go to state 278
    ">"  shift, and go to state 279


State 250

   52 FixedSizedType: IdentifierPath "'" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "<"        shift, and go to state 111
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 52 (FixedSizedType)


State 251

  116 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 280
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 252

  115 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 281
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 253

  117 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 282
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 254

  114 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 114 (IndirectCallExpression)


State 255

  111 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 111 (TwoOrMoreArguments)


State 256

  103 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 103 (Range)


State 257

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 30 (DerivedDefinition)


State 258

   33 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 33 (Identifiers)


State 259

  154 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 154 (SequenceRule)


State 260

  152 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 152 (SequenceRule)


State 261

  131 Rules: Rules Rule .

    $default  reduce using rule 131 (Rules)


State 262

  150 BlockRule: "par" error "endpar" .

    $default  reduce using rule 150 (BlockRule)


State 263

  148 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 148 (BlockRule)


State 264

  143 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 283
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 265

  144 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 284
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 266

  145 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 285
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 267

  134 ConditionalRule: "if" Term "then" . Rule
  135                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 286
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 268

  136 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  137         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 287


State 269

  149 BlockRule: "{" error "}" .

    $default  reduce using rule 149 (BlockRule)


State 270

  147 BlockRule: "{" Rules "}" .

    $default  reduce using rule 147 (BlockRule)


State 271

  153 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 153 (SequenceRule)


State 272

  151 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 151 (SequenceRule)


State 273

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  155 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 155 (UpdateRule)


State 274

  119 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 119 (RuleDefinition)


State 275

   15 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 288


State 276

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 289

    $default  reduce using rule 14 (MaybeInitially)

    MaybeInitially  go to state 290


State 277

   51 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 291
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 278

   53 Types: Types "," . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 132
    Type                     go to state 292
    BasicType                go to state 134
    ComposedType             go to state 135
    RelationType             go to state 136
    FixedSizedType           go to state 137


State 279

   50 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 50 (ComposedType)


State 280

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  116 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 116 (UniversalQuantifierExpression)


State 281

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  115 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 115 (ConditionalExpression)


State 282

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  117 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 117 (ExistentialQuantifierExpression)


State 283

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  143 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 293
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 284

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  144 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 294
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 285

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  145 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 295
    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 286

  134 ConditionalRule: "if" Term "then" Rule .
  135                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 296

    $default  reduce using rule 134 (ConditionalRule)


State 287

  136 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  137         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 297
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 298
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 299
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 300
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 301
    CaseLabels                       go to state 302


State 288

   15 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 303
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 289

   13 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 304


State 290

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 11 (FunctionDefinition)


State 291

   51 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 305


State 292

   53 Types: Types "," Type .

    $default  reduce using rule 53 (Types)


State 293

  143 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 306
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 294

  144 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 307
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 295

  145 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 308
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 296

  135 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 309
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 297

  137 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 310


State 298

  138 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 311


State 299

  139 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 312


State 300

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  140 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    ":"        shift, and go to state 313
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 301

  141 CaseLabels: CaseLabel . CaseLabels
  142           | CaseLabel .

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 298
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 299
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 142 (CaseLabels)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 300
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 301
    CaseLabels                       go to state 314


State 302

  136 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 315


State 303

   15 MaybeDefined: "defined" "{" Term . "}"
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term

    "and"      shift, and go to state 104
    "or"       shift, and go to state 105
    "xor"      shift, and go to state 106
    "implies"  shift, and go to state 107
    "+"        shift, and go to state 108
    "-"        shift, and go to state 109
    "="        shift, and go to state 110
    "}"        shift, and go to state 316
    "<"        shift, and go to state 111
    ">"        shift, and go to state 112
    "*"        shift, and go to state 113
    "/"        shift, and go to state 114
    "%"        shift, and go to state 115
    "^"        shift, and go to state 116
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 304

   13 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 317
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 305

   51 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 51 (RelationType)


State 306

  143 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 143 (LetRule)


State 307

  144 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 144 (ForallRule)


State 308

  145 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 145 (ChooseRule)


State 309

  135 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 135 (ConditionalRule)


State 310

  137 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 137 (CaseRule)


State 311

  138 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 318
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 312

  139 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 319
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 313

  140 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 180
    "par"         shift, and go to state 181
    "skip"        shift, and go to state 182
    "let"         shift, and go to state 183
    "forall"      shift, and go to state 184
    "choose"      shift, and go to state 185
    "iterate"     shift, and go to state 186
    "call"        shift, and go to state 187
    "if"          shift, and go to state 188
    "case"        shift, and go to state 189
    "("           shift, and go to state 190
    "{"           shift, and go to state 191
    "."           shift, and go to state 20
    "{|"          shift, and go to state 192
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 193
    IndirectCallExpression   go to state 194
    Rule                     go to state 320
    SkipRule                 go to state 196
    ConditionalRule          go to state 197
    CaseRule                 go to state 198
    LetRule                  go to state 199
    ForallRule               go to state 200
    ChooseRule               go to state 201
    IterateRule              go to state 202
    BlockRule                go to state 203
    SequenceRule             go to state 204
    UpdateRule               go to state 205
    CallRule                 go to state 206


State 314

  141 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 141 (CaseLabels)


State 315

  136 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 136 (CaseRule)


State 316

   15 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 15 (MaybeDefined)


State 317

   13 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 321


State 318

  138 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 138 (CaseLabel)


State 319

  139 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 139 (CaseLabel)


State 320

  140 CaseLabel: Term ":" Rule .

    $default  reduce using rule 140 (CaseLabel)


State 321

   13 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 13 (MaybeInitially)
