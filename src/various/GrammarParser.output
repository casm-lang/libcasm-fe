State 162 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition
   13           | TypeDefinition

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   17               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   19                   | ProgramFunctionDefinition

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 EnumeratorDefinition: Identifier
   23                     | "[" Attributes "]" Identifier
   24                     | error

   25 Enumerators: Enumerators "," EnumeratorDefinition
   26            | EnumeratorDefinition

   27 TypeDefinition: "type" Identifier "=" Type

   28 Rule: SkipRule
   29     | ConditionalRule
   30     | CaseRule
   31     | LetRule
   32     | ForallRule
   33     | ChooseRule
   34     | IterateRule
   35     | BlockRule
   36     | SequenceRule
   37     | UpdateRule
   38     | CallRule

   39 Rules: Rules Rule
   40      | Rule

   41 SkipRule: "skip"

   42 ConditionalRule: "if" Term "then" Rule
   43                | "if" Term "then" Rule "else" Rule

   44 CaseRule: "case" Term "of" "{" CaseLabels "}"
   45         | "case" Term "of" "{" error "}"

   46 CaseLabel: "default" ":" Rule
   47          | "_" ":" Rule
   48          | Term ":" Rule

   49 CaseLabels: CaseLabels CaseLabel
   50           | CaseLabel

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   53           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   55 IterateRule: "iterate" Rule

   56 BlockRule: "{" Rules "}"
   57          | "par" Rules "endpar"
   58          | "{" error "}"
   59          | "par" error "endpar"

   60 SequenceRule: "{|" Rules "|}"
   61             | "seq" Rules "endseq"
   62             | "{|" error "|}"
   63             | "seq" error "endseq"

   64 UpdateRule: DirectCallExpression ":=" Term

   65 CallRule: "call" DirectCallExpression
   66         | DirectCallExpression
   67         | "call" IndirectCallExpression
   68         | IndirectCallExpression

   69 Terms: Terms "," Term
   70      | Term

   71 Term: Expression
   72     | TypeCastingExpression
   73     | DirectCallExpression
   74     | IndirectCallExpression
   75     | LetExpression
   76     | ConditionalExpression
   77     | ChooseExpression
   78     | UniversalQuantifierExpression
   79     | ExistentialQuantifierExpression
   80     | List
   81     | Range
   82     | Literal

   83 Expression: "(" Term ")"
   84           | "(" error ")"
   85           | "+" Term
   86           | "-" Term
   87           | Term "+" Term
   88           | Term "-" Term
   89           | Term "*" Term
   90           | Term "/" Term
   91           | Term "%" Term
   92           | Term "^" Term
   93           | Term "!=" Term
   94           | Term "=" Term
   95           | Term "<" Term
   96           | Term ">" Term
   97           | Term "<=" Term
   98           | Term ">=" Term
   99           | Term "or" Term
  100           | Term "xor" Term
  101           | Term "and" Term
  102           | Term "=>" Term
  103           | Term "implies" Term
  104           | "not" Term

  105 TypeCastingExpression: Term "as" Type

  106 DirectCallExpression: IdentifierPath
  107                     | IdentifierPath Arguments

  108 IndirectCallExpression: "(" "*" Term ")" Arguments

  109 LetExpression: "let" AttributedVariable "=" Term "in" Term

  110 ConditionalExpression: "if" Term "then" Term "else" Term

  111 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  112 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  113 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  114 List: "[" "]"
  115     | "[" Terms "]"
  116     | "[" error "]"

  117 Range: "[" Term ".." Term "]"

  118 Literal: UndefinedLiteral
  119        | BooleanLiteral
  120        | IntegerLiteral
  121        | RationalLiteral
  122        | DecimalLiteral
  123        | BitLiteral
  124        | StringLiteral
  125        | ReferenceLiteral

  126 UndefinedLiteral: "undef"

  127 BooleanLiteral: "true"
  128               | "false"

  129 IntegerLiteral: "integer"

  130 RationalLiteral: "rational"

  131 DecimalLiteral: "decimal"

  132 BitLiteral: "binary"
  133           | "hexadecimal"

  134 StringLiteral: "string"

  135 ReferenceLiteral: "@" IdentifierPath

  136 Types: Types "," Type
  137      | Type

  138 Type: BasicType
  139     | ComposedType
  140     | RelationType
  141     | FixedSizedType

  142 BasicType: IdentifierPath

  143 ComposedType: IdentifierPath "<" Types ">"

  144 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  145 FixedSizedType: IdentifierPath "'" Term

  146 Arguments: "(" Terms ")"
  147          | "(" error ")"
  148          | "(" ")"

  149 TwoOrMoreArguments: "(" Terms "," Term ")"

  150 FunctionParameters: FunctionParameters "*" Type
  151                   | Type

  152 MaybeFunctionParameters: FunctionParameters
  153                        | %empty

  154 Parameters: Parameters "," TypedAttributedVariable
  155           | TypedAttributedVariable

  156 MaybeParameters: "(" Parameters ")"
  157                | "(" error ")"
  158                | %empty

  159 MaybeDefined: "defined" "{" Term "}"
  160             | %empty

  161 MaybeInitially: "initially" "{" MaybeInitializers "}"
  162               | %empty

  163 Initializers: Initializers "," Initializer
  164             | Initializer

  165 Initializer: Term
  166            | Term "->" Term
  167            | TwoOrMoreArguments "->" Term

  168 MaybeInitializers: Initializers
  169                  | %empty

  170 Identifier: "identifier"
  171           | "in"

  172 IdentifierPath: DotSeparatedIdentifiers
  173               | "." Identifier

  174 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
  175                        | Identifier

  176 Variable: TypedVariable
  177         | Identifier

  178 TypedVariable: Identifier ":" Type

  179 AttributedVariable: "[" Attributes "]" Variable
  180                   | Variable

  181 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  182                        | TypedVariable

  183 Attributes: Attributes "," Attribute
  184           | Attribute

  185 Attribute: BasicAttribute
  186          | ExpressionAttribute

  187 BasicAttribute: Identifier

  188 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 24 45 58 59 62 63 84 116 147 157
"CASM" (258) 2 3
"init" (259) 20 21
"derived" (260) 15
"enumeration" (261) 14
"rule" (262) 16 17
"type" (263) 27
"function" (264) 18
"initially" (265) 161
"defined" (266) 159
"seq" (267) 61 63
"endseq" (268) 61 63
"par" (269) 57 59
"endpar" (270) 57 59
"skip" (271) 41
"let" (272) 51 109
"in" (273) 51 52 53 54 109 111 112 113 171
"forall" (274) 52 53 112
"choose" (275) 54 111
"iterate" (276) 55
"do" (277) 52 53 54 111
"call" (278) 65 67
"if" (279) 42 43 110
"then" (280) 42 43 110
"else" (281) 43 110
"case" (282) 44 45
"of" (283) 44 45
"default" (284) 46
"holds" (285) 112
"exists" (286) 113
"with" (287) 53 113
"as" (288) 105
"undef" (289) 126
"false" (290) 128
"true" (291) 127
"and" (292) 101
"or" (293) 99
"xor" (294) 100
"implies" (295) 103
"not" (296) 104
"+" (297) 85 87
"-" (298) 86 88
"=" (299) 14 15 16 17 27 51 94 109
"(" (300) 83 84 108 146 147 148 149 156 157
")" (301) 83 84 108 146 147 148 149 156 157
"[" (302) 2 6 23 114 115 116 117 179 181
"]" (303) 2 6 23 114 115 116 117 179 181
"{" (304) 14 21 44 45 56 58 159 161
"}" (305) 14 21 44 45 56 58 159 161
":" (306) 18 46 47 48 178
"_" (307) 47
"@" (308) 135
"," (309) 25 69 136 149 154 163 183
"<" (310) 95 143 144
">" (311) 96 143 144
"*" (312) 89 108 150
"/" (313) 90
"%" (314) 91
"^" (315) 92
"'" (316) 145
".." (317) 117
"." (318) 173 174
"->" (319) 15 17 18 144 166 167
"=>" (320) 102
":=" (321) 64
"!=" (322) 93
"<=" (323) 97
">=" (324) 98
"{|" (325) 60 62
"|}" (326) 60 62
"binary" (327) 132
"hexadecimal" (328) 133
"integer" (329) 129
"rational" (330) 130
"decimal" (331) 131
"string" (332) 134
"identifier" (333) 170
ABSOLUTE_PATH (334)
UPLUS (335)
UMINUS (336)
CALL_WITHOUT_ARGS (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
Specification (84)
    on left: 1, on right: 0
Header (85)
    on left: 2 3, on right: 1
Definitions (86)
    on left: 4 5, on right: 1 4
AttributedDefinition (87)
    on left: 6 7 8, on right: 4 5
Definition (88)
    on left: 9 10 11 12 13, on right: 6 7
EnumerationDefinition (89)
    on left: 14, on right: 9
DerivedDefinition (90)
    on left: 15, on right: 10
RuleDefinition (91)
    on left: 16 17, on right: 11
FunctionDefinition (92)
    on left: 18 19, on right: 12
ProgramFunctionDefinition (93)
    on left: 20 21, on right: 19
EnumeratorDefinition (94)
    on left: 22 23 24, on right: 25 26
Enumerators (95)
    on left: 25 26, on right: 14 25
TypeDefinition (96)
    on left: 27, on right: 13
Rule (97)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 16 17 39 40
    42 43 46 47 48 51 52 53 54 55
Rules (98)
    on left: 39 40, on right: 39 56 57 60 61
SkipRule (99)
    on left: 41, on right: 28
ConditionalRule (100)
    on left: 42 43, on right: 29
CaseRule (101)
    on left: 44 45, on right: 30
CaseLabel (102)
    on left: 46 47 48, on right: 49 50
CaseLabels (103)
    on left: 49 50, on right: 44 49
LetRule (104)
    on left: 51, on right: 31
ForallRule (105)
    on left: 52 53, on right: 32
ChooseRule (106)
    on left: 54, on right: 33
IterateRule (107)
    on left: 55, on right: 34
BlockRule (108)
    on left: 56 57 58 59, on right: 35
SequenceRule (109)
    on left: 60 61 62 63, on right: 36
UpdateRule (110)
    on left: 64, on right: 37
CallRule (111)
    on left: 65 66 67 68, on right: 38
Terms (112)
    on left: 69 70, on right: 69 115 146 149
Term (113)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82, on right: 15 42 43
    44 45 48 51 52 53 54 64 69 70 83 85 86 87 88 89 90 91 92 93 94
    95 96 97 98 99 100 101 102 103 104 105 108 109 110 111 112 113
    117 145 149 159 165 166 167 188
Expression (114)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104, on right: 71
TypeCastingExpression (115)
    on left: 105, on right: 72
DirectCallExpression (116)
    on left: 106 107, on right: 64 65 66 73
IndirectCallExpression (117)
    on left: 108, on right: 67 68 74
LetExpression (118)
    on left: 109, on right: 75
ConditionalExpression (119)
    on left: 110, on right: 76
ChooseExpression (120)
    on left: 111, on right: 77
UniversalQuantifierExpression (121)
    on left: 112, on right: 78
ExistentialQuantifierExpression (122)
    on left: 113, on right: 79
List (123)
    on left: 114 115 116, on right: 80
Range (124)
    on left: 117, on right: 81
Literal (125)
    on left: 118 119 120 121 122 123 124 125, on right: 82
UndefinedLiteral (126)
    on left: 126, on right: 118
BooleanLiteral (127)
    on left: 127 128, on right: 119
IntegerLiteral (128)
    on left: 129, on right: 120
RationalLiteral (129)
    on left: 130, on right: 121
DecimalLiteral (130)
    on left: 131, on right: 122
BitLiteral (131)
    on left: 132 133, on right: 123
StringLiteral (132)
    on left: 134, on right: 124
ReferenceLiteral (133)
    on left: 135, on right: 125
Types (134)
    on left: 136 137, on right: 136 143
Type (135)
    on left: 138 139 140 141, on right: 15 17 18 27 105 136 137 144
    150 151 178
BasicType (136)
    on left: 142, on right: 138
ComposedType (137)
    on left: 143, on right: 139
RelationType (138)
    on left: 144, on right: 140
FixedSizedType (139)
    on left: 145, on right: 141
Arguments (140)
    on left: 146 147 148, on right: 107 108
TwoOrMoreArguments (141)
    on left: 149, on right: 167
FunctionParameters (142)
    on left: 150 151, on right: 150 152
MaybeFunctionParameters (143)
    on left: 152 153, on right: 18 144
Parameters (144)
    on left: 154 155, on right: 154 156
MaybeParameters (145)
    on left: 156 157 158, on right: 15 16 17
MaybeDefined (146)
    on left: 159 160, on right: 18
MaybeInitially (147)
    on left: 161 162, on right: 18
Initializers (148)
    on left: 163 164, on right: 163 168
Initializer (149)
    on left: 165 166 167, on right: 163 164
MaybeInitializers (150)
    on left: 168 169, on right: 21 161
Identifier (151)
    on left: 170 171, on right: 14 15 16 17 18 22 23 27 173 174 175
    177 178 187 188
IdentifierPath (152)
    on left: 172 173, on right: 20 106 107 135 142 143 144 145
DotSeparatedIdentifiers (153)
    on left: 174 175, on right: 172 174
Variable (154)
    on left: 176 177, on right: 179 180
TypedVariable (155)
    on left: 178, on right: 176 181 182
AttributedVariable (156)
    on left: 179 180, on right: 51 52 53 54 109 111 112 113
TypedAttributedVariable (157)
    on left: 181 182, on right: 154 155
Attributes (158)
    on left: 183 184, on right: 2 6 23 179 181 183
Attribute (159)
    on left: 185 186, on right: 183 184
BasicAttribute (160)
    on left: 187, on right: 185
ExpressionAttribute (161)
    on left: 188, on right: 186


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "type"         shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    Definitions                go to state 21
    AttributedDefinition       go to state 22
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    TypeDefinition             go to state 29


State 5

  171 Identifier: "in" .

    $default  reduce using rule 171 (Identifier)


State 6

  170 Identifier: "identifier" .

    $default  reduce using rule 170 (Identifier)


State 7

  187 BasicAttribute: Identifier .
  188 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 187 (BasicAttribute)

    Term                             go to state 51
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 8

    2 Header: "[" Attributes . "]" "CASM"
  183 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 75
    ","  shift, and go to state 76


State 9

  184 Attributes: Attribute .

    $default  reduce using rule 184 (Attributes)


State 10

  185 Attribute: BasicAttribute .

    $default  reduce using rule 185 (Attribute)


State 11

  186 Attribute: ExpressionAttribute .

    $default  reduce using rule 186 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 77
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Identifier               go to state 72
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 74


State 15

   15 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 79


State 16

   14 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 80


State 17

   16 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   17               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 81


State 18

   27 TypeDefinition: "type" . Identifier "=" Type

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 82


State 19

   18 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 83


State 20

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 84
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 21

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "type"         shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 85
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    TypeDefinition             go to state 29


State 22

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 23

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 24

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 25

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 26

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 27

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 28

   19 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 19 (FunctionDefinition)


State 29

   13 Definition: TypeDefinition .

    $default  reduce using rule 13 (Definition)


State 30

  109 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 90


State 31

  112 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 91


State 32

  111 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 92


State 33

  110 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 93
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 34

  113 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 94


State 35

  126 UndefinedLiteral: "undef" .

    $default  reduce using rule 126 (UndefinedLiteral)


State 36

  128 BooleanLiteral: "false" .

    $default  reduce using rule 128 (BooleanLiteral)


State 37

  127 BooleanLiteral: "true" .

    $default  reduce using rule 127 (BooleanLiteral)


State 38

  104 Expression: "not" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 95
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 39

   85 Expression: "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 96
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 40

   86 Expression: "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 97
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 41

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  108 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 98
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "*"            shift, and go to state 99
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 100
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 42

  114 List: "[" . "]"
  115     | "[" . Terms "]"
  116     | "[" . error "]"
  117 Range: "[" . Term ".." Term "]"

    error          shift, and go to state 101
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "]"            shift, and go to state 102
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 103
    Term                             go to state 104
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 43

  135 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Identifier               go to state 72
    IdentifierPath           go to state 105
    DotSeparatedIdentifiers  go to state 74


State 44

  173 IdentifierPath: "." . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 106


State 45

  132 BitLiteral: "binary" .

    $default  reduce using rule 132 (BitLiteral)


State 46

  133 BitLiteral: "hexadecimal" .

    $default  reduce using rule 133 (BitLiteral)


State 47

  129 IntegerLiteral: "integer" .

    $default  reduce using rule 129 (IntegerLiteral)


State 48

  130 RationalLiteral: "rational" .

    $default  reduce using rule 130 (RationalLiteral)


State 49

  131 DecimalLiteral: "decimal" .

    $default  reduce using rule 131 (DecimalLiteral)


State 50

  134 StringLiteral: "string" .

    $default  reduce using rule 134 (StringLiteral)


State 51

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  188 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 188 (ExpressionAttribute)


State 52

   71 Term: Expression .

    $default  reduce using rule 71 (Term)


State 53

   72 Term: TypeCastingExpression .

    $default  reduce using rule 72 (Term)


State 54

   73 Term: DirectCallExpression .

    $default  reduce using rule 73 (Term)


State 55

   74 Term: IndirectCallExpression .

    $default  reduce using rule 74 (Term)


State 56

   75 Term: LetExpression .

    $default  reduce using rule 75 (Term)


State 57

   76 Term: ConditionalExpression .

    $default  reduce using rule 76 (Term)


State 58

   77 Term: ChooseExpression .

    $default  reduce using rule 77 (Term)


State 59

   78 Term: UniversalQuantifierExpression .

    $default  reduce using rule 78 (Term)


State 60

   79 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 61

   80 Term: List .

    $default  reduce using rule 80 (Term)


State 62

   81 Term: Range .

    $default  reduce using rule 81 (Term)


State 63

   82 Term: Literal .

    $default  reduce using rule 82 (Term)


State 64

  118 Literal: UndefinedLiteral .

    $default  reduce using rule 118 (Literal)


State 65

  119 Literal: BooleanLiteral .

    $default  reduce using rule 119 (Literal)


State 66

  120 Literal: IntegerLiteral .

    $default  reduce using rule 120 (Literal)


State 67

  121 Literal: RationalLiteral .

    $default  reduce using rule 121 (Literal)


State 68

  122 Literal: DecimalLiteral .

    $default  reduce using rule 122 (Literal)


State 69

  123 Literal: BitLiteral .

    $default  reduce using rule 123 (Literal)


State 70

  124 Literal: StringLiteral .

    $default  reduce using rule 124 (Literal)


State 71

  125 Literal: ReferenceLiteral .

    $default  reduce using rule 125 (Literal)


State 72

  175 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 175 (DotSeparatedIdentifiers)


State 73

  106 DirectCallExpression: IdentifierPath .
  107                     | IdentifierPath . Arguments

    "("  shift, and go to state 125

    $default  reduce using rule 106 (DirectCallExpression)

    Arguments  go to state 126


State 74

  172 IdentifierPath: DotSeparatedIdentifiers .
  174 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier

    "."  shift, and go to state 127

    $default  reduce using rule 172 (IdentifierPath)


State 75

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 128


State 76

  183 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 129
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 77

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 130
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 169 (MaybeInitializers)

    Term                             go to state 131
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    TwoOrMoreArguments               go to state 132
    Initializers                     go to state 133
    Initializer                      go to state 134
    MaybeInitializers                go to state 135
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 78

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 79

   15 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 136

    $default  reduce using rule 158 (MaybeParameters)

    MaybeParameters  go to state 137


State 80

   14 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 138


State 81

   16 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   17               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 136

    $default  reduce using rule 158 (MaybeParameters)

    MaybeParameters  go to state 139


State 82

   27 TypeDefinition: "type" Identifier . "=" Type

    "="  shift, and go to state 140


State 83

   18 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 141


State 84

    6 AttributedDefinition: "[" Attributes . "]" Definition
  183 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 142
    ","  shift, and go to state 76


State 85

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 86

  179 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 143
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 87

  177 Variable: Identifier .
  178 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 144

    $default  reduce using rule 177 (Variable)


State 88

  180 AttributedVariable: Variable .

    $default  reduce using rule 180 (AttributedVariable)


State 89

  176 Variable: TypedVariable .

    $default  reduce using rule 176 (Variable)


State 90

  109 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 145


State 91

  112 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 146


State 92

  111 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 147


State 93

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  110 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 148
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 94

  113 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 149


State 95

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  104           | "not" Term .
  105 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 104 (Expression)


State 96

   85 Expression: "+" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 85 (Expression)


State 97

   86 Expression: "-" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 86 (Expression)


State 98

   84 Expression: "(" error . ")"

    ")"  shift, and go to state 150


State 99

  108 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 151
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 100

   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    ")"        shift, and go to state 152
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 101

  116 List: "[" error . "]"

    "]"  shift, and go to state 153


State 102

  114 List: "[" "]" .

    $default  reduce using rule 114 (List)


State 103

   69 Terms: Terms . "," Term
  115 List: "[" Terms . "]"

    "]"  shift, and go to state 154
    ","  shift, and go to state 155


State 104

   70 Terms: Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  117 Range: "[" Term . ".." Term "]"

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    ".."       shift, and go to state 156
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 70 (Terms)


State 105

  135 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 135 (ReferenceLiteral)


State 106

  173 IdentifierPath: "." Identifier .

    $default  reduce using rule 173 (IdentifierPath)


State 107

  105 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 157
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 108

  101 Expression: Term "and" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 163
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 109

   99 Expression: Term "or" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 164
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 110

  100 Expression: Term "xor" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 165
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 111

  103 Expression: Term "implies" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 166
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 112

   87 Expression: Term "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 167
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 113

   88 Expression: Term "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 168
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 114

   94 Expression: Term "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 169
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 115

   95 Expression: Term "<" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 170
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 116

   96 Expression: Term ">" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 171
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 117

   89 Expression: Term "*" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 172
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 118

   90 Expression: Term "/" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 173
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 119

   91 Expression: Term "%" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 174
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 120

   92 Expression: Term "^" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 175
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 121

  102 Expression: Term "=>" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 176
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 122

   93 Expression: Term "!=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 177
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 123

   97 Expression: Term "<=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 178
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 124

   98 Expression: Term ">=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 179
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 125

  146 Arguments: "(" . Terms ")"
  147          | "(" . error ")"
  148          | "(" . ")"

    error          shift, and go to state 180
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    ")"            shift, and go to state 181
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 182
    Term                             go to state 183
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 126

  107 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 107 (DirectCallExpression)


State 127

  174 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 184


State 128

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 129

  183 Attributes: Attributes "," Attribute .

    $default  reduce using rule 183 (Attributes)


State 130

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  108 IndirectCallExpression: "(" . "*" Term ")" Arguments
  149 TwoOrMoreArguments: "(" . Terms "," Term ")"

    error          shift, and go to state 98
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "*"            shift, and go to state 99
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 185
    Term                             go to state 186
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 131

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  165 Initializer: Term .
  166            | Term . "->" Term

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "->"       shift, and go to state 187
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 165 (Initializer)


State 132

  167 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 188


State 133

  163 Initializers: Initializers . "," Initializer
  168 MaybeInitializers: Initializers .

    ","  shift, and go to state 189

    $default  reduce using rule 168 (MaybeInitializers)


State 134

  164 Initializers: Initializer .

    $default  reduce using rule 164 (Initializers)


State 135

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 190


State 136

  156 MaybeParameters: "(" . Parameters ")"
  157                | "(" . error ")"

    error         shift, and go to state 191
    "in"          shift, and go to state 5
    "["           shift, and go to state 192
    "identifier"  shift, and go to state 6

    Parameters               go to state 193
    Identifier               go to state 194
    TypedVariable            go to state 195
    TypedAttributedVariable  go to state 196


State 137

   15 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 197


State 138

   14 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 198


State 139

   16 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   17               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 199
    "->"  shift, and go to state 200


State 140

   27 TypeDefinition: "type" Identifier "=" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 201
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 141

   18 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    $default  reduce using rule 153 (MaybeFunctionParameters)

    Type                     go to state 202
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    FunctionParameters       go to state 203
    MaybeFunctionParameters  go to state 204
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 142

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "type"         shift, and go to state 18
    "function"     shift, and go to state 19

    Definition                 go to state 205
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    TypeDefinition             go to state 29


State 143

  179 AttributedVariable: "[" Attributes . "]" Variable
  183 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 206
    ","  shift, and go to state 76


State 144

  178 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 207
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 145

  109 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 208
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 146

  112 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 209
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 147

  111 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 210
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 148

  110 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 211
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 149

  113 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 212
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 150

   84 Expression: "(" error ")" .

    $default  reduce using rule 84 (Expression)


State 151

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  108 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    ")"        shift, and go to state 213
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 152

   83 Expression: "(" Term ")" .

    $default  reduce using rule 83 (Expression)


State 153

  116 List: "[" error "]" .

    $default  reduce using rule 116 (List)


State 154

  115 List: "[" Terms "]" .

    $default  reduce using rule 115 (List)


State 155

   69 Terms: Terms "," . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 214
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 156

  117 Range: "[" Term ".." . Term "]"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 215
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 157

  105 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 105 (TypeCastingExpression)


State 158

  138 Type: BasicType .

    $default  reduce using rule 138 (Type)


State 159

  139 Type: ComposedType .

    $default  reduce using rule 139 (Type)


State 160

  140 Type: RelationType .

    $default  reduce using rule 140 (Type)


State 161

  141 Type: FixedSizedType .

    $default  reduce using rule 141 (Type)


State 162

  142 BasicType: IdentifierPath .
  143 ComposedType: IdentifierPath . "<" Types ">"
  144 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  145 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 216
    "'"  shift, and go to state 217

    "<"       [reduce using rule 142 (BasicType)]
    $default  reduce using rule 142 (BasicType)


State 163

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  101           | Term "and" Term .
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 112
    "-"   shift, and go to state 113
    "="   shift, and go to state 114
    "<"   shift, and go to state 115
    ">"   shift, and go to state 116
    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "^"   shift, and go to state 120
    "!="  shift, and go to state 122
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 101 (Expression)


State 164

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
   99           | Term "or" Term .
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 108
    "xor"  shift, and go to state 110
    "+"    shift, and go to state 112
    "-"    shift, and go to state 113
    "="    shift, and go to state 114
    "<"    shift, and go to state 115
    ">"    shift, and go to state 116
    "*"    shift, and go to state 117
    "/"    shift, and go to state 118
    "%"    shift, and go to state 119
    "^"    shift, and go to state 120
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 99 (Expression)


State 165

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  100           | Term "xor" Term .
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 108
    "+"    shift, and go to state 112
    "-"    shift, and go to state 113
    "="    shift, and go to state 114
    "<"    shift, and go to state 115
    ">"    shift, and go to state 116
    "*"    shift, and go to state 117
    "/"    shift, and go to state 118
    "%"    shift, and go to state 119
    "^"    shift, and go to state 120
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 100 (Expression)


State 166

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  103           | Term "implies" Term .
  105 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 108
    "or"   shift, and go to state 109
    "xor"  shift, and go to state 110
    "+"    shift, and go to state 112
    "-"    shift, and go to state 113
    "="    shift, and go to state 114
    "<"    shift, and go to state 115
    ">"    shift, and go to state 116
    "*"    shift, and go to state 117
    "/"    shift, and go to state 118
    "%"    shift, and go to state 119
    "^"    shift, and go to state 120
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 103 (Expression)


State 167

   87 Expression: Term . "+" Term
   87           | Term "+" Term .
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 87 (Expression)


State 168

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   88           | Term "-" Term .
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 88 (Expression)


State 169

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   94           | Term "=" Term .
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 112
    "-"   shift, and go to state 113
    "<"   shift, and go to state 115
    ">"   shift, and go to state 116
    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "^"   shift, and go to state 120
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 94 (Expression)


State 170

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   95           | Term "<" Term .
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 112
    "-"  shift, and go to state 113
    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 95 (Expression)


State 171

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   96           | Term ">" Term .
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 112
    "-"  shift, and go to state 113
    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 96 (Expression)


State 172

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   89           | Term "*" Term .
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 120

    $default  reduce using rule 89 (Expression)


State 173

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   90           | Term "/" Term .
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 120

    $default  reduce using rule 90 (Expression)


State 174

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   91           | Term "%" Term .
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 120

    $default  reduce using rule 91 (Expression)


State 175

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   92           | Term "^" Term .
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 92 (Expression)


State 176

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  102           | Term "=>" Term .
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 108
    "or"   shift, and go to state 109
    "xor"  shift, and go to state 110
    "+"    shift, and go to state 112
    "-"    shift, and go to state 113
    "="    shift, and go to state 114
    "<"    shift, and go to state 115
    ">"    shift, and go to state 116
    "*"    shift, and go to state 117
    "/"    shift, and go to state 118
    "%"    shift, and go to state 119
    "^"    shift, and go to state 120
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 102 (Expression)


State 177

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   93           | Term "!=" Term .
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 112
    "-"   shift, and go to state 113
    "<"   shift, and go to state 115
    ">"   shift, and go to state 116
    "*"   shift, and go to state 117
    "/"   shift, and go to state 118
    "%"   shift, and go to state 119
    "^"   shift, and go to state 120
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 93 (Expression)


State 178

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   97           | Term "<=" Term .
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 112
    "-"  shift, and go to state 113
    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 97 (Expression)


State 179

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   98           | Term ">=" Term .
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 112
    "-"  shift, and go to state 113
    "*"  shift, and go to state 117
    "/"  shift, and go to state 118
    "%"  shift, and go to state 119
    "^"  shift, and go to state 120

    $default  reduce using rule 98 (Expression)


State 180

  147 Arguments: "(" error . ")"

    ")"  shift, and go to state 218


State 181

  148 Arguments: "(" ")" .

    $default  reduce using rule 148 (Arguments)


State 182

   69 Terms: Terms . "," Term
  146 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 219
    ","  shift, and go to state 155


State 183

   70 Terms: Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 70 (Terms)


State 184

  174 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 174 (DotSeparatedIdentifiers)


State 185

   69 Terms: Terms . "," Term
  149 TwoOrMoreArguments: "(" Terms . "," Term ")"

    ","  shift, and go to state 220


State 186

   70 Terms: Term .
   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    ")"        shift, and go to state 152
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 70 (Terms)


State 187

  166 Initializer: Term "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 221
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 188

  167 Initializer: TwoOrMoreArguments "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 222
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 189

  163 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 130
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 131
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    TwoOrMoreArguments               go to state 132
    Initializer                      go to state 223
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 190

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 191

  157 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 224


State 192

  181 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 225
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 193

  154 Parameters: Parameters . "," TypedAttributedVariable
  156 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 226
    ","  shift, and go to state 227


State 194

  178 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 144


State 195

  182 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 182 (TypedAttributedVariable)


State 196

  155 Parameters: TypedAttributedVariable .

    $default  reduce using rule 155 (Parameters)


State 197

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 228
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 198

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 229
    "in"          shift, and go to state 5
    "["           shift, and go to state 230
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 231
    Enumerators           go to state 232
    Identifier            go to state 233


State 199

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 247
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 200

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 261
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 201

   27 TypeDefinition: "type" Identifier "=" Type .

    $default  reduce using rule 27 (TypeDefinition)


State 202

  151 FunctionParameters: Type .

    $default  reduce using rule 151 (FunctionParameters)


State 203

  150 FunctionParameters: FunctionParameters . "*" Type
  152 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 262

    $default  reduce using rule 152 (MaybeFunctionParameters)


State 204

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 263


State 205

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 206

  179 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 87
    Variable       go to state 264
    TypedVariable  go to state 89


State 207

  178 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 178 (TypedVariable)


State 208

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  109 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 265
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 209

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  112 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 266
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 210

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  111 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 267
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 211

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  110 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 268
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 212

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  113 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 269
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 213

  108 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 125

    Arguments  go to state 270


State 214

   69 Terms: Terms "," Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 69 (Terms)


State 215

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  117 Range: "[" Term ".." Term . "]"

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "]"        shift, and go to state 271
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 216

  143 ComposedType: IdentifierPath "<" . Types ">"
  144 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    $default  reduce using rule 153 (MaybeFunctionParameters)

    Types                    go to state 272
    Type                     go to state 273
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    FunctionParameters       go to state 203
    MaybeFunctionParameters  go to state 274
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 217

  145 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 275
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 218

  147 Arguments: "(" error ")" .

    $default  reduce using rule 147 (Arguments)


State 219

  146 Arguments: "(" Terms ")" .

    $default  reduce using rule 146 (Arguments)


State 220

   69 Terms: Terms "," . Term
  149 TwoOrMoreArguments: "(" Terms "," . Term ")"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 276
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 221

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  166 Initializer: Term "->" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 166 (Initializer)


State 222

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  167 Initializer: TwoOrMoreArguments "->" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 167 (Initializer)


State 223

  163 Initializers: Initializers "," Initializer .

    $default  reduce using rule 163 (Initializers)


State 224

  157 MaybeParameters: "(" error ")" .

    $default  reduce using rule 157 (MaybeParameters)


State 225

  181 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  183 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 277
    ","  shift, and go to state 76


State 226

  156 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 156 (MaybeParameters)


State 227

  154 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 192
    "identifier"  shift, and go to state 6

    Identifier               go to state 194
    TypedVariable            go to state 195
    TypedAttributedVariable  go to state 278


State 228

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 279


State 229

   24 EnumeratorDefinition: error .

    $default  reduce using rule 24 (EnumeratorDefinition)


State 230

   23 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 280
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 231

   26 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 26 (Enumerators)


State 232

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   25 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 281
    ","  shift, and go to state 282


State 233

   22 EnumeratorDefinition: Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 234

   61 SequenceRule: "seq" . Rules "endseq"
   63             | "seq" . error "endseq"

    error         shift, and go to state 283
    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 284
    Rules                    go to state 285
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 235

   57 BlockRule: "par" . Rules "endpar"
   59          | "par" . error "endpar"

    error         shift, and go to state 286
    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 284
    Rules                    go to state 287
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 236

   41 SkipRule: "skip" .

    $default  reduce using rule 41 (SkipRule)


State 237

   51 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 288


State 238

   52 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   53           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 289


State 239

   54 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 86
    "identifier"  shift, and go to state 6

    Identifier          go to state 87
    Variable            go to state 88
    TypedVariable       go to state 89
    AttributedVariable  go to state 290


State 240

   55 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 291
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 241

   65 CallRule: "call" . DirectCallExpression
   67         | "call" . IndirectCallExpression

    "in"          shift, and go to state 5
    "("           shift, and go to state 244
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    DirectCallExpression     go to state 292
    IndirectCallExpression   go to state 293
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 242

   42 ConditionalRule: "if" . Term "then" Rule
   43                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 294
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 243

   44 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   45         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 295
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 244

  108 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 99


State 245

   56 BlockRule: "{" . Rules "}"
   58          | "{" . error "}"

    error         shift, and go to state 296
    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 284
    Rules                    go to state 297
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 246

   60 SequenceRule: "{|" . Rules "|}"
   62             | "{|" . error "|}"

    error         shift, and go to state 298
    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 284
    Rules                    go to state 299
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 247

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 248

   28 Rule: SkipRule .

    $default  reduce using rule 28 (Rule)


State 249

   29 Rule: ConditionalRule .

    $default  reduce using rule 29 (Rule)


State 250

   30 Rule: CaseRule .

    $default  reduce using rule 30 (Rule)


State 251

   31 Rule: LetRule .

    $default  reduce using rule 31 (Rule)


State 252

   32 Rule: ForallRule .

    $default  reduce using rule 32 (Rule)


State 253

   33 Rule: ChooseRule .

    $default  reduce using rule 33 (Rule)


State 254

   34 Rule: IterateRule .

    $default  reduce using rule 34 (Rule)


State 255

   35 Rule: BlockRule .

    $default  reduce using rule 35 (Rule)


State 256

   36 Rule: SequenceRule .

    $default  reduce using rule 36 (Rule)


State 257

   37 Rule: UpdateRule .

    $default  reduce using rule 37 (Rule)


State 258

   38 Rule: CallRule .

    $default  reduce using rule 38 (Rule)


State 259

   64 UpdateRule: DirectCallExpression . ":=" Term
   66 CallRule: DirectCallExpression .

    ":="  shift, and go to state 300

    $default  reduce using rule 66 (CallRule)


State 260

   68 CallRule: IndirectCallExpression .

    $default  reduce using rule 68 (CallRule)


State 261

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 301


State 262

  150 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 302
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 263

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 303
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 264

  179 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 179 (AttributedVariable)


State 265

  109 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 304
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 266

  112 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 305
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 267

  111 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 306
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 268

  110 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 307
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 269

  113 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 308
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 270

  108 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 108 (IndirectCallExpression)


State 271

  117 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 117 (Range)


State 272

  136 Types: Types . "," Type
  143 ComposedType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 309
    ">"  shift, and go to state 310


State 273

  137 Types: Type .
  151 FunctionParameters: Type .

    "*"       reduce using rule 151 (FunctionParameters)
    "->"      reduce using rule 151 (FunctionParameters)
    $default  reduce using rule 137 (Types)


State 274

  144 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 311


State 275

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  145 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 145 (FixedSizedType)


State 276

   69 Terms: Terms "," Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  149 TwoOrMoreArguments: "(" Terms "," Term . ")"

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    ")"        shift, and go to state 312
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 69 (Terms)


State 277

  181 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 194
    TypedVariable  go to state 313


State 278

  154 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 154 (Parameters)


State 279

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 314
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 280

   23 EnumeratorDefinition: "[" Attributes . "]" Identifier
  183 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 315
    ","  shift, and go to state 76


State 281

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 14 (EnumerationDefinition)


State 282

   25 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 229
    "in"          shift, and go to state 5
    "["           shift, and go to state 230
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 316
    Identifier            go to state 233


State 283

   63 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 317


State 284

   40 Rules: Rule .

    $default  reduce using rule 40 (Rules)


State 285

   39 Rules: Rules . Rule
   61 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 234
    "endseq"      shift, and go to state 318
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 319
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 286

   59 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 320


State 287

   39 Rules: Rules . Rule
   57 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "endpar"      shift, and go to state 321
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 319
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 288

   51 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 322


State 289

   52 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   53           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 323


State 290

   54 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 324


State 291

   55 IterateRule: "iterate" Rule .

    $default  reduce using rule 55 (IterateRule)


State 292

   65 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 65 (CallRule)


State 293

   67 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 67 (CallRule)


State 294

   42 ConditionalRule: "if" Term . "then" Rule
   43                | "if" Term . "then" Rule "else" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 325
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 295

   44 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   45         | "case" Term . "of" "{" error "}"
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 326
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 296

   58 BlockRule: "{" error . "}"

    "}"  shift, and go to state 327


State 297

   39 Rules: Rules . Rule
   56 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "}"           shift, and go to state 328
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 319
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 298

   62 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 329


State 299

   39 Rules: Rules . Rule
   60 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "|}"          shift, and go to state 330
    "identifier"  shift, and go to state 6

    Rule                     go to state 319
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 300

   64 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 331
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 301

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 332
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 302

  150 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 150 (FunctionParameters)


State 303

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 333

    $default  reduce using rule 160 (MaybeDefined)

    MaybeDefined  go to state 334


State 304

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  109 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 109 (LetExpression)


State 305

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  112 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 112 (UniversalQuantifierExpression)


State 306

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  111 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 111 (ChooseExpression)


State 307

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  110 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 110 (ConditionalExpression)


State 308

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  113 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 113 (ExistentialQuantifierExpression)


State 309

  136 Types: Types "," . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 335
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 310

  143 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 143 (ComposedType)


State 311

  144 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "."           shift, and go to state 44
    "identifier"  shift, and go to state 6

    Type                     go to state 336
    BasicType                go to state 158
    ComposedType             go to state 159
    RelationType             go to state 160
    FixedSizedType           go to state 161
    Identifier               go to state 72
    IdentifierPath           go to state 162
    DotSeparatedIdentifiers  go to state 74


State 312

  149 TwoOrMoreArguments: "(" Terms "," Term ")" .

    $default  reduce using rule 149 (TwoOrMoreArguments)


State 313

  181 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 181 (TypedAttributedVariable)


State 314

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 15 (DerivedDefinition)


State 315

   23 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 337


State 316

   25 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 317

   63 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 63 (SequenceRule)


State 318

   61 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 319

   39 Rules: Rules Rule .

    $default  reduce using rule 39 (Rules)


State 320

   59 BlockRule: "par" error "endpar" .

    $default  reduce using rule 59 (BlockRule)


State 321

   57 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 322

   51 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 338
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 323

   52 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   53           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 339
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 324

   54 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 340
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 325

   42 ConditionalRule: "if" Term "then" . Rule
   43                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 341
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 326

   44 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   45         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 342


State 327

   58 BlockRule: "{" error "}" .

    $default  reduce using rule 58 (BlockRule)


State 328

   56 BlockRule: "{" Rules "}" .

    $default  reduce using rule 56 (BlockRule)


State 329

   62 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 62 (SequenceRule)


State 330

   60 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 331

   64 UpdateRule: DirectCallExpression ":=" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 64 (UpdateRule)


State 332

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 17 (RuleDefinition)


State 333

  159 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 343


State 334

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 344

    $default  reduce using rule 162 (MaybeInitially)

    MaybeInitially  go to state 345


State 335

  136 Types: Types "," Type .

    $default  reduce using rule 136 (Types)


State 336

  144 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 346


State 337

   23 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 338

   51 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 347
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 339

   52 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   53           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 348
    "with"     shift, and go to state 349
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 340

   54 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 350
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 341

   42 ConditionalRule: "if" Term "then" Rule .
   43                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 351

    $default  reduce using rule 42 (ConditionalRule)


State 342

   44 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   45         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 352
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 353
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "_"            shift, and go to state 354
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 355
    CaseLabels                       go to state 356
    Term                             go to state 357
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 343

  159 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 358
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 344

  161 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 359


State 345

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 18 (FunctionDefinition)


State 346

  144 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 144 (RelationType)


State 347

   51 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 360
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 348

   52 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 361
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 349

   53 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 362
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 350

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 363
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 351

   43 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 364
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 352

   45 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 365


State 353

   46 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 366


State 354

   47 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 367


State 355

   50 CaseLabels: CaseLabel .

    $default  reduce using rule 50 (CaseLabels)


State 356

   44 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   49 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 353
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "}"            shift, and go to state 368
    "_"            shift, and go to state 354
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 369
    Term                             go to state 357
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 357

   48 CaseLabel: Term . ":" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    ":"        shift, and go to state 370
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 358

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type
  159 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "}"        shift, and go to state 371
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 359

  161 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 130
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "."            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 169 (MaybeInitializers)

    Term                             go to state 131
    Expression                       go to state 52
    TypeCastingExpression            go to state 53
    DirectCallExpression             go to state 54
    IndirectCallExpression           go to state 55
    LetExpression                    go to state 56
    ConditionalExpression            go to state 57
    ChooseExpression                 go to state 58
    UniversalQuantifierExpression    go to state 59
    ExistentialQuantifierExpression  go to state 60
    List                             go to state 61
    Range                            go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BitLiteral                       go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    TwoOrMoreArguments               go to state 132
    Initializers                     go to state 133
    Initializer                      go to state 134
    MaybeInitializers                go to state 372
    Identifier                       go to state 72
    IdentifierPath                   go to state 73
    DotSeparatedIdentifiers          go to state 74


State 360

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 51 (LetRule)


State 361

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ForallRule)


State 362

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 373
    "as"       shift, and go to state 107
    "and"      shift, and go to state 108
    "or"       shift, and go to state 109
    "xor"      shift, and go to state 110
    "implies"  shift, and go to state 111
    "+"        shift, and go to state 112
    "-"        shift, and go to state 113
    "="        shift, and go to state 114
    "<"        shift, and go to state 115
    ">"        shift, and go to state 116
    "*"        shift, and go to state 117
    "/"        shift, and go to state 118
    "%"        shift, and go to state 119
    "^"        shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 363

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 54 (ChooseRule)


State 364

   43 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 43 (ConditionalRule)


State 365

   45 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 45 (CaseRule)


State 366

   46 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 374
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 367

   47 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 375
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 368

   44 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 44 (CaseRule)


State 369

   49 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 49 (CaseLabels)


State 370

   48 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 376
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 371

  159 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 159 (MaybeDefined)


State 372

  161 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 377


State 373

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"         shift, and go to state 234
    "par"         shift, and go to state 235
    "skip"        shift, and go to state 236
    "let"         shift, and go to state 237
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 238
    "choose"      shift, and go to state 239
    "iterate"     shift, and go to state 240
    "call"        shift, and go to state 241
    "if"          shift, and go to state 242
    "case"        shift, and go to state 243
    "("           shift, and go to state 244
    "{"           shift, and go to state 245
    "."           shift, and go to state 44
    "{|"          shift, and go to state 246
    "identifier"  shift, and go to state 6

    Rule                     go to state 378
    SkipRule                 go to state 248
    ConditionalRule          go to state 249
    CaseRule                 go to state 250
    LetRule                  go to state 251
    ForallRule               go to state 252
    ChooseRule               go to state 253
    IterateRule              go to state 254
    BlockRule                go to state 255
    SequenceRule             go to state 256
    UpdateRule               go to state 257
    CallRule                 go to state 258
    DirectCallExpression     go to state 259
    IndirectCallExpression   go to state 260
    Identifier               go to state 72
    IdentifierPath           go to state 73
    DotSeparatedIdentifiers  go to state 74


State 374

   46 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 375

   47 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 47 (CaseLabel)


State 376

   48 CaseLabel: Term ":" Rule .

    $default  reduce using rule 48 (CaseLabel)


State 377

  161 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 161 (MaybeInitially)


State 378

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 53 (ForallRule)
