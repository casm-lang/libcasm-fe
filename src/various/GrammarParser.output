Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | error

    7 AttributedDefinition: "[" Attributes "]" Definition
    8                     | Definition

    9 Definitions: Definitions AttributedDefinition
   10            | AttributedDefinition

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   12                   | ProgramFunctionDefinition

   13 MaybeInitially: "initially" "{" MaybeInitializers "}"
   14               | %empty

   15 MaybeDefined: "defined" "{" Term "}"
   16             | %empty

   17 FunctionParameters: FunctionParameters "*" Type
   18                   | Type

   19 MaybeFunctionParameters: FunctionParameters
   20                        | %empty

   21 ProgramFunctionDefinition: "init" IdentifierPath
   22                          | "init" "{" MaybeInitializers "}"

   23 Initializer: Term
   24            | Term "->" Term
   25            | TwoOrMoreArguments "->" Term

   26 Initializers: Initializers "," Initializer
   27             | Initializer

   28 MaybeInitializers: Initializers
   29                  | %empty

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   32 Identifier: "identifier"

   33 Identifiers: Identifiers "," Identifier
   34            | Identifier

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   36                        | Identifier

   37 IdentifierPath: DotSeparatedIdentifiers
   38               | "." DotSeparatedIdentifiers

   39 Variable: Identifier ":" Type
   40         | Identifier

   41 Parameters: Parameters "," Variable
   42           | Variable

   43 MaybeParameters: "(" Parameters ")"
   44                | "(" error ")"
   45                | %empty

   46 Type: BasicType
   47     | ComposedType
   48     | RelationType
   49     | FixedSizedType

   50 BasicType: IdentifierPath

   51 ComposedType: IdentifierPath "<" Types ">"

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   53 FixedSizedType: IdentifierPath "'" Term

   54 Types: Types "," Type
   55      | Type

   56 Atom: Reference
   57     | BitNumber
   58     | IntegerNumber
   59     | FloatingNumber
   60     | RationalNumber
   61     | String
   62     | Undefined
   63     | Boolean

   64 Undefined: "undef"

   65 Boolean: "true"
   66        | "false"

   67 String: "string"

   68 BitNumber: "binary"
   69          | "hexadecimal"

   70 IntegerNumber: "integer"

   71 FloatingNumber: "floating"

   72 RationalNumber: "rational"

   73 Reference: "@" IdentifierPath

   74 Term: DirectCallExpression
   75     | IndirectCallExpression
   76     | ConditionalExpression
   77     | UniversalQuantifierExpression
   78     | ExistentialQuantifierExpression
   79     | Expression
   80     | List
   81     | Range
   82     | Atom

   83 Expression: "(" Term ")"
   84           | "(" error ")"
   85           | "+" Term
   86           | "-" Term
   87           | Term "+" Term
   88           | Term "-" Term
   89           | Term "*" Term
   90           | Term "/" Term
   91           | Term "%" Term
   92           | Term "^" Term
   93           | Term "!=" Term
   94           | Term "=" Term
   95           | Term "<" Term
   96           | Term ">" Term
   97           | Term "<=" Term
   98           | Term ">=" Term
   99           | Term "or" Term
  100           | Term "xor" Term
  101           | Term "and" Term
  102           | Term "=>" Term
  103           | Term "implies" Term
  104           | "not" Term

  105 Range: "[" Term ".." Term "]"

  106 List: "[" "]"
  107     | "[" Terms "]"
  108     | "[" error "]"

  109 Terms: Terms "," Term
  110      | Term

  111 Arguments: "(" Terms ")"
  112          | "(" error ")"
  113          | "(" ")"

  114 TwoOrMoreArguments: "(" Term "," Terms ")"

  115 DirectCallExpression: IdentifierPath
  116                     | IdentifierPath Arguments

  117 IndirectCallExpression: "(" "*" Term ")" Arguments

  118 ConditionalExpression: "if" Term "then" Term "else" Term

  119 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  120 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  121 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  122               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  123 Rule: SkipRule
  124     | ConditionalRule
  125     | CaseRule
  126     | LetRule
  127     | ForallRule
  128     | ChooseRule
  129     | IterateRule
  130     | BlockRule
  131     | SequenceRule
  132     | UpdateRule
  133     | CallRule

  134 Rules: Rules Rule
  135      | Rule

  136 SkipRule: "skip"

  137 ConditionalRule: "if" Term "then" Rule
  138                | "if" Term "then" Rule "else" Rule

  139 CaseRule: "case" Term "of" "{" CaseLabels "}"
  140         | "case" Term "of" "{" error "}"

  141 CaseLabel: "default" ":" Rule
  142          | "_" ":" Rule
  143          | Term ":" Rule

  144 CaseLabels: CaseLabel CaseLabels
  145           | CaseLabel

  146 LetRule: "let" Variable "=" Term "in" Rule

  147 ForallRule: "forall" Variable "in" Term "do" Rule

  148 ChooseRule: "choose" Variable "in" Term "do" Rule

  149 IterateRule: "iterate" Rule

  150 BlockRule: "{" Rules "}"
  151          | "par" Rules "endpar"
  152          | "{" error "}"
  153          | "par" error "endpar"

  154 SequenceRule: "{|" Rules "|}"
  155             | "seq" Rules "endseq"
  156             | "{|" error "|}"
  157             | "seq" error "endseq"

  158 UpdateRule: DirectCallExpression ":=" Term

  159 CallRule: "call" DirectCallExpression
  160         | DirectCallExpression
  161         | "call" IndirectCallExpression
  162         | IndirectCallExpression

  163 Attribute: BasicAttribute
  164          | ExpressionAttribute

  165 Attributes: Attributes "," Attribute
  166           | Attribute

  167 BasicAttribute: Identifier

  168 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 6 44 84 108 112 140 152 153 156 157
"CASM" (258) 1
"init" (259) 21 22
"derived" (260) 30
"enum" (261) 31
"rule" (262) 121 122
"function" (263) 11
"initially" (264) 13
"defined" (265) 15
"seq" (266) 155 157
"endseq" (267) 155 157
"par" (268) 151 153
"endpar" (269) 151 153
"skip" (270) 136
"let" (271) 146
"in" (272) 119 120 146 147 148
"forall" (273) 119 147
"choose" (274) 148
"iterate" (275) 149
"do" (276) 147 148
"call" (277) 159 161
"if" (278) 118 137 138
"then" (279) 118 137 138
"else" (280) 118 138
"case" (281) 139 140
"of" (282) 139 140
"default" (283) 141
"holds" (284) 119
"exists" (285) 120
"with" (286) 120
"undef" (287) 64
"false" (288) 66
"true" (289) 65
"and" (290) 101
"or" (291) 99
"xor" (292) 100
"implies" (293) 103
"not" (294) 104
"+" (295) 85 87
"-" (296) 86 88
"=" (297) 30 31 94 121 122 146
"(" (298) 43 44 83 84 111 112 113 114 117
")" (299) 43 44 83 84 111 112 113 114 117
"[" (300) 7 105 106 107 108
"]" (301) 7 105 106 107 108
"{" (302) 13 15 22 31 139 140 150 152
"}" (303) 13 15 22 31 139 140 150 152
":" (304) 11 39 141 142 143
"_" (305) 142
"@" (306) 73
"," (307) 26 33 41 54 109 114 165
"<" (308) 51 52 95
">" (309) 51 52 96
"*" (310) 17 89 117
"/" (311) 90
"%" (312) 91
"^" (313) 92
"'" (314) 53
".." (315) 105
"." (316) 35 38
"->" (317) 11 24 25 30 52 122
"=>" (318) 102
":=" (319) 158
"!=" (320) 93
"<=" (321) 97
">=" (322) 98
"{|" (323) 154 156
"|}" (324) 154 156
"binary" (325) 68
"hexadecimal" (326) 69
"integer" (327) 70
"rational" (328) 72
"floating" (329) 71
"string" (330) 67
"identifier" (331) 32
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5 6, on right: 7 8
AttributedDefinition (84)
    on left: 7 8, on right: 9 10
Definitions (85)
    on left: 9 10, on right: 1 9
FunctionDefinition (86)
    on left: 11 12, on right: 2
MaybeInitially (87)
    on left: 13 14, on right: 11
MaybeDefined (88)
    on left: 15 16, on right: 11
FunctionParameters (89)
    on left: 17 18, on right: 17 19
MaybeFunctionParameters (90)
    on left: 19 20, on right: 11 52
ProgramFunctionDefinition (91)
    on left: 21 22, on right: 12
Initializer (92)
    on left: 23 24 25, on right: 26 27
Initializers (93)
    on left: 26 27, on right: 26 28
MaybeInitializers (94)
    on left: 28 29, on right: 13 22
DerivedDefinition (95)
    on left: 30, on right: 3
EnumerationDefinition (96)
    on left: 31, on right: 5
Identifier (97)
    on left: 32, on right: 11 30 31 33 34 35 36 39 40 121 122 167 168
Identifiers (98)
    on left: 33 34, on right: 31 33
DotSeparatedIdentifiers (99)
    on left: 35 36, on right: 35 37 38
IdentifierPath (100)
    on left: 37 38, on right: 21 50 51 52 53 73 115 116
Variable (101)
    on left: 39 40, on right: 41 42 119 120 146 147 148
Parameters (102)
    on left: 41 42, on right: 41 43
MaybeParameters (103)
    on left: 43 44 45, on right: 30 121 122
Type (104)
    on left: 46 47 48 49, on right: 11 17 18 30 39 52 54 55 122
BasicType (105)
    on left: 50, on right: 46
ComposedType (106)
    on left: 51, on right: 47
RelationType (107)
    on left: 52, on right: 48
FixedSizedType (108)
    on left: 53, on right: 49
Types (109)
    on left: 54 55, on right: 51 54
Atom (110)
    on left: 56 57 58 59 60 61 62 63, on right: 82
Undefined (111)
    on left: 64, on right: 62
Boolean (112)
    on left: 65 66, on right: 63
String (113)
    on left: 67, on right: 61
BitNumber (114)
    on left: 68 69, on right: 57
IntegerNumber (115)
    on left: 70, on right: 58
FloatingNumber (116)
    on left: 71, on right: 59
RationalNumber (117)
    on left: 72, on right: 60
Reference (118)
    on left: 73, on right: 56
Term (119)
    on left: 74 75 76 77 78 79 80 81 82, on right: 15 23 24 25 30 53
    83 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 109 110 114 117 118 119 120 137 138 139 140 143 146 147
    148 158 168
Expression (120)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104, on right: 79
Range (121)
    on left: 105, on right: 81
List (122)
    on left: 106 107 108, on right: 80
Terms (123)
    on left: 109 110, on right: 107 109 111 114
Arguments (124)
    on left: 111 112 113, on right: 116 117
TwoOrMoreArguments (125)
    on left: 114, on right: 25
DirectCallExpression (126)
    on left: 115 116, on right: 74 158 159 160
IndirectCallExpression (127)
    on left: 117, on right: 75 161 162
ConditionalExpression (128)
    on left: 118, on right: 76
UniversalQuantifierExpression (129)
    on left: 119, on right: 77
ExistentialQuantifierExpression (130)
    on left: 120, on right: 78
RuleDefinition (131)
    on left: 121 122, on right: 4
Rule (132)
    on left: 123 124 125 126 127 128 129 130 131 132 133, on right:
    121 122 134 135 137 138 141 142 143 146 147 148 149
Rules (133)
    on left: 134 135, on right: 134 150 151 154 155
SkipRule (134)
    on left: 136, on right: 123
ConditionalRule (135)
    on left: 137 138, on right: 124
CaseRule (136)
    on left: 139 140, on right: 125
CaseLabel (137)
    on left: 141 142 143, on right: 144 145
CaseLabels (138)
    on left: 144 145, on right: 139 144
LetRule (139)
    on left: 146, on right: 126
ForallRule (140)
    on left: 147, on right: 127
ChooseRule (141)
    on left: 148, on right: 128
IterateRule (142)
    on left: 149, on right: 129
BlockRule (143)
    on left: 150 151 152 153, on right: 130
SequenceRule (144)
    on left: 154 155 156 157, on right: 131
UpdateRule (145)
    on left: 158, on right: 132
CallRule (146)
    on left: 159 160 161 162, on right: 133
Attribute (147)
    on left: 163 164, on right: 165 166
Attributes (148)
    on left: 165 166, on right: 7 165
BasicAttribute (149)
    on left: 167, on right: 163
ExpressionAttribute (150)
    on left: 168, on right: 164


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    Definition                 go to state 10
    AttributedDefinition       go to state 11
    Definitions                go to state 12
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 18


State 3

    6 Definition: error .

    $default  reduce using rule 6 (Definition)


State 4

   21 ProgramFunctionDefinition: "init" . IdentifierPath
   22                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 19
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 24


State 5

   30 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 25


State 6

   31 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier  go to state 26


State 7

  121 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  122               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 27


State 8

   11 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 21

    Identifier  go to state 28


State 9

    7 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 30
    Attributes           go to state 31
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 10

    8 AttributedDefinition: Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 11

   10 Definitions: AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 12

    1 Specification: "CASM" Definitions .
    9 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 10
    AttributedDefinition       go to state 34
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 13

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 14

   12 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 12 (FunctionDefinition)


State 15

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 16

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 17

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 18

    0 $accept: Specification "end of file" .

    $default  accept


State 19

   22 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 55
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 20

   38 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 76


State 21

   32 Identifier: "identifier" .

    $default  reduce using rule 32 (Identifier)


State 22

   36 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 36 (DotSeparatedIdentifiers)


State 23

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 77

    $default  reduce using rule 37 (IdentifierPath)


State 24

   21 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 25

   30 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 79


State 26

   31 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 80


State 27

  121 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  122               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 81


State 28

   11 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 82


State 29

  167 BasicAttribute: Identifier .
  168 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 167 (BasicAttribute)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 84
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 30

  166 Attributes: Attribute .

    $default  reduce using rule 166 (Attributes)


State 31

    7 AttributedDefinition: "[" Attributes . "]" Definition
  165 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 85
    ","  shift, and go to state 86


State 32

  163 Attribute: BasicAttribute .

    $default  reduce using rule 163 (Attribute)


State 33

  164 Attribute: ExpressionAttribute .

    $default  reduce using rule 164 (Attribute)


State 34

    9 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 35

  119 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 88


State 36

  118 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 89
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 37

  120 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 90


State 38

   64 Undefined: "undef" .

    $default  reduce using rule 64 (Undefined)


State 39

   66 Boolean: "false" .

    $default  reduce using rule 66 (Boolean)


State 40

   65 Boolean: "true" .

    $default  reduce using rule 65 (Boolean)


State 41

  104 Expression: "not" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 91
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 42

   85 Expression: "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 92
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 43

   86 Expression: "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 93
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 44

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  114 TwoOrMoreArguments: "(" . Term "," Terms ")"
  117 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 94
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 95
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 96
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 45

  105 Range: "[" . Term ".." Term "]"
  106 List: "[" . "]"
  107     | "[" . Terms "]"
  108     | "[" . error "]"

    error          shift, and go to state 97
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "]"            shift, and go to state 98
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 99
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 100
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 46

   73 Reference: "@" . IdentifierPath

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 101


State 47

   68 BitNumber: "binary" .

    $default  reduce using rule 68 (BitNumber)


State 48

   69 BitNumber: "hexadecimal" .

    $default  reduce using rule 69 (BitNumber)


State 49

   70 IntegerNumber: "integer" .

    $default  reduce using rule 70 (IntegerNumber)


State 50

   72 RationalNumber: "rational" .

    $default  reduce using rule 72 (RationalNumber)


State 51

   71 FloatingNumber: "floating" .

    $default  reduce using rule 71 (FloatingNumber)


State 52

   67 String: "string" .

    $default  reduce using rule 67 (String)


State 53

   27 Initializers: Initializer .

    $default  reduce using rule 27 (Initializers)


State 54

   26 Initializers: Initializers . "," Initializer
   28 MaybeInitializers: Initializers .

    ","  shift, and go to state 102

    $default  reduce using rule 28 (MaybeInitializers)


State 55

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 103


State 56

  115 DirectCallExpression: IdentifierPath .
  116                     | IdentifierPath . Arguments

    "("  shift, and go to state 104

    $default  reduce using rule 115 (DirectCallExpression)

    Arguments  go to state 105


State 57

   82 Term: Atom .

    $default  reduce using rule 82 (Term)


State 58

   62 Atom: Undefined .

    $default  reduce using rule 62 (Atom)


State 59

   63 Atom: Boolean .

    $default  reduce using rule 63 (Atom)


State 60

   61 Atom: String .

    $default  reduce using rule 61 (Atom)


State 61

   57 Atom: BitNumber .

    $default  reduce using rule 57 (Atom)


State 62

   58 Atom: IntegerNumber .

    $default  reduce using rule 58 (Atom)


State 63

   59 Atom: FloatingNumber .

    $default  reduce using rule 59 (Atom)


State 64

   60 Atom: RationalNumber .

    $default  reduce using rule 60 (Atom)


State 65

   56 Atom: Reference .

    $default  reduce using rule 56 (Atom)


State 66

   23 Initializer: Term .
   24            | Term . "->" Term
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "->"       shift, and go to state 119
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 23 (Initializer)


State 67

   79 Term: Expression .

    $default  reduce using rule 79 (Term)


State 68

   81 Term: Range .

    $default  reduce using rule 81 (Term)


State 69

   80 Term: List .

    $default  reduce using rule 80 (Term)


State 70

   25 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 124


State 71

   74 Term: DirectCallExpression .

    $default  reduce using rule 74 (Term)


State 72

   75 Term: IndirectCallExpression .

    $default  reduce using rule 75 (Term)


State 73

   76 Term: ConditionalExpression .

    $default  reduce using rule 76 (Term)


State 74

   77 Term: UniversalQuantifierExpression .

    $default  reduce using rule 77 (Term)


State 75

   78 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 78 (Term)


State 76

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   38 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 38 (IdentifierPath)


State 77

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 125


State 78

   43 MaybeParameters: "(" . Parameters ")"
   44                | "(" . error ")"

    error         shift, and go to state 126
    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 127
    Parameters  go to state 128


State 79

   30 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 129


State 80

   31 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 130


State 81

  121 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  122               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 131
    "->"  shift, and go to state 132


State 82

   11 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 133
    MaybeFunctionParameters  go to state 134
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 136
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 83

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  117 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 94
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 95
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 141
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 84

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  168 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 168 (ExpressionAttribute)


State 85

    7 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8

    Definition                 go to state 142
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 86

  165 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 143
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 87

   39 Variable: Identifier . ":" Type
   40         | Identifier .

    ":"  shift, and go to state 144

    $default  reduce using rule 40 (Variable)


State 88

  119 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 145


State 89

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  118 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 146
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 90

  120 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 147


State 91

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  104           | "not" Term .

    $default  reduce using rule 104 (Expression)


State 92

   85 Expression: "+" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 85 (Expression)


State 93

   86 Expression: "-" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 86 (Expression)


State 94

   84 Expression: "(" error . ")"

    ")"  shift, and go to state 148


State 95

  117 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 149
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 96

   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  114 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    ")"        shift, and go to state 150
    ","        shift, and go to state 151
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 97

  108 List: "[" error . "]"

    "]"  shift, and go to state 152


State 98

  106 List: "[" "]" .

    $default  reduce using rule 106 (List)


State 99

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 Range: "[" Term . ".." Term "]"
  110 Terms: Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    ".."       shift, and go to state 153
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 110 (Terms)


State 100

  107 List: "[" Terms . "]"
  109 Terms: Terms . "," Term

    "]"  shift, and go to state 154
    ","  shift, and go to state 155


State 101

   73 Reference: "@" IdentifierPath .

    $default  reduce using rule 73 (Reference)


State 102

   26 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Initializer                      go to state 156
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 103

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 104

  111 Arguments: "(" . Terms ")"
  112          | "(" . error ")"
  113          | "(" . ")"

    error          shift, and go to state 157
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    ")"            shift, and go to state 158
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 159
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 160
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 105

  116 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 116 (DirectCallExpression)


State 106

  101 Expression: Term "and" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 161
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 107

   99 Expression: Term "or" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 162
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 108

  100 Expression: Term "xor" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 163
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 109

  103 Expression: Term "implies" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 164
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 110

   87 Expression: Term "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 165
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 111

   88 Expression: Term "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 166
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 112

   94 Expression: Term "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 167
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 113

   95 Expression: Term "<" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 168
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 114

   96 Expression: Term ">" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 169
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 115

   89 Expression: Term "*" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 170
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 116

   90 Expression: Term "/" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 171
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 117

   91 Expression: Term "%" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 172
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 118

   92 Expression: Term "^" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 173
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 119

   24 Initializer: Term "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 174
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 120

  102 Expression: Term "=>" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 175
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 121

   93 Expression: Term "!=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 176
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 122

   97 Expression: Term "<=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 177
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 123

   98 Expression: Term ">=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 178
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 124

   25 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 179
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 125

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 126

   44 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 180


State 127

   42 Parameters: Variable .

    $default  reduce using rule 42 (Parameters)


State 128

   41 Parameters: Parameters . "," Variable
   43 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 181
    ","  shift, and go to state 182


State 129

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 183
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 130

   31 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier   go to state 184
    Identifiers  go to state 185


State 131

  121 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 201
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 132

  122 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 213
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 133

   17 FunctionParameters: FunctionParameters . "*" Type
   19 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 214

    $default  reduce using rule 19 (MaybeFunctionParameters)


State 134

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 215


State 135

   50 BasicType: IdentifierPath .
   51 ComposedType: IdentifierPath . "<" Types ">"
   52 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   53 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 216
    "'"  shift, and go to state 217

    $default  reduce using rule 50 (BasicType)


State 136

   18 FunctionParameters: Type .

    $default  reduce using rule 18 (FunctionParameters)


State 137

   46 Type: BasicType .

    $default  reduce using rule 46 (Type)


State 138

   47 Type: ComposedType .

    $default  reduce using rule 47 (Type)


State 139

   48 Type: RelationType .

    $default  reduce using rule 48 (Type)


State 140

   49 Type: FixedSizedType .

    $default  reduce using rule 49 (Type)


State 141

   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    ")"        shift, and go to state 150
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 142

    7 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 143

  165 Attributes: Attributes "," Attribute .

    $default  reduce using rule 165 (Attributes)


State 144

   39 Variable: Identifier ":" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 218
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 145

  119 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 219
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 146

  118 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 220
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 147

  120 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 221
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 148

   84 Expression: "(" error ")" .

    $default  reduce using rule 84 (Expression)


State 149

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  117 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    ")"        shift, and go to state 222
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 150

   83 Expression: "(" Term ")" .

    $default  reduce using rule 83 (Expression)


State 151

  114 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 159
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 223
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 152

  108 List: "[" error "]" .

    $default  reduce using rule 108 (List)


State 153

  105 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 224
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 154

  107 List: "[" Terms "]" .

    $default  reduce using rule 107 (List)


State 155

  109 Terms: Terms "," . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 225
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 156

   26 Initializers: Initializers "," Initializer .

    $default  reduce using rule 26 (Initializers)


State 157

  112 Arguments: "(" error . ")"

    ")"  shift, and go to state 226


State 158

  113 Arguments: "(" ")" .

    $default  reduce using rule 113 (Arguments)


State 159

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  110 Terms: Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 110 (Terms)


State 160

  109 Terms: Terms . "," Term
  111 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 227
    ","  shift, and go to state 155


State 161

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  101           | Term "and" Term .
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 110
    "-"   shift, and go to state 111
    "="   shift, and go to state 112
    "<"   shift, and go to state 113
    ">"   shift, and go to state 114
    "*"   shift, and go to state 115
    "/"   shift, and go to state 116
    "%"   shift, and go to state 117
    "^"   shift, and go to state 118
    "!="  shift, and go to state 121
    "<="  shift, and go to state 122
    ">="  shift, and go to state 123

    $default  reduce using rule 101 (Expression)


State 162

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
   99           | Term "or" Term .
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"  shift, and go to state 106
    "xor"  shift, and go to state 108
    "+"    shift, and go to state 110
    "-"    shift, and go to state 111
    "="    shift, and go to state 112
    "<"    shift, and go to state 113
    ">"    shift, and go to state 114
    "*"    shift, and go to state 115
    "/"    shift, and go to state 116
    "%"    shift, and go to state 117
    "^"    shift, and go to state 118
    "!="   shift, and go to state 121
    "<="   shift, and go to state 122
    ">="   shift, and go to state 123

    $default  reduce using rule 99 (Expression)


State 163

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  100           | Term "xor" Term .
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"  shift, and go to state 106
    "+"    shift, and go to state 110
    "-"    shift, and go to state 111
    "="    shift, and go to state 112
    "<"    shift, and go to state 113
    ">"    shift, and go to state 114
    "*"    shift, and go to state 115
    "/"    shift, and go to state 116
    "%"    shift, and go to state 117
    "^"    shift, and go to state 118
    "!="   shift, and go to state 121
    "<="   shift, and go to state 122
    ">="   shift, and go to state 123

    $default  reduce using rule 100 (Expression)


State 164

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  103           | Term "implies" Term .

    "and"  shift, and go to state 106
    "or"   shift, and go to state 107
    "xor"  shift, and go to state 108
    "+"    shift, and go to state 110
    "-"    shift, and go to state 111
    "="    shift, and go to state 112
    "<"    shift, and go to state 113
    ">"    shift, and go to state 114
    "*"    shift, and go to state 115
    "/"    shift, and go to state 116
    "%"    shift, and go to state 117
    "^"    shift, and go to state 118
    "!="   shift, and go to state 121
    "<="   shift, and go to state 122
    ">="   shift, and go to state 123

    $default  reduce using rule 103 (Expression)


State 165

   87 Expression: Term . "+" Term
   87           | Term "+" Term .
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 87 (Expression)


State 166

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   88           | Term "-" Term .
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 88 (Expression)


State 167

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   94           | Term "=" Term .
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 110
    "-"   shift, and go to state 111
    "<"   shift, and go to state 113
    ">"   shift, and go to state 114
    "*"   shift, and go to state 115
    "/"   shift, and go to state 116
    "%"   shift, and go to state 117
    "^"   shift, and go to state 118
    "<="  shift, and go to state 122
    ">="  shift, and go to state 123

    $default  reduce using rule 94 (Expression)


State 168

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   95           | Term "<" Term .
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 110
    "-"  shift, and go to state 111
    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 95 (Expression)


State 169

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   96           | Term ">" Term .
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 110
    "-"  shift, and go to state 111
    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 96 (Expression)


State 170

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   89           | Term "*" Term .
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 118

    $default  reduce using rule 89 (Expression)


State 171

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   90           | Term "/" Term .
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 118

    $default  reduce using rule 90 (Expression)


State 172

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   91           | Term "%" Term .
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 118

    $default  reduce using rule 91 (Expression)


State 173

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   92           | Term "^" Term .
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 92 (Expression)


State 174

   24 Initializer: Term "->" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 24 (Initializer)


State 175

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  102           | Term "=>" Term .
  103           | Term . "implies" Term

    "and"  shift, and go to state 106
    "or"   shift, and go to state 107
    "xor"  shift, and go to state 108
    "+"    shift, and go to state 110
    "-"    shift, and go to state 111
    "="    shift, and go to state 112
    "<"    shift, and go to state 113
    ">"    shift, and go to state 114
    "*"    shift, and go to state 115
    "/"    shift, and go to state 116
    "%"    shift, and go to state 117
    "^"    shift, and go to state 118
    "!="   shift, and go to state 121
    "<="   shift, and go to state 122
    ">="   shift, and go to state 123

    $default  reduce using rule 102 (Expression)


State 176

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   93           | Term "!=" Term .
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 110
    "-"   shift, and go to state 111
    "<"   shift, and go to state 113
    ">"   shift, and go to state 114
    "*"   shift, and go to state 115
    "/"   shift, and go to state 116
    "%"   shift, and go to state 117
    "^"   shift, and go to state 118
    "<="  shift, and go to state 122
    ">="  shift, and go to state 123

    $default  reduce using rule 93 (Expression)


State 177

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   97           | Term "<=" Term .
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 110
    "-"  shift, and go to state 111
    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 97 (Expression)


State 178

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   98           | Term ">=" Term .
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 110
    "-"  shift, and go to state 111
    "*"  shift, and go to state 115
    "/"  shift, and go to state 116
    "%"  shift, and go to state 117
    "^"  shift, and go to state 118

    $default  reduce using rule 98 (Expression)


State 179

   25 Initializer: TwoOrMoreArguments "->" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 25 (Initializer)


State 180

   44 MaybeParameters: "(" error ")" .

    $default  reduce using rule 44 (MaybeParameters)


State 181

   43 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 43 (MaybeParameters)


State 182

   41 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 228


State 183

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 229


State 184

   34 Identifiers: Identifier .

    $default  reduce using rule 34 (Identifiers)


State 185

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   33 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 230
    ","  shift, and go to state 231


State 186

  155 SequenceRule: "seq" . Rules "endseq"
  157             | "seq" . error "endseq"

    error         shift, and go to state 232
    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 233
    Rules                    go to state 234
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 187

  151 BlockRule: "par" . Rules "endpar"
  153          | "par" . error "endpar"

    error         shift, and go to state 235
    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 233
    Rules                    go to state 236
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 188

  136 SkipRule: "skip" .

    $default  reduce using rule 136 (SkipRule)


State 189

  146 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 237


State 190

  147 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 238


State 191

  148 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 239


State 192

  149 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 240
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 193

  159 CallRule: "call" . DirectCallExpression
  161         | "call" . IndirectCallExpression

    "("           shift, and go to state 196
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 241
    IndirectCallExpression   go to state 242


State 194

  137 ConditionalRule: "if" . Term "then" Rule
  138                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 243
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 195

  139 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  140         | "case" . Term "of" "{" error "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 244
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 196

  117 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 95


State 197

  150 BlockRule: "{" . Rules "}"
  152          | "{" . error "}"

    error         shift, and go to state 245
    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 233
    Rules                    go to state 246
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 198

  154 SequenceRule: "{|" . Rules "|}"
  156             | "{|" . error "|}"

    error         shift, and go to state 247
    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 233
    Rules                    go to state 248
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 199

  158 UpdateRule: DirectCallExpression . ":=" Term
  160 CallRule: DirectCallExpression .

    ":="  shift, and go to state 249

    $default  reduce using rule 160 (CallRule)


State 200

  162 CallRule: IndirectCallExpression .

    $default  reduce using rule 162 (CallRule)


State 201

  121 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 121 (RuleDefinition)


State 202

  123 Rule: SkipRule .

    $default  reduce using rule 123 (Rule)


State 203

  124 Rule: ConditionalRule .

    $default  reduce using rule 124 (Rule)


State 204

  125 Rule: CaseRule .

    $default  reduce using rule 125 (Rule)


State 205

  126 Rule: LetRule .

    $default  reduce using rule 126 (Rule)


State 206

  127 Rule: ForallRule .

    $default  reduce using rule 127 (Rule)


State 207

  128 Rule: ChooseRule .

    $default  reduce using rule 128 (Rule)


State 208

  129 Rule: IterateRule .

    $default  reduce using rule 129 (Rule)


State 209

  130 Rule: BlockRule .

    $default  reduce using rule 130 (Rule)


State 210

  131 Rule: SequenceRule .

    $default  reduce using rule 131 (Rule)


State 211

  132 Rule: UpdateRule .

    $default  reduce using rule 132 (Rule)


State 212

  133 Rule: CallRule .

    $default  reduce using rule 133 (Rule)


State 213

  122 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 250


State 214

   17 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 251
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 215

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 252
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 216

   51 ComposedType: IdentifierPath "<" . Types ">"
   52 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 133
    MaybeFunctionParameters  go to state 253
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 254
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140
    Types                    go to state 255


State 217

   53 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 256
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 218

   39 Variable: Identifier ":" Type .

    $default  reduce using rule 39 (Variable)


State 219

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  119 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 257
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 220

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  118 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 258
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 221

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  120 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 259
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 222

  117 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 104

    Arguments  go to state 260


State 223

  109 Terms: Terms . "," Term
  114 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 261
    ","  shift, and go to state 155


State 224

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "]"        shift, and go to state 262
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 225

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  109 Terms: Terms "," Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 109 (Terms)


State 226

  112 Arguments: "(" error ")" .

    $default  reduce using rule 112 (Arguments)


State 227

  111 Arguments: "(" Terms ")" .

    $default  reduce using rule 111 (Arguments)


State 228

   41 Parameters: Parameters "," Variable .

    $default  reduce using rule 41 (Parameters)


State 229

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 263
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 230

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 31 (EnumerationDefinition)


State 231

   33 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 264


State 232

  157 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 265


State 233

  135 Rules: Rule .

    $default  reduce using rule 135 (Rules)


State 234

  134 Rules: Rules . Rule
  155 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 186
    "endseq"      shift, and go to state 266
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 267
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 235

  153 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 268


State 236

  134 Rules: Rules . Rule
  151 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "endpar"      shift, and go to state 269
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 267
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 237

  146 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 270


State 238

  147 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 271


State 239

  148 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 272


State 240

  149 IterateRule: "iterate" Rule .

    $default  reduce using rule 149 (IterateRule)


State 241

  159 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 159 (CallRule)


State 242

  161 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 161 (CallRule)


State 243

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  137 ConditionalRule: "if" Term . "then" Rule
  138                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 273
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 244

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  139 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  140         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 274
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 245

  152 BlockRule: "{" error . "}"

    "}"  shift, and go to state 275


State 246

  134 Rules: Rules . Rule
  150 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "}"           shift, and go to state 276
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 267
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 247

  156 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 277


State 248

  134 Rules: Rules . Rule
  154 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "|}"          shift, and go to state 278
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 267
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 249

  158 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 279
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 250

  122 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 280
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 251

   17 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 17 (FunctionParameters)


State 252

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 281

    $default  reduce using rule 16 (MaybeDefined)

    MaybeDefined  go to state 282


State 253

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 283


State 254

   18 FunctionParameters: Type .
   55 Types: Type .

    ","       reduce using rule 55 (Types)
    ">"       reduce using rule 55 (Types)
    $default  reduce using rule 18 (FunctionParameters)


State 255

   51 ComposedType: IdentifierPath "<" Types . ">"
   54 Types: Types . "," Type

    ","  shift, and go to state 284
    ">"  shift, and go to state 285


State 256

   53 FixedSizedType: IdentifierPath "'" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "<"        shift, and go to state 113
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 53 (FixedSizedType)


State 257

  119 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 286
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 258

  118 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 287
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 259

  120 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 288
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 260

  117 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 117 (IndirectCallExpression)


State 261

  114 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 114 (TwoOrMoreArguments)


State 262

  105 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 105 (Range)


State 263

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 30 (DerivedDefinition)


State 264

   33 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 33 (Identifiers)


State 265

  157 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 157 (SequenceRule)


State 266

  155 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 155 (SequenceRule)


State 267

  134 Rules: Rules Rule .

    $default  reduce using rule 134 (Rules)


State 268

  153 BlockRule: "par" error "endpar" .

    $default  reduce using rule 153 (BlockRule)


State 269

  151 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 151 (BlockRule)


State 270

  146 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 289
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 271

  147 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 290
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 272

  148 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 291
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 273

  137 ConditionalRule: "if" Term "then" . Rule
  138                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 292
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 274

  139 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  140         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 293


State 275

  152 BlockRule: "{" error "}" .

    $default  reduce using rule 152 (BlockRule)


State 276

  150 BlockRule: "{" Rules "}" .

    $default  reduce using rule 150 (BlockRule)


State 277

  156 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 156 (SequenceRule)


State 278

  154 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 154 (SequenceRule)


State 279

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  158 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 158 (UpdateRule)


State 280

  122 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 122 (RuleDefinition)


State 281

   15 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 294


State 282

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 295

    $default  reduce using rule 14 (MaybeInitially)

    MaybeInitially  go to state 296


State 283

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 297
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 284

   54 Types: Types "," . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 135
    Type                     go to state 298
    BasicType                go to state 137
    ComposedType             go to state 138
    RelationType             go to state 139
    FixedSizedType           go to state 140


State 285

   51 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 51 (ComposedType)


State 286

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  119 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 119 (UniversalQuantifierExpression)


State 287

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  118 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123

    $default  reduce using rule 118 (ConditionalExpression)


State 288

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  120 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 120 (ExistentialQuantifierExpression)


State 289

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  146 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 299
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 290

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  147 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 300
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 291

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  148 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 301
    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 292

  137 ConditionalRule: "if" Term "then" Rule .
  138                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 302

    $default  reduce using rule 137 (ConditionalRule)


State 293

  139 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  140         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 303
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 304
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 305
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 306
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 307
    CaseLabels                       go to state 308


State 294

   15 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 309
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 295

   13 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 310


State 296

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 11 (FunctionDefinition)


State 297

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 311


State 298

   54 Types: Types "," Type .

    $default  reduce using rule 54 (Types)


State 299

  146 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 312
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 300

  147 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 313
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 301

  148 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 314
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 302

  138 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 315
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 303

  140 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 316


State 304

  141 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 317


State 305

  142 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 318


State 306

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  143 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    ":"        shift, and go to state 319
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 307

  144 CaseLabels: CaseLabel . CaseLabels
  145           | CaseLabel .

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 304
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 305
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 145 (CaseLabels)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 306
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 307
    CaseLabels                       go to state 320


State 308

  139 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 321


State 309

   15 MaybeDefined: "defined" "{" Term . "}"
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 106
    "or"       shift, and go to state 107
    "xor"      shift, and go to state 108
    "implies"  shift, and go to state 109
    "+"        shift, and go to state 110
    "-"        shift, and go to state 111
    "="        shift, and go to state 112
    "}"        shift, and go to state 322
    "<"        shift, and go to state 113
    ">"        shift, and go to state 114
    "*"        shift, and go to state 115
    "/"        shift, and go to state 116
    "%"        shift, and go to state 117
    "^"        shift, and go to state 118
    "=>"       shift, and go to state 120
    "!="       shift, and go to state 121
    "<="       shift, and go to state 122
    ">="       shift, and go to state 123


State 310

   13 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 323
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 311

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 52 (RelationType)


State 312

  146 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 146 (LetRule)


State 313

  147 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 147 (ForallRule)


State 314

  148 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 148 (ChooseRule)


State 315

  138 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 138 (ConditionalRule)


State 316

  140 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 140 (CaseRule)


State 317

  141 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 324
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 318

  142 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 325
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 319

  143 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 186
    "par"         shift, and go to state 187
    "skip"        shift, and go to state 188
    "let"         shift, and go to state 189
    "forall"      shift, and go to state 190
    "choose"      shift, and go to state 191
    "iterate"     shift, and go to state 192
    "call"        shift, and go to state 193
    "if"          shift, and go to state 194
    "case"        shift, and go to state 195
    "("           shift, and go to state 196
    "{"           shift, and go to state 197
    "."           shift, and go to state 20
    "{|"          shift, and go to state 198
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 199
    IndirectCallExpression   go to state 200
    Rule                     go to state 326
    SkipRule                 go to state 202
    ConditionalRule          go to state 203
    CaseRule                 go to state 204
    LetRule                  go to state 205
    ForallRule               go to state 206
    ChooseRule               go to state 207
    IterateRule              go to state 208
    BlockRule                go to state 209
    SequenceRule             go to state 210
    UpdateRule               go to state 211
    CallRule                 go to state 212


State 320

  144 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 144 (CaseLabels)


State 321

  139 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 139 (CaseRule)


State 322

   15 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 15 (MaybeDefined)


State 323

   13 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 327


State 324

  141 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 141 (CaseLabel)


State 325

  142 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 142 (CaseLabel)


State 326

  143 CaseLabel: Term ":" Rule .

    $default  reduce using rule 143 (CaseLabel)


State 327

   13 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 13 (MaybeInitially)
