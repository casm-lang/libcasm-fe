Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Identifiers "}"

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   16               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   18                   | ProgramFunctionDefinition

   19 ProgramFunctionDefinition: "init" IdentifierPath
   20                          | "init" "{" MaybeInitializers "}"

   21 Rule: SkipRule
   22     | ConditionalRule
   23     | CaseRule
   24     | LetRule
   25     | ForallRule
   26     | ChooseRule
   27     | IterateRule
   28     | BlockRule
   29     | SequenceRule
   30     | UpdateRule
   31     | CallRule

   32 Rules: Rules Rule
   33      | Rule

   34 SkipRule: "skip"

   35 ConditionalRule: "if" Term "then" Rule
   36                | "if" Term "then" Rule "else" Rule

   37 CaseRule: "case" Term "of" "{" CaseLabels "}"
   38         | "case" Term "of" "{" error "}"

   39 CaseLabel: "default" ":" Rule
   40          | "_" ":" Rule
   41          | Term ":" Rule

   42 CaseLabels: CaseLabels CaseLabel
   43           | CaseLabel

   44 LetRule: "let" AttributedVariable "=" Term "in" Rule

   45 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   46           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   47 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   48 IterateRule: "iterate" Rule

   49 BlockRule: "{" Rules "}"
   50          | "par" Rules "endpar"
   51          | "{" error "}"
   52          | "par" error "endpar"

   53 SequenceRule: "{|" Rules "|}"
   54             | "seq" Rules "endseq"
   55             | "{|" error "|}"
   56             | "seq" error "endseq"

   57 UpdateRule: DirectCallExpression ":=" Term

   58 CallRule: "call" DirectCallExpression
   59         | DirectCallExpression
   60         | "call" IndirectCallExpression
   61         | IndirectCallExpression

   62 Terms: Terms "," Term
   63      | Term

   64 Term: DirectCallExpression
   65     | IndirectCallExpression
   66     | LetExpression
   67     | ConditionalExpression
   68     | ChooseExpression
   69     | UniversalQuantifierExpression
   70     | ExistentialQuantifierExpression
   71     | Expression
   72     | List
   73     | Range
   74     | Literal

   75 Expression: "(" Term ")"
   76           | "(" error ")"
   77           | "+" Term
   78           | "-" Term
   79           | Term "+" Term
   80           | Term "-" Term
   81           | Term "*" Term
   82           | Term "/" Term
   83           | Term "%" Term
   84           | Term "^" Term
   85           | Term "!=" Term
   86           | Term "=" Term
   87           | Term "<" Term
   88           | Term ">" Term
   89           | Term "<=" Term
   90           | Term ">=" Term
   91           | Term "or" Term
   92           | Term "xor" Term
   93           | Term "and" Term
   94           | Term "=>" Term
   95           | Term "implies" Term
   96           | "not" Term

   97 DirectCallExpression: IdentifierPath
   98                     | IdentifierPath Arguments

   99 IndirectCallExpression: "(" "*" Term ")" Arguments

  100 LetExpression: "let" AttributedVariable "=" Term "in" Term

  101 ConditionalExpression: "if" Term "then" Term "else" Term

  102 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  103 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  104 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  105 List: "[" "]"
  106     | "[" Terms "]"
  107     | "[" error "]"

  108 Range: "[" Term ".." Term "]"

  109 Literal: UndefinedLiteral
  110        | BooleanLiteral
  111        | IntegerLiteral
  112        | RationalLiteral
  113        | FloatingLiteral
  114        | BitLiteral
  115        | StringLiteral
  116        | ReferenceLiteral

  117 UndefinedLiteral: "undef"

  118 BooleanLiteral: "true"
  119               | "false"

  120 IntegerLiteral: "integer"

  121 RationalLiteral: "rational"

  122 FloatingLiteral: "floating"

  123 BitLiteral: "binary"
  124           | "hexadecimal"

  125 StringLiteral: "string"

  126 ReferenceLiteral: "@" IdentifierPath

  127 Types: Types "," Type
  128      | Type

  129 Type: BasicType
  130     | ComposedType
  131     | RelationType
  132     | FixedSizedType

  133 BasicType: IdentifierPath

  134 ComposedType: IdentifierPath "<" Types ">"

  135 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  136 FixedSizedType: IdentifierPath "'" Term

  137 Arguments: "(" Terms ")"
  138          | "(" error ")"
  139          | "(" ")"

  140 TwoOrMoreArguments: "(" Terms "," Term ")"

  141 FunctionParameters: FunctionParameters "*" Type
  142                   | Type

  143 MaybeFunctionParameters: FunctionParameters
  144                        | %empty

  145 Parameters: Parameters "," TypedAttributedVariable
  146           | TypedAttributedVariable

  147 MaybeParameters: "(" Parameters ")"
  148                | "(" error ")"
  149                | %empty

  150 MaybeDefined: "defined" "{" Term "}"
  151             | %empty

  152 MaybeInitially: "initially" "{" MaybeInitializers "}"
  153               | %empty

  154 Initializers: Initializers "," Initializer
  155             | Initializer

  156 Initializer: Term
  157            | Term "->" Term
  158            | TwoOrMoreArguments "->" Term

  159 MaybeInitializers: Initializers
  160                  | %empty

  161 Identifiers: Identifiers "," Identifier
  162            | Identifier

  163 Identifier: "identifier"
  164           | "in"

  165 IdentifierPath: DotSeparatedIdentifiers
  166               | "." DotSeparatedIdentifiers

  167 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
  168                        | Identifier

  169 Variable: TypedVariable
  170         | Identifier

  171 TypedVariable: Identifier ":" Type

  172 AttributedVariable: "[" Attributes "]" Variable
  173                   | Variable

  174 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  175                        | TypedVariable

  176 Attributes: Attributes "," Attribute
  177           | Attribute

  178 Attribute: BasicAttribute
  179          | ExpressionAttribute

  180 BasicAttribute: Identifier

  181 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 38 51 52 55 56 76 107 138 148
"CASM" (258) 2 3
"init" (259) 19 20
"derived" (260) 14
"enumeration" (261) 13
"rule" (262) 15 16
"function" (263) 17
"initially" (264) 152
"defined" (265) 150
"seq" (266) 54 56
"endseq" (267) 54 56
"par" (268) 50 52
"endpar" (269) 50 52
"skip" (270) 34
"let" (271) 44 100
"in" (272) 44 45 46 47 100 102 103 104 164
"forall" (273) 45 46 103
"choose" (274) 47 102
"iterate" (275) 48
"do" (276) 45 46 47 102
"call" (277) 58 60
"if" (278) 35 36 101
"then" (279) 35 36 101
"else" (280) 36 101
"case" (281) 37 38
"of" (282) 37 38
"default" (283) 39
"holds" (284) 103
"exists" (285) 104
"with" (286) 46 104
"undef" (287) 117
"false" (288) 119
"true" (289) 118
"and" (290) 93
"or" (291) 91
"xor" (292) 92
"implies" (293) 95
"not" (294) 96
"+" (295) 77 79
"-" (296) 78 80
"=" (297) 13 14 15 16 44 86 100
"(" (298) 75 76 99 137 138 139 140 147 148
")" (299) 75 76 99 137 138 139 140 147 148
"[" (300) 2 6 105 106 107 108 172 174
"]" (301) 2 6 105 106 107 108 172 174
"{" (302) 13 20 37 38 49 51 150 152
"}" (303) 13 20 37 38 49 51 150 152
":" (304) 17 39 40 41 171
"_" (305) 40
"@" (306) 126
"," (307) 62 127 140 145 154 161 176
"<" (308) 87 134 135
">" (309) 88 134 135
"*" (310) 81 99 141
"/" (311) 82
"%" (312) 83
"^" (313) 84
"'" (314) 136
".." (315) 108
"." (316) 166 167
"->" (317) 14 16 17 135 157 158
"=>" (318) 94
":=" (319) 57
"!=" (320) 85
"<=" (321) 89
">=" (322) 90
"{|" (323) 53 55
"|}" (324) 53 55
"binary" (325) 123
"hexadecimal" (326) 124
"integer" (327) 120
"rational" (328) 121
"floating" (329) 122
"string" (330) 125
"identifier" (331) 163
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Header (83)
    on left: 2 3, on right: 1
Definitions (84)
    on left: 4 5, on right: 1 4
AttributedDefinition (85)
    on left: 6 7 8, on right: 4 5
Definition (86)
    on left: 9 10 11 12, on right: 6 7
EnumerationDefinition (87)
    on left: 13, on right: 9
DerivedDefinition (88)
    on left: 14, on right: 10
RuleDefinition (89)
    on left: 15 16, on right: 11
FunctionDefinition (90)
    on left: 17 18, on right: 12
ProgramFunctionDefinition (91)
    on left: 19 20, on right: 18
Rule (92)
    on left: 21 22 23 24 25 26 27 28 29 30 31, on right: 15 16 32 33
    35 36 39 40 41 44 45 46 47 48
Rules (93)
    on left: 32 33, on right: 32 49 50 53 54
SkipRule (94)
    on left: 34, on right: 21
ConditionalRule (95)
    on left: 35 36, on right: 22
CaseRule (96)
    on left: 37 38, on right: 23
CaseLabel (97)
    on left: 39 40 41, on right: 42 43
CaseLabels (98)
    on left: 42 43, on right: 37 42
LetRule (99)
    on left: 44, on right: 24
ForallRule (100)
    on left: 45 46, on right: 25
ChooseRule (101)
    on left: 47, on right: 26
IterateRule (102)
    on left: 48, on right: 27
BlockRule (103)
    on left: 49 50 51 52, on right: 28
SequenceRule (104)
    on left: 53 54 55 56, on right: 29
UpdateRule (105)
    on left: 57, on right: 30
CallRule (106)
    on left: 58 59 60 61, on right: 31
Terms (107)
    on left: 62 63, on right: 62 106 137 140
Term (108)
    on left: 64 65 66 67 68 69 70 71 72 73 74, on right: 14 35 36 37
    38 41 44 45 46 47 57 62 63 75 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96 99 100 101 102 103 104 108 136 140 150
    156 157 158 181
Expression (109)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94 95 96, on right: 71
DirectCallExpression (110)
    on left: 97 98, on right: 57 58 59 64
IndirectCallExpression (111)
    on left: 99, on right: 60 61 65
LetExpression (112)
    on left: 100, on right: 66
ConditionalExpression (113)
    on left: 101, on right: 67
ChooseExpression (114)
    on left: 102, on right: 68
UniversalQuantifierExpression (115)
    on left: 103, on right: 69
ExistentialQuantifierExpression (116)
    on left: 104, on right: 70
List (117)
    on left: 105 106 107, on right: 72
Range (118)
    on left: 108, on right: 73
Literal (119)
    on left: 109 110 111 112 113 114 115 116, on right: 74
UndefinedLiteral (120)
    on left: 117, on right: 109
BooleanLiteral (121)
    on left: 118 119, on right: 110
IntegerLiteral (122)
    on left: 120, on right: 111
RationalLiteral (123)
    on left: 121, on right: 112
FloatingLiteral (124)
    on left: 122, on right: 113
BitLiteral (125)
    on left: 123 124, on right: 114
StringLiteral (126)
    on left: 125, on right: 115
ReferenceLiteral (127)
    on left: 126, on right: 116
Types (128)
    on left: 127 128, on right: 127 134
Type (129)
    on left: 129 130 131 132, on right: 14 16 17 127 128 135 141 142
    171
BasicType (130)
    on left: 133, on right: 129
ComposedType (131)
    on left: 134, on right: 130
RelationType (132)
    on left: 135, on right: 131
FixedSizedType (133)
    on left: 136, on right: 132
Arguments (134)
    on left: 137 138 139, on right: 98 99
TwoOrMoreArguments (135)
    on left: 140, on right: 158
FunctionParameters (136)
    on left: 141 142, on right: 141 143
MaybeFunctionParameters (137)
    on left: 143 144, on right: 17 135
Parameters (138)
    on left: 145 146, on right: 145 147
MaybeParameters (139)
    on left: 147 148 149, on right: 14 15 16
MaybeDefined (140)
    on left: 150 151, on right: 17
MaybeInitially (141)
    on left: 152 153, on right: 17
Initializers (142)
    on left: 154 155, on right: 154 159
Initializer (143)
    on left: 156 157 158, on right: 154 155
MaybeInitializers (144)
    on left: 159 160, on right: 20 152
Identifiers (145)
    on left: 161 162, on right: 13 161
Identifier (146)
    on left: 163 164, on right: 13 14 15 16 17 161 162 167 168 170
    171 180 181
IdentifierPath (147)
    on left: 165 166, on right: 19 97 98 126 133 134 135 136
DotSeparatedIdentifiers (148)
    on left: 167 168, on right: 165 166 167
Variable (149)
    on left: 169 170, on right: 172 173
TypedVariable (150)
    on left: 171, on right: 169 174 175
AttributedVariable (151)
    on left: 172 173, on right: 44 45 46 47 100 102 103 104
TypedAttributedVariable (152)
    on left: 174 175, on right: 145 146
Attributes (153)
    on left: 176 177, on right: 2 6 172 174 176
Attribute (154)
    on left: 178 179, on right: 176 177
BasicAttribute (155)
    on left: 180, on right: 178
ExpressionAttribute (156)
    on left: 181, on right: 179


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18
    "["            shift, and go to state 19

    Definitions                go to state 20
    AttributedDefinition       go to state 21
    Definition                 go to state 22
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 5

  164 Identifier: "in" .

    $default  reduce using rule 164 (Identifier)


State 6

  163 Identifier: "identifier" .

    $default  reduce using rule 163 (Identifier)


State 7

  180 BasicAttribute: Identifier .
  181 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 180 (BasicAttribute)

    Term                             go to state 49
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 8

    2 Header: "[" Attributes . "]" "CASM"
  176 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 72
    ","  shift, and go to state 73


State 9

  177 Attributes: Attribute .

    $default  reduce using rule 177 (Attributes)


State 10

  178 Attribute: BasicAttribute .

    $default  reduce using rule 178 (Attribute)


State 11

  179 Attribute: ExpressionAttribute .

    $default  reduce using rule 179 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   19 ProgramFunctionDefinition: "init" . IdentifierPath
   20                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 74
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Identifier               go to state 69
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 71


State 15

   14 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 76


State 16

   13 EnumerationDefinition: "enumeration" . Identifier "=" "{" Identifiers "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 77


State 17

   15 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   16               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 78


State 18

   17 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 79


State 19

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 80
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 20

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18
    "["            shift, and go to state 19

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 81
    Definition                 go to state 22
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 21

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 22

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 23

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 24

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 25

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 26

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 27

   18 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 18 (FunctionDefinition)


State 28

  100 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 86


State 29

  103 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 87


State 30

  102 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 88


State 31

  101 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 89
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 32

  104 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 90


State 33

  117 UndefinedLiteral: "undef" .

    $default  reduce using rule 117 (UndefinedLiteral)


State 34

  119 BooleanLiteral: "false" .

    $default  reduce using rule 119 (BooleanLiteral)


State 35

  118 BooleanLiteral: "true" .

    $default  reduce using rule 118 (BooleanLiteral)


State 36

   96 Expression: "not" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 91
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 37

   77 Expression: "+" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 92
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 38

   78 Expression: "-" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 93
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 39

   75 Expression: "(" . Term ")"
   76           | "(" . error ")"
   99 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 94
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "*"            shift, and go to state 95
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 96
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 40

  105 List: "[" . "]"
  106     | "[" . Terms "]"
  107     | "[" . error "]"
  108 Range: "[" . Term ".." Term "]"

    error          shift, and go to state 97
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "]"            shift, and go to state 98
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 99
    Term                             go to state 100
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 41

  126 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Identifier               go to state 69
    IdentifierPath           go to state 101
    DotSeparatedIdentifiers  go to state 71


State 42

  166 IdentifierPath: "." . DotSeparatedIdentifiers

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier               go to state 69
    DotSeparatedIdentifiers  go to state 102


State 43

  123 BitLiteral: "binary" .

    $default  reduce using rule 123 (BitLiteral)


State 44

  124 BitLiteral: "hexadecimal" .

    $default  reduce using rule 124 (BitLiteral)


State 45

  120 IntegerLiteral: "integer" .

    $default  reduce using rule 120 (IntegerLiteral)


State 46

  121 RationalLiteral: "rational" .

    $default  reduce using rule 121 (RationalLiteral)


State 47

  122 FloatingLiteral: "floating" .

    $default  reduce using rule 122 (FloatingLiteral)


State 48

  125 StringLiteral: "string" .

    $default  reduce using rule 125 (StringLiteral)


State 49

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  181 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 181 (ExpressionAttribute)


State 50

   71 Term: Expression .

    $default  reduce using rule 71 (Term)


State 51

   64 Term: DirectCallExpression .

    $default  reduce using rule 64 (Term)


State 52

   65 Term: IndirectCallExpression .

    $default  reduce using rule 65 (Term)


State 53

   66 Term: LetExpression .

    $default  reduce using rule 66 (Term)


State 54

   67 Term: ConditionalExpression .

    $default  reduce using rule 67 (Term)


State 55

   68 Term: ChooseExpression .

    $default  reduce using rule 68 (Term)


State 56

   69 Term: UniversalQuantifierExpression .

    $default  reduce using rule 69 (Term)


State 57

   70 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 70 (Term)


State 58

   72 Term: List .

    $default  reduce using rule 72 (Term)


State 59

   73 Term: Range .

    $default  reduce using rule 73 (Term)


State 60

   74 Term: Literal .

    $default  reduce using rule 74 (Term)


State 61

  109 Literal: UndefinedLiteral .

    $default  reduce using rule 109 (Literal)


State 62

  110 Literal: BooleanLiteral .

    $default  reduce using rule 110 (Literal)


State 63

  111 Literal: IntegerLiteral .

    $default  reduce using rule 111 (Literal)


State 64

  112 Literal: RationalLiteral .

    $default  reduce using rule 112 (Literal)


State 65

  113 Literal: FloatingLiteral .

    $default  reduce using rule 113 (Literal)


State 66

  114 Literal: BitLiteral .

    $default  reduce using rule 114 (Literal)


State 67

  115 Literal: StringLiteral .

    $default  reduce using rule 115 (Literal)


State 68

  116 Literal: ReferenceLiteral .

    $default  reduce using rule 116 (Literal)


State 69

  168 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 168 (DotSeparatedIdentifiers)


State 70

   97 DirectCallExpression: IdentifierPath .
   98                     | IdentifierPath . Arguments

    "("  shift, and go to state 120

    $default  reduce using rule 97 (DirectCallExpression)

    Arguments  go to state 121


State 71

  165 IdentifierPath: DotSeparatedIdentifiers .
  167 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier

    "."  shift, and go to state 122

    $default  reduce using rule 165 (IdentifierPath)


State 72

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 123


State 73

  176 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 124
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 74

   20 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 125
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 160 (MaybeInitializers)

    Term                             go to state 126
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    TwoOrMoreArguments               go to state 127
    Initializers                     go to state 128
    Initializer                      go to state 129
    MaybeInitializers                go to state 130
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 75

   19 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 19 (ProgramFunctionDefinition)


State 76

   14 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 131

    $default  reduce using rule 149 (MaybeParameters)

    MaybeParameters  go to state 132


State 77

   13 EnumerationDefinition: "enumeration" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 133


State 78

   15 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   16               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 131

    $default  reduce using rule 149 (MaybeParameters)

    MaybeParameters  go to state 134


State 79

   17 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 135


State 80

    6 AttributedDefinition: "[" Attributes . "]" Definition
  176 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 136
    ","  shift, and go to state 73


State 81

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 82

  172 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 137
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 83

  170 Variable: Identifier .
  171 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 138

    $default  reduce using rule 170 (Variable)


State 84

  173 AttributedVariable: Variable .

    $default  reduce using rule 173 (AttributedVariable)


State 85

  169 Variable: TypedVariable .

    $default  reduce using rule 169 (Variable)


State 86

  100 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 139


State 87

  103 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 140


State 88

  102 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 141


State 89

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  101 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 142
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 90

  104 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 143


State 91

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
   96           | "not" Term .

    $default  reduce using rule 96 (Expression)


State 92

   77 Expression: "+" Term .
   79           | Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    $default  reduce using rule 77 (Expression)


State 93

   78 Expression: "-" Term .
   79           | Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    $default  reduce using rule 78 (Expression)


State 94

   76 Expression: "(" error . ")"

    ")"  shift, and go to state 144


State 95

   99 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 145
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 96

   75 Expression: "(" Term . ")"
   79           | Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 146
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 97

  107 List: "[" error . "]"

    "]"  shift, and go to state 147


State 98

  105 List: "[" "]" .

    $default  reduce using rule 105 (List)


State 99

   62 Terms: Terms . "," Term
  106 List: "[" Terms . "]"

    "]"  shift, and go to state 148
    ","  shift, and go to state 149


State 100

   63 Terms: Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  108 Range: "[" Term . ".." Term "]"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    ".."       shift, and go to state 150
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 63 (Terms)


State 101

  126 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 126 (ReferenceLiteral)


State 102

  166 IdentifierPath: "." DotSeparatedIdentifiers .
  167 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier

    $default  reduce using rule 166 (IdentifierPath)


State 103

   93 Expression: Term "and" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 151
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 104

   91 Expression: Term "or" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 152
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 105

   92 Expression: Term "xor" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 153
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 106

   95 Expression: Term "implies" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 154
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 107

   79 Expression: Term "+" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 155
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 108

   80 Expression: Term "-" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 156
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 109

   86 Expression: Term "=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 157
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 110

   87 Expression: Term "<" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 158
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 111

   88 Expression: Term ">" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 159
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 112

   81 Expression: Term "*" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 160
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 113

   82 Expression: Term "/" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 161
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 114

   83 Expression: Term "%" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 162
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 115

   84 Expression: Term "^" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 163
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 116

   94 Expression: Term "=>" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 164
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 117

   85 Expression: Term "!=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 165
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 118

   89 Expression: Term "<=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 166
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 119

   90 Expression: Term ">=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 167
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 120

  137 Arguments: "(" . Terms ")"
  138          | "(" . error ")"
  139          | "(" . ")"

    error          shift, and go to state 168
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    ")"            shift, and go to state 169
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 170
    Term                             go to state 171
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 121

   98 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 98 (DirectCallExpression)


State 122

  167 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 172


State 123

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 124

  176 Attributes: Attributes "," Attribute .

    $default  reduce using rule 176 (Attributes)


State 125

   75 Expression: "(" . Term ")"
   76           | "(" . error ")"
   99 IndirectCallExpression: "(" . "*" Term ")" Arguments
  140 TwoOrMoreArguments: "(" . Terms "," Term ")"

    error          shift, and go to state 94
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "*"            shift, and go to state 95
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 173
    Term                             go to state 174
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 126

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  156 Initializer: Term .
  157            | Term . "->" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "->"       shift, and go to state 175
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 156 (Initializer)


State 127

  158 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 176


State 128

  154 Initializers: Initializers . "," Initializer
  159 MaybeInitializers: Initializers .

    ","  shift, and go to state 177

    $default  reduce using rule 159 (MaybeInitializers)


State 129

  155 Initializers: Initializer .

    $default  reduce using rule 155 (Initializers)


State 130

   20 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 178


State 131

  147 MaybeParameters: "(" . Parameters ")"
  148                | "(" . error ")"

    error         shift, and go to state 179
    "in"          shift, and go to state 5
    "["           shift, and go to state 180
    "identifier"  shift, and go to state 6

    Parameters               go to state 181
    Identifier               go to state 182
    TypedVariable            go to state 183
    TypedAttributedVariable  go to state 184


State 132

   14 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 185


State 133

   13 EnumerationDefinition: "enumeration" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 186


State 134

   15 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   16               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 187
    "->"  shift, and go to state 188


State 135

   17 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    $default  reduce using rule 144 (MaybeFunctionParameters)

    Type                     go to state 189
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    FunctionParameters       go to state 194
    MaybeFunctionParameters  go to state 195
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 136

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18

    Definition                 go to state 197
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 137

  172 AttributedVariable: "[" Attributes . "]" Variable
  176 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 198
    ","  shift, and go to state 73


State 138

  171 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 199
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 139

  100 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 200
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 140

  103 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 201
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 141

  102 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 202
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 142

  101 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 203
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 143

  104 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 204
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 144

   76 Expression: "(" error ")" .

    $default  reduce using rule 76 (Expression)


State 145

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
   99 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 205
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 146

   75 Expression: "(" Term ")" .

    $default  reduce using rule 75 (Expression)


State 147

  107 List: "[" error "]" .

    $default  reduce using rule 107 (List)


State 148

  106 List: "[" Terms "]" .

    $default  reduce using rule 106 (List)


State 149

   62 Terms: Terms "," . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 206
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 150

  108 Range: "[" Term ".." . Term "]"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 207
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 151

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   93           | Term "and" Term .
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "="   shift, and go to state 109
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "!="  shift, and go to state 117
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 93 (Expression)


State 152

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   91           | Term "or" Term .
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"  shift, and go to state 103
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 91 (Expression)


State 153

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   92           | Term "xor" Term .
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"  shift, and go to state 103
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 92 (Expression)


State 154

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
   95           | Term "implies" Term .

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 95 (Expression)


State 155

   79 Expression: Term . "+" Term
   79           | Term "+" Term .
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 79 (Expression)


State 156

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   80           | Term "-" Term .
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 80 (Expression)


State 157

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   86           | Term "=" Term .
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 86 (Expression)


State 158

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   87           | Term "<" Term .
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 87 (Expression)


State 159

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   88           | Term ">" Term .
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 88 (Expression)


State 160

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   81           | Term "*" Term .
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 81 (Expression)


State 161

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   82           | Term "/" Term .
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 82 (Expression)


State 162

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   83           | Term "%" Term .
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 83 (Expression)


State 163

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   84           | Term "^" Term .
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    $default  reduce using rule 84 (Expression)


State 164

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   94           | Term "=>" Term .
   95           | Term . "implies" Term

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 94 (Expression)


State 165

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   85           | Term "!=" Term .
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 85 (Expression)


State 166

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   89           | Term "<=" Term .
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 89 (Expression)


State 167

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   90           | Term ">=" Term .
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 90 (Expression)


State 168

  138 Arguments: "(" error . ")"

    ")"  shift, and go to state 208


State 169

  139 Arguments: "(" ")" .

    $default  reduce using rule 139 (Arguments)


State 170

   62 Terms: Terms . "," Term
  137 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 209
    ","  shift, and go to state 149


State 171

   63 Terms: Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 63 (Terms)


State 172

  167 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 167 (DotSeparatedIdentifiers)


State 173

   62 Terms: Terms . "," Term
  140 TwoOrMoreArguments: "(" Terms . "," Term ")"

    ","  shift, and go to state 210


State 174

   63 Terms: Term .
   75 Expression: "(" Term . ")"
   79           | Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 146
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 63 (Terms)


State 175

  157 Initializer: Term "->" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 211
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 176

  158 Initializer: TwoOrMoreArguments "->" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 212
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 177

  154 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 125
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 126
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    TwoOrMoreArguments               go to state 127
    Initializer                      go to state 213
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 178

   20 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 179

  148 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 214


State 180

  174 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 215
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 181

  145 Parameters: Parameters . "," TypedAttributedVariable
  147 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 216
    ","  shift, and go to state 217


State 182

  171 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 138


State 183

  175 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 175 (TypedAttributedVariable)


State 184

  146 Parameters: TypedAttributedVariable .

    $default  reduce using rule 146 (Parameters)


State 185

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 218
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 186

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" . Identifiers "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifiers  go to state 219
    Identifier   go to state 220


State 187

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 234
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 188

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 248
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 189

  142 FunctionParameters: Type .

    $default  reduce using rule 142 (FunctionParameters)


State 190

  129 Type: BasicType .

    $default  reduce using rule 129 (Type)


State 191

  130 Type: ComposedType .

    $default  reduce using rule 130 (Type)


State 192

  131 Type: RelationType .

    $default  reduce using rule 131 (Type)


State 193

  132 Type: FixedSizedType .

    $default  reduce using rule 132 (Type)


State 194

  141 FunctionParameters: FunctionParameters . "*" Type
  143 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 249

    $default  reduce using rule 143 (MaybeFunctionParameters)


State 195

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 250


State 196

  133 BasicType: IdentifierPath .
  134 ComposedType: IdentifierPath . "<" Types ">"
  135 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  136 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 251
    "'"  shift, and go to state 252

    $default  reduce using rule 133 (BasicType)


State 197

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 198

  172 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 83
    Variable       go to state 253
    TypedVariable  go to state 85


State 199

  171 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 171 (TypedVariable)


State 200

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  100 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 254
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 201

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  103 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 255
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 202

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  102 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 256
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 203

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  101 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 257
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 204

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  104 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 258
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 205

   99 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 120

    Arguments  go to state 259


State 206

   62 Terms: Terms "," Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 62 (Terms)


State 207

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  108 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "]"        shift, and go to state 260
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 208

  138 Arguments: "(" error ")" .

    $default  reduce using rule 138 (Arguments)


State 209

  137 Arguments: "(" Terms ")" .

    $default  reduce using rule 137 (Arguments)


State 210

   62 Terms: Terms "," . Term
  140 TwoOrMoreArguments: "(" Terms "," . Term ")"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 261
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 211

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  157 Initializer: Term "->" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 157 (Initializer)


State 212

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  158 Initializer: TwoOrMoreArguments "->" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 158 (Initializer)


State 213

  154 Initializers: Initializers "," Initializer .

    $default  reduce using rule 154 (Initializers)


State 214

  148 MaybeParameters: "(" error ")" .

    $default  reduce using rule 148 (MaybeParameters)


State 215

  174 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  176 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 262
    ","  shift, and go to state 73


State 216

  147 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 147 (MaybeParameters)


State 217

  145 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 180
    "identifier"  shift, and go to state 6

    Identifier               go to state 182
    TypedVariable            go to state 183
    TypedAttributedVariable  go to state 263


State 218

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 264


State 219

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Identifiers . "}"
  161 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 265
    ","  shift, and go to state 266


State 220

  162 Identifiers: Identifier .

    $default  reduce using rule 162 (Identifiers)


State 221

   54 SequenceRule: "seq" . Rules "endseq"
   56             | "seq" . error "endseq"

    error         shift, and go to state 267
    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 268
    Rules                    go to state 269
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 222

   50 BlockRule: "par" . Rules "endpar"
   52          | "par" . error "endpar"

    error         shift, and go to state 270
    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 268
    Rules                    go to state 271
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 223

   34 SkipRule: "skip" .

    $default  reduce using rule 34 (SkipRule)


State 224

   44 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 272


State 225

   45 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   46           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 273


State 226

   47 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 82
    "identifier"  shift, and go to state 6

    Identifier          go to state 83
    Variable            go to state 84
    TypedVariable       go to state 85
    AttributedVariable  go to state 274


State 227

   48 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 275
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 228

   58 CallRule: "call" . DirectCallExpression
   60         | "call" . IndirectCallExpression

    "in"          shift, and go to state 5
    "("           shift, and go to state 231
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    DirectCallExpression     go to state 276
    IndirectCallExpression   go to state 277
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 229

   35 ConditionalRule: "if" . Term "then" Rule
   36                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 278
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 230

   37 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   38         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 279
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 231

   99 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 95


State 232

   49 BlockRule: "{" . Rules "}"
   51          | "{" . error "}"

    error         shift, and go to state 280
    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 268
    Rules                    go to state 281
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 233

   53 SequenceRule: "{|" . Rules "|}"
   55             | "{|" . error "|}"

    error         shift, and go to state 282
    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 268
    Rules                    go to state 283
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 234

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 15 (RuleDefinition)


State 235

   21 Rule: SkipRule .

    $default  reduce using rule 21 (Rule)


State 236

   22 Rule: ConditionalRule .

    $default  reduce using rule 22 (Rule)


State 237

   23 Rule: CaseRule .

    $default  reduce using rule 23 (Rule)


State 238

   24 Rule: LetRule .

    $default  reduce using rule 24 (Rule)


State 239

   25 Rule: ForallRule .

    $default  reduce using rule 25 (Rule)


State 240

   26 Rule: ChooseRule .

    $default  reduce using rule 26 (Rule)


State 241

   27 Rule: IterateRule .

    $default  reduce using rule 27 (Rule)


State 242

   28 Rule: BlockRule .

    $default  reduce using rule 28 (Rule)


State 243

   29 Rule: SequenceRule .

    $default  reduce using rule 29 (Rule)


State 244

   30 Rule: UpdateRule .

    $default  reduce using rule 30 (Rule)


State 245

   31 Rule: CallRule .

    $default  reduce using rule 31 (Rule)


State 246

   57 UpdateRule: DirectCallExpression . ":=" Term
   59 CallRule: DirectCallExpression .

    ":="  shift, and go to state 284

    $default  reduce using rule 59 (CallRule)


State 247

   61 CallRule: IndirectCallExpression .

    $default  reduce using rule 61 (CallRule)


State 248

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 285


State 249

  141 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 286
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 250

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 287
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 251

  134 ComposedType: IdentifierPath "<" . Types ">"
  135 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    $default  reduce using rule 144 (MaybeFunctionParameters)

    Types                    go to state 288
    Type                     go to state 289
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    FunctionParameters       go to state 194
    MaybeFunctionParameters  go to state 290
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 252

  136 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 291
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 253

  172 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 172 (AttributedVariable)


State 254

  100 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 292
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 255

  103 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 293
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 256

  102 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 294
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 257

  101 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 295
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 258

  104 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 296
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 259

   99 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 99 (IndirectCallExpression)


State 260

  108 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 108 (Range)


State 261

   62 Terms: Terms "," Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  140 TwoOrMoreArguments: "(" Terms "," Term . ")"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 297
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 62 (Terms)


State 262

  174 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 182
    TypedVariable  go to state 298


State 263

  145 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 145 (Parameters)


State 264

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 299
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 265

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 13 (EnumerationDefinition)


State 266

  161 Identifiers: Identifiers "," . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 300


State 267

   56 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 301


State 268

   33 Rules: Rule .

    $default  reduce using rule 33 (Rules)


State 269

   32 Rules: Rules . Rule
   54 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 221
    "endseq"      shift, and go to state 302
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 303
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 270

   52 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 304


State 271

   32 Rules: Rules . Rule
   50 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "endpar"      shift, and go to state 305
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 303
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 272

   44 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 306


State 273

   45 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   46           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 307


State 274

   47 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 308


State 275

   48 IterateRule: "iterate" Rule .

    $default  reduce using rule 48 (IterateRule)


State 276

   58 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 58 (CallRule)


State 277

   60 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 60 (CallRule)


State 278

   35 ConditionalRule: "if" Term . "then" Rule
   36                | "if" Term . "then" Rule "else" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "then"     shift, and go to state 309
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 279

   37 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   38         | "case" Term . "of" "{" error "}"
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "of"       shift, and go to state 310
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 280

   51 BlockRule: "{" error . "}"

    "}"  shift, and go to state 311


State 281

   32 Rules: Rules . Rule
   49 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "}"           shift, and go to state 312
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 303
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 282

   55 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 313


State 283

   32 Rules: Rules . Rule
   53 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "|}"          shift, and go to state 314
    "identifier"  shift, and go to state 6

    Rule                     go to state 303
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 284

   57 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 315
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 285

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 316
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 286

  141 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 141 (FunctionParameters)


State 287

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 317

    $default  reduce using rule 151 (MaybeDefined)

    MaybeDefined  go to state 318


State 288

  127 Types: Types . "," Type
  134 ComposedType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 319
    ">"  shift, and go to state 320


State 289

  128 Types: Type .
  142 FunctionParameters: Type .

    "*"       reduce using rule 142 (FunctionParameters)
    "->"      reduce using rule 142 (FunctionParameters)
    $default  reduce using rule 128 (Types)


State 290

  135 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 321


State 291

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  136 FixedSizedType: IdentifierPath "'" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "<"        shift, and go to state 110
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 136 (FixedSizedType)


State 292

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  100 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 100 (LetExpression)


State 293

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  103 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 103 (UniversalQuantifierExpression)


State 294

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  102 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 102 (ChooseExpression)


State 295

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  101 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 101 (ConditionalExpression)


State 296

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  104 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 104 (ExistentialQuantifierExpression)


State 297

  140 TwoOrMoreArguments: "(" Terms "," Term ")" .

    $default  reduce using rule 140 (TwoOrMoreArguments)


State 298

  174 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 174 (TypedAttributedVariable)


State 299

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 14 (DerivedDefinition)


State 300

  161 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 161 (Identifiers)


State 301

   56 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 56 (SequenceRule)


State 302

   54 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 54 (SequenceRule)


State 303

   32 Rules: Rules Rule .

    $default  reduce using rule 32 (Rules)


State 304

   52 BlockRule: "par" error "endpar" .

    $default  reduce using rule 52 (BlockRule)


State 305

   50 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 50 (BlockRule)


State 306

   44 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 322
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 307

   45 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   46           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 323
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 308

   47 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 324
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 309

   35 ConditionalRule: "if" Term "then" . Rule
   36                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 325
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 310

   37 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   38         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 326


State 311

   51 BlockRule: "{" error "}" .

    $default  reduce using rule 51 (BlockRule)


State 312

   49 BlockRule: "{" Rules "}" .

    $default  reduce using rule 49 (BlockRule)


State 313

   55 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 55 (SequenceRule)


State 314

   53 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 53 (SequenceRule)


State 315

   57 UpdateRule: DirectCallExpression ":=" Term .
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 57 (UpdateRule)


State 316

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 317

  150 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 327


State 318

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 328

    $default  reduce using rule 153 (MaybeInitially)

    MaybeInitially  go to state 329


State 319

  127 Types: Types "," . Type

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 330
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 320

  134 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 134 (ComposedType)


State 321

  135 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "."           shift, and go to state 42
    "identifier"  shift, and go to state 6

    Type                     go to state 331
    BasicType                go to state 190
    ComposedType             go to state 191
    RelationType             go to state 192
    FixedSizedType           go to state 193
    Identifier               go to state 69
    IdentifierPath           go to state 196
    DotSeparatedIdentifiers  go to state 71


State 322

   44 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "in"       shift, and go to state 332
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 323

   45 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   46           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "do"       shift, and go to state 333
    "with"     shift, and go to state 334
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 324

   47 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "do"       shift, and go to state 335
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 325

   35 ConditionalRule: "if" Term "then" Rule .
   36                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 336

    $default  reduce using rule 35 (ConditionalRule)


State 326

   37 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   38         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 337
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "default"      shift, and go to state 338
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "_"            shift, and go to state 339
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 340
    CaseLabels                       go to state 341
    Term                             go to state 342
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 327

  150 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 343
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 328

  152 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 344


State 329

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 17 (FunctionDefinition)


State 330

  127 Types: Types "," Type .

    $default  reduce using rule 127 (Types)


State 331

  135 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 345


State 332

   44 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 346
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 333

   45 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 347
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 334

   46 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 348
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 335

   47 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 349
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 336

   36 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 350
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 337

   38 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 351


State 338

   39 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 352


State 339

   40 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 353


State 340

   43 CaseLabels: CaseLabel .

    $default  reduce using rule 43 (CaseLabels)


State 341

   37 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   42 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "default"      shift, and go to state 338
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "}"            shift, and go to state 354
    "_"            shift, and go to state 339
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 355
    Term                             go to state 342
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 342

   41 CaseLabel: Term . ":" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ":"        shift, and go to state 356
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 343

   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term
  150 MaybeDefined: "defined" "{" Term . "}"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "}"        shift, and go to state 357
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 344

  152 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 125
    "["            shift, and go to state 40
    "@"            shift, and go to state 41
    "."            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 160 (MaybeInitializers)

    Term                             go to state 126
    Expression                       go to state 50
    DirectCallExpression             go to state 51
    IndirectCallExpression           go to state 52
    LetExpression                    go to state 53
    ConditionalExpression            go to state 54
    ChooseExpression                 go to state 55
    UniversalQuantifierExpression    go to state 56
    ExistentialQuantifierExpression  go to state 57
    List                             go to state 58
    Range                            go to state 59
    Literal                          go to state 60
    UndefinedLiteral                 go to state 61
    BooleanLiteral                   go to state 62
    IntegerLiteral                   go to state 63
    RationalLiteral                  go to state 64
    FloatingLiteral                  go to state 65
    BitLiteral                       go to state 66
    StringLiteral                    go to state 67
    ReferenceLiteral                 go to state 68
    TwoOrMoreArguments               go to state 127
    Initializers                     go to state 128
    Initializer                      go to state 129
    MaybeInitializers                go to state 358
    Identifier                       go to state 69
    IdentifierPath                   go to state 70
    DotSeparatedIdentifiers          go to state 71


State 345

  135 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 135 (RelationType)


State 346

   44 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 44 (LetRule)


State 347

   45 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 45 (ForallRule)


State 348

   46 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   79 Expression: Term . "+" Term
   80           | Term . "-" Term
   81           | Term . "*" Term
   82           | Term . "/" Term
   83           | Term . "%" Term
   84           | Term . "^" Term
   85           | Term . "!=" Term
   86           | Term . "=" Term
   87           | Term . "<" Term
   88           | Term . ">" Term
   89           | Term . "<=" Term
   90           | Term . ">=" Term
   91           | Term . "or" Term
   92           | Term . "xor" Term
   93           | Term . "and" Term
   94           | Term . "=>" Term
   95           | Term . "implies" Term

    "do"       shift, and go to state 359
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 349

   47 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 47 (ChooseRule)


State 350

   36 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 36 (ConditionalRule)


State 351

   38 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 38 (CaseRule)


State 352

   39 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 360
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 353

   40 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 361
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 354

   37 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 37 (CaseRule)


State 355

   42 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 42 (CaseLabels)


State 356

   41 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 362
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 357

  150 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 150 (MaybeDefined)


State 358

  152 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 363


State 359

   46 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"         shift, and go to state 221
    "par"         shift, and go to state 222
    "skip"        shift, and go to state 223
    "let"         shift, and go to state 224
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 225
    "choose"      shift, and go to state 226
    "iterate"     shift, and go to state 227
    "call"        shift, and go to state 228
    "if"          shift, and go to state 229
    "case"        shift, and go to state 230
    "("           shift, and go to state 231
    "{"           shift, and go to state 232
    "."           shift, and go to state 42
    "{|"          shift, and go to state 233
    "identifier"  shift, and go to state 6

    Rule                     go to state 364
    SkipRule                 go to state 235
    ConditionalRule          go to state 236
    CaseRule                 go to state 237
    LetRule                  go to state 238
    ForallRule               go to state 239
    ChooseRule               go to state 240
    IterateRule              go to state 241
    BlockRule                go to state 242
    SequenceRule             go to state 243
    UpdateRule               go to state 244
    CallRule                 go to state 245
    DirectCallExpression     go to state 246
    IndirectCallExpression   go to state 247
    Identifier               go to state 69
    IdentifierPath           go to state 70
    DotSeparatedIdentifiers  go to state 71


State 360

   39 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 39 (CaseLabel)


State 361

   40 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 40 (CaseLabel)


State 362

   41 CaseLabel: Term ":" Rule .

    $default  reduce using rule 41 (CaseLabel)


State 363

  152 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 152 (MaybeInitially)


State 364

   46 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 46 (ForallRule)
