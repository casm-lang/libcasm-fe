Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | TwoOrMoreArguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   35                        | Identifier

   36 IdentifierPath: DotSeparatedIdentifiers
   37               | "." DotSeparatedIdentifiers

   38 Variable: Identifier ":" Type
   39         | Identifier

   40 Parameters: Parameters "," Variable
   41           | Variable

   42 MaybeParameters: "(" Parameters ")"
   43                | %empty

   44 Type: BasicType
   45     | ComposedType
   46     | RelationType
   47     | FixedSizedType

   48 BasicType: IdentifierPath

   49 ComposedType: IdentifierPath "<" Types ">"

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   51 FixedSizedType: IdentifierPath "'" Term

   52 Types: Types "," Type
   53      | Type

   54 Atom: Reference
   55     | BitNumber
   56     | IntegerNumber
   57     | FloatingNumber
   58     | RationalNumber
   59     | String
   60     | Undefined
   61     | Boolean

   62 Undefined: "undef"

   63 Boolean: "true"
   64        | "false"

   65 String: "string"

   66 BitNumber: "binary"
   67          | "hexadecimal"

   68 IntegerNumber: "integer"

   69 FloatingNumber: "floating"

   70 RationalNumber: "rational"

   71 Reference: "@" IdentifierPath

   72 Term: DirectCallExpression
   73     | IndirectCallExpression
   74     | ConditionalExpression
   75     | UniversalQuantifierExpression
   76     | ExistentialQuantifierExpression
   77     | Expression
   78     | List
   79     | Range
   80     | Atom

   81 Expression: "(" Term ")"
   82           | "+" Term
   83           | "-" Term
   84           | Term "+" Term
   85           | Term "-" Term
   86           | Term "*" Term
   87           | Term "/" Term
   88           | Term "%" Term
   89           | Term "^" Term
   90           | Term "!=" Term
   91           | Term "=" Term
   92           | Term "<" Term
   93           | Term ">" Term
   94           | Term "<=" Term
   95           | Term ">=" Term
   96           | Term "or" Term
   97           | Term "xor" Term
   98           | Term "and" Term
   99           | Term "=>" Term
  100           | Term "implies" Term
  101           | "not" Term

  102 Range: "[" Term ".." Term "]"

  103 List: "[" "]"
  104     | "[" Terms "]"

  105 Terms: Terms "," Term
  106      | Term

  107 Arguments: "(" Terms ")"
  108          | "(" error ")"
  109          | "(" ")"

  110 TwoOrMoreArguments: "(" Term "," Terms ")"

  111 DirectCallExpression: IdentifierPath
  112                     | IdentifierPath Arguments

  113 IndirectCallExpression: "(" "*" Term ")" Arguments

  114 ConditionalExpression: "if" Term "then" Term "else" Term

  115 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  116 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  117 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  118               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  119 Rule: SkipRule
  120     | ConditionalRule
  121     | CaseRule
  122     | LetRule
  123     | ForallRule
  124     | ChooseRule
  125     | IterateRule
  126     | BlockRule
  127     | SequenceRule
  128     | UpdateRule
  129     | CallRule

  130 Rules: Rules Rule
  131      | Rule

  132 SkipRule: "skip"

  133 ConditionalRule: "if" Term "then" Rule
  134                | "if" Term "then" Rule "else" Rule

  135 CaseRule: "case" Term "of" "{" CaseLabels "}"
  136         | "case" Term "of" "{" error "}"

  137 CaseLabel: "default" ":" Rule
  138          | "_" ":" Rule
  139          | Term ":" Rule

  140 CaseLabels: CaseLabel CaseLabels
  141           | CaseLabel

  142 LetRule: "let" Variable "=" Term "in" Rule

  143 ForallRule: "forall" Variable "in" Term "do" Rule

  144 ChooseRule: "choose" Variable "in" Term "do" Rule

  145 IterateRule: "iterate" Rule

  146 BlockRule: "{" Rules "}"
  147          | "par" Rules "endpar"
  148          | "{" error "}"
  149          | "par" error "endpar"

  150 SequenceRule: "{|" Rules "|}"
  151             | "seq" Rules "endseq"
  152             | "{|" error "|}"
  153             | "seq" error "endseq"

  154 UpdateRule: DirectCallExpression ":=" Term

  155 CallRule: "call" DirectCallExpression
  156         | DirectCallExpression
  157         | "call" IndirectCallExpression
  158         | IndirectCallExpression

  159 Attribute: BasicAttribute
  160          | ExpressionAttribute

  161 Attributes: Attributes "," Attribute
  162           | Attribute

  163 BasicAttribute: Identifier

  164 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 108 136 148 149 152 153
"CASM" (258) 1
"init" (259) 20 21
"derived" (260) 29
"enum" (261) 30
"rule" (262) 117 118
"function" (263) 10
"initially" (264) 12
"defined" (265) 14
"seq" (266) 151 153
"endseq" (267) 151 153
"par" (268) 147 149
"endpar" (269) 147 149
"skip" (270) 132
"let" (271) 142
"in" (272) 115 116 142 143 144
"forall" (273) 115 143
"choose" (274) 144
"iterate" (275) 145
"do" (276) 143 144
"call" (277) 155 157
"if" (278) 114 133 134
"then" (279) 114 133 134
"else" (280) 114 134
"case" (281) 135 136
"of" (282) 135 136
"default" (283) 137
"holds" (284) 115
"exists" (285) 116
"with" (286) 116
"undef" (287) 62
"false" (288) 64
"true" (289) 63
"and" (290) 98
"or" (291) 96
"xor" (292) 97
"implies" (293) 100
"not" (294) 101
"+" (295) 82 84
"-" (296) 83 85
"=" (297) 29 30 91 117 118 142
"(" (298) 42 81 107 108 109 110 113
")" (299) 42 81 107 108 109 110 113
"[" (300) 6 102 103 104
"]" (301) 6 102 103 104
"{" (302) 12 14 21 30 135 136 146 148
"}" (303) 12 14 21 30 135 136 146 148
":" (304) 10 38 137 138 139
"_" (305) 138
"@" (306) 71
"," (307) 25 32 40 52 105 110 161
"<" (308) 49 50 92
">" (309) 49 50 93
"*" (310) 16 86 113
"/" (311) 87
"%" (312) 88
"^" (313) 89
"'" (314) 51
".." (315) 102
"." (316) 34 37
"->" (317) 10 23 24 29 50 118
"=>" (318) 99
":=" (319) 154
"!=" (320) 90
"<=" (321) 94
">=" (322) 95
"{|" (323) 150 152
"|}" (324) 150 152
"binary" (325) 66
"hexadecimal" (326) 67
"integer" (327) 68
"rational" (328) 70
"floating" (329) 69
"string" (330) 65
"identifier" (331) 31
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (84)
    on left: 6 7, on right: 8 9
Definitions (85)
    on left: 8 9, on right: 1 8
FunctionDefinition (86)
    on left: 10 11, on right: 2
MaybeInitially (87)
    on left: 12 13, on right: 10
MaybeDefined (88)
    on left: 14 15, on right: 10
FunctionParameters (89)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (90)
    on left: 18 19, on right: 10 50
ProgramFunctionDefinition (91)
    on left: 20 21, on right: 11
Initializer (92)
    on left: 22 23 24, on right: 25 26
Initializers (93)
    on left: 25 26, on right: 25 27
MaybeInitializers (94)
    on left: 27 28, on right: 12 21
DerivedDefinition (95)
    on left: 29, on right: 3
EnumerationDefinition (96)
    on left: 30, on right: 5
Identifier (97)
    on left: 31, on right: 10 29 30 32 33 34 35 38 39 117 118 163 164
Identifiers (98)
    on left: 32 33, on right: 30 32
DotSeparatedIdentifiers (99)
    on left: 34 35, on right: 34 36 37
IdentifierPath (100)
    on left: 36 37, on right: 20 48 49 50 51 71 111 112
Variable (101)
    on left: 38 39, on right: 40 41 115 116 142 143 144
Parameters (102)
    on left: 40 41, on right: 40 42
MaybeParameters (103)
    on left: 42 43, on right: 29 117 118
Type (104)
    on left: 44 45 46 47, on right: 10 16 17 29 38 50 52 53 118
BasicType (105)
    on left: 48, on right: 44
ComposedType (106)
    on left: 49, on right: 45
RelationType (107)
    on left: 50, on right: 46
FixedSizedType (108)
    on left: 51, on right: 47
Types (109)
    on left: 52 53, on right: 49 52
Atom (110)
    on left: 54 55 56 57 58 59 60 61, on right: 80
Undefined (111)
    on left: 62, on right: 60
Boolean (112)
    on left: 63 64, on right: 61
String (113)
    on left: 65, on right: 59
BitNumber (114)
    on left: 66 67, on right: 55
IntegerNumber (115)
    on left: 68, on right: 56
FloatingNumber (116)
    on left: 69, on right: 57
RationalNumber (117)
    on left: 70, on right: 58
Reference (118)
    on left: 71, on right: 54
Term (119)
    on left: 72 73 74 75 76 77 78 79 80, on right: 14 22 23 24 29 51
    81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 105 106 110 113 114 115 116 133 134 135 136 139 142 143 144
    154 164
Expression (120)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101, on right: 77
Range (121)
    on left: 102, on right: 79
List (122)
    on left: 103 104, on right: 78
Terms (123)
    on left: 105 106, on right: 104 105 107 110
Arguments (124)
    on left: 107 108 109, on right: 112 113
TwoOrMoreArguments (125)
    on left: 110, on right: 24
DirectCallExpression (126)
    on left: 111 112, on right: 72 154 155 156
IndirectCallExpression (127)
    on left: 113, on right: 73 157 158
ConditionalExpression (128)
    on left: 114, on right: 74
UniversalQuantifierExpression (129)
    on left: 115, on right: 75
ExistentialQuantifierExpression (130)
    on left: 116, on right: 76
RuleDefinition (131)
    on left: 117 118, on right: 4
Rule (132)
    on left: 119 120 121 122 123 124 125 126 127 128 129, on right:
    117 118 130 131 133 134 137 138 139 142 143 144 145
Rules (133)
    on left: 130 131, on right: 130 146 147 150 151
SkipRule (134)
    on left: 132, on right: 119
ConditionalRule (135)
    on left: 133 134, on right: 120
CaseRule (136)
    on left: 135 136, on right: 121
CaseLabel (137)
    on left: 137 138 139, on right: 140 141
CaseLabels (138)
    on left: 140 141, on right: 135 140
LetRule (139)
    on left: 142, on right: 122
ForallRule (140)
    on left: 143, on right: 123
ChooseRule (141)
    on left: 144, on right: 124
IterateRule (142)
    on left: 145, on right: 125
BlockRule (143)
    on left: 146 147 148 149, on right: 126
SequenceRule (144)
    on left: 150 151 152 153, on right: 127
UpdateRule (145)
    on left: 154, on right: 128
CallRule (146)
    on left: 155 156 157 158, on right: 129
Attribute (147)
    on left: 159 160, on right: 161 162
Attributes (148)
    on left: 161 162, on right: 6 161
BasicAttribute (149)
    on left: 163, on right: 159
ExpressionAttribute (150)
    on left: 164, on right: 160


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 23


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 24


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier  go to state 25


State 6

  117 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  118               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 26


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 20

    Identifier  go to state 27


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 29
    Attributes           go to state 30
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 33
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 54
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 19

   37 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 75


State 20

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 21

   35 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 22

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   36 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 76

    $default  reduce using rule 36 (IdentifierPath)


State 23

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 24

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 78


State 25

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 79


State 26

  117 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  118               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 80


State 27

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 81


State 28

  163 BasicAttribute: Identifier .
  164 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 163 (BasicAttribute)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 83
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 29

  162 Attributes: Attribute .

    $default  reduce using rule 162 (Attributes)


State 30

    6 AttributedDefinition: "[" Attributes . "]" Definition
  161 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 84
    ","  shift, and go to state 85


State 31

  159 Attribute: BasicAttribute .

    $default  reduce using rule 159 (Attribute)


State 32

  160 Attribute: ExpressionAttribute .

    $default  reduce using rule 160 (Attribute)


State 33

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 34

  115 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 87


State 35

  114 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 88
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 36

  116 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 89


State 37

   62 Undefined: "undef" .

    $default  reduce using rule 62 (Undefined)


State 38

   64 Boolean: "false" .

    $default  reduce using rule 64 (Boolean)


State 39

   63 Boolean: "true" .

    $default  reduce using rule 63 (Boolean)


State 40

  101 Expression: "not" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 90
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 41

   82 Expression: "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 91
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 42

   83 Expression: "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 92
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 43

   81 Expression: "(" . Term ")"
  110 TwoOrMoreArguments: "(" . Term "," Terms ")"
  113 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 94
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 44

  102 Range: "[" . Term ".." Term "]"
  103 List: "[" . "]"
  104     | "[" . Terms "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "]"            shift, and go to state 95
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 96
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 97
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 45

   71 Reference: "@" . IdentifierPath

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 98


State 46

   66 BitNumber: "binary" .

    $default  reduce using rule 66 (BitNumber)


State 47

   67 BitNumber: "hexadecimal" .

    $default  reduce using rule 67 (BitNumber)


State 48

   68 IntegerNumber: "integer" .

    $default  reduce using rule 68 (IntegerNumber)


State 49

   70 RationalNumber: "rational" .

    $default  reduce using rule 70 (RationalNumber)


State 50

   69 FloatingNumber: "floating" .

    $default  reduce using rule 69 (FloatingNumber)


State 51

   65 String: "string" .

    $default  reduce using rule 65 (String)


State 52

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 53

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 99

    $default  reduce using rule 27 (MaybeInitializers)


State 54

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 100


State 55

  111 DirectCallExpression: IdentifierPath .
  112                     | IdentifierPath . Arguments

    "("  shift, and go to state 101

    $default  reduce using rule 111 (DirectCallExpression)

    Arguments  go to state 102


State 56

   80 Term: Atom .

    $default  reduce using rule 80 (Term)


State 57

   60 Atom: Undefined .

    $default  reduce using rule 60 (Atom)


State 58

   61 Atom: Boolean .

    $default  reduce using rule 61 (Atom)


State 59

   59 Atom: String .

    $default  reduce using rule 59 (Atom)


State 60

   55 Atom: BitNumber .

    $default  reduce using rule 55 (Atom)


State 61

   56 Atom: IntegerNumber .

    $default  reduce using rule 56 (Atom)


State 62

   57 Atom: FloatingNumber .

    $default  reduce using rule 57 (Atom)


State 63

   58 Atom: RationalNumber .

    $default  reduce using rule 58 (Atom)


State 64

   54 Atom: Reference .

    $default  reduce using rule 54 (Atom)


State 65

   22 Initializer: Term .
   23            | Term . "->" Term
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "->"       shift, and go to state 116
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 22 (Initializer)


State 66

   77 Term: Expression .

    $default  reduce using rule 77 (Term)


State 67

   79 Term: Range .

    $default  reduce using rule 79 (Term)


State 68

   78 Term: List .

    $default  reduce using rule 78 (Term)


State 69

   24 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 121


State 70

   72 Term: DirectCallExpression .

    $default  reduce using rule 72 (Term)


State 71

   73 Term: IndirectCallExpression .

    $default  reduce using rule 73 (Term)


State 72

   74 Term: ConditionalExpression .

    $default  reduce using rule 74 (Term)


State 73

   75 Term: UniversalQuantifierExpression .

    $default  reduce using rule 75 (Term)


State 74

   76 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 76 (Term)


State 75

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 37 (IdentifierPath)


State 76

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 122


State 77

   42 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 123
    Parameters  go to state 124


State 78

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 125


State 79

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 126


State 80

  117 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  118               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 127
    "->"  shift, and go to state 128


State 81

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 129
    MaybeFunctionParameters  go to state 130
    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 132
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 82

   81 Expression: "(" . Term ")"
  113 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 137
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 83

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  164 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 164 (ExpressionAttribute)


State 84

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 138
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 85

  161 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 139
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 86

   38 Variable: Identifier . ":" Type
   39         | Identifier .

    ":"  shift, and go to state 140

    $default  reduce using rule 39 (Variable)


State 87

  115 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 141


State 88

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  114 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 142
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 89

  116 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 143


State 90

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  101           | "not" Term .

    $default  reduce using rule 101 (Expression)


State 91

   82 Expression: "+" Term .
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    $default  reduce using rule 82 (Expression)


State 92

   83 Expression: "-" Term .
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    $default  reduce using rule 83 (Expression)


State 93

  113 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 144
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 94

   81 Expression: "(" Term . ")"
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  110 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 145
    ","        shift, and go to state 146
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 95

  103 List: "[" "]" .

    $default  reduce using rule 103 (List)


State 96

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  102 Range: "[" Term . ".." Term "]"
  106 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    ".."       shift, and go to state 147
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 106 (Terms)


State 97

  104 List: "[" Terms . "]"
  105 Terms: Terms . "," Term

    "]"  shift, and go to state 148
    ","  shift, and go to state 149


State 98

   71 Reference: "@" IdentifierPath .

    $default  reduce using rule 71 (Reference)


State 99

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Initializer                      go to state 150
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 100

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 101

  107 Arguments: "(" . Terms ")"
  108          | "(" . error ")"
  109          | "(" . ")"

    error          shift, and go to state 151
    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    ")"            shift, and go to state 152
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 153
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 154
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 102

  112 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 112 (DirectCallExpression)


State 103

   98 Expression: Term "and" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 155
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 104

   96 Expression: Term "or" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 156
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 105

   97 Expression: Term "xor" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 157
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 106

  100 Expression: Term "implies" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 158
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 107

   84 Expression: Term "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 159
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 108

   85 Expression: Term "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 160
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 109

   91 Expression: Term "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 161
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 110

   92 Expression: Term "<" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 162
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 111

   93 Expression: Term ">" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 163
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 112

   86 Expression: Term "*" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 164
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 113

   87 Expression: Term "/" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 165
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 114

   88 Expression: Term "%" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 166
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 115

   89 Expression: Term "^" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 167
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 116

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 168
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 117

   99 Expression: Term "=>" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 169
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 118

   90 Expression: Term "!=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 170
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 119

   94 Expression: Term "<=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 171
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 120

   95 Expression: Term ">=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 172
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 121

   24 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 173
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 122

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 34 (DotSeparatedIdentifiers)


State 123

   41 Parameters: Variable .

    $default  reduce using rule 41 (Parameters)


State 124

   40 Parameters: Parameters . "," Variable
   42 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 174
    ","  shift, and go to state 175


State 125

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 176
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 126

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier   go to state 177
    Identifiers  go to state 178


State 127

  117 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 194
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 128

  118 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 206
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 129

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 207

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 130

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 208


State 131

   48 BasicType: IdentifierPath .
   49 ComposedType: IdentifierPath . "<" Types ">"
   50 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   51 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 209
    "'"  shift, and go to state 210

    $default  reduce using rule 48 (BasicType)


State 132

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 133

   44 Type: BasicType .

    $default  reduce using rule 44 (Type)


State 134

   45 Type: ComposedType .

    $default  reduce using rule 45 (Type)


State 135

   46 Type: RelationType .

    $default  reduce using rule 46 (Type)


State 136

   47 Type: FixedSizedType .

    $default  reduce using rule 47 (Type)


State 137

   81 Expression: "(" Term . ")"
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 145
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 138

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 139

  161 Attributes: Attributes "," Attribute .

    $default  reduce using rule 161 (Attributes)


State 140

   38 Variable: Identifier ":" . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 211
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 141

  115 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 212
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 142

  114 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 213
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 143

  116 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 214
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 144

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  113 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 215
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 145

   81 Expression: "(" Term ")" .

    $default  reduce using rule 81 (Expression)


State 146

  110 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 153
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 216
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 147

  102 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 217
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 148

  104 List: "[" Terms "]" .

    $default  reduce using rule 104 (List)


State 149

  105 Terms: Terms "," . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 218
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 150

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 151

  108 Arguments: "(" error . ")"

    ")"  shift, and go to state 219


State 152

  109 Arguments: "(" ")" .

    $default  reduce using rule 109 (Arguments)


State 153

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  106 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 106 (Terms)


State 154

  105 Terms: Terms . "," Term
  107 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 220
    ","  shift, and go to state 149


State 155

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   98           | Term "and" Term .
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "="   shift, and go to state 109
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "!="  shift, and go to state 118
    "<="  shift, and go to state 119
    ">="  shift, and go to state 120

    $default  reduce using rule 98 (Expression)


State 156

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   96           | Term "or" Term .
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"  shift, and go to state 103
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 118
    "<="   shift, and go to state 119
    ">="   shift, and go to state 120

    $default  reduce using rule 96 (Expression)


State 157

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   97           | Term "xor" Term .
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"  shift, and go to state 103
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 118
    "<="   shift, and go to state 119
    ">="   shift, and go to state 120

    $default  reduce using rule 97 (Expression)


State 158

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  100           | Term "implies" Term .

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 118
    "<="   shift, and go to state 119
    ">="   shift, and go to state 120

    $default  reduce using rule 100 (Expression)


State 159

   84 Expression: Term . "+" Term
   84           | Term "+" Term .
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 84 (Expression)


State 160

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   85           | Term "-" Term .
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 85 (Expression)


State 161

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   91           | Term "=" Term .
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 119
    ">="  shift, and go to state 120

    $default  reduce using rule 91 (Expression)


State 162

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   92           | Term "<" Term .
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 92 (Expression)


State 163

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   93           | Term ">" Term .
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 93 (Expression)


State 164

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   86           | Term "*" Term .
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 86 (Expression)


State 165

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   87           | Term "/" Term .
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 87 (Expression)


State 166

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   88           | Term "%" Term .
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 88 (Expression)


State 167

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   89           | Term "^" Term .
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    $default  reduce using rule 89 (Expression)


State 168

   23 Initializer: Term "->" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 23 (Initializer)


State 169

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
   99           | Term "=>" Term .
  100           | Term . "implies" Term

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 118
    "<="   shift, and go to state 119
    ">="   shift, and go to state 120

    $default  reduce using rule 99 (Expression)


State 170

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   90           | Term "!=" Term .
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 119
    ">="  shift, and go to state 120

    $default  reduce using rule 90 (Expression)


State 171

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   94           | Term "<=" Term .
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 94 (Expression)


State 172

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   95           | Term ">=" Term .
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 95 (Expression)


State 173

   24 Initializer: TwoOrMoreArguments "->" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 24 (Initializer)


State 174

   42 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 42 (MaybeParameters)


State 175

   40 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 221


State 176

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 222


State 177

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 178

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 223
    ","  shift, and go to state 224


State 179

  151 SequenceRule: "seq" . Rules "endseq"
  153             | "seq" . error "endseq"

    error         shift, and go to state 225
    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 226
    Rules                    go to state 227
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 180

  147 BlockRule: "par" . Rules "endpar"
  149          | "par" . error "endpar"

    error         shift, and go to state 228
    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 226
    Rules                    go to state 229
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 181

  132 SkipRule: "skip" .

    $default  reduce using rule 132 (SkipRule)


State 182

  142 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 230


State 183

  143 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 231


State 184

  144 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 232


State 185

  145 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 233
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 186

  155 CallRule: "call" . DirectCallExpression
  157         | "call" . IndirectCallExpression

    "("           shift, and go to state 189
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 234
    IndirectCallExpression   go to state 235


State 187

  133 ConditionalRule: "if" . Term "then" Rule
  134                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 236
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 188

  135 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  136         | "case" . Term "of" "{" error "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 237
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 189

  113 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 93


State 190

  146 BlockRule: "{" . Rules "}"
  148          | "{" . error "}"

    error         shift, and go to state 238
    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 226
    Rules                    go to state 239
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 191

  150 SequenceRule: "{|" . Rules "|}"
  152             | "{|" . error "|}"

    error         shift, and go to state 240
    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 226
    Rules                    go to state 241
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 192

  154 UpdateRule: DirectCallExpression . ":=" Term
  156 CallRule: DirectCallExpression .

    ":="  shift, and go to state 242

    $default  reduce using rule 156 (CallRule)


State 193

  158 CallRule: IndirectCallExpression .

    $default  reduce using rule 158 (CallRule)


State 194

  117 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 117 (RuleDefinition)


State 195

  119 Rule: SkipRule .

    $default  reduce using rule 119 (Rule)


State 196

  120 Rule: ConditionalRule .

    $default  reduce using rule 120 (Rule)


State 197

  121 Rule: CaseRule .

    $default  reduce using rule 121 (Rule)


State 198

  122 Rule: LetRule .

    $default  reduce using rule 122 (Rule)


State 199

  123 Rule: ForallRule .

    $default  reduce using rule 123 (Rule)


State 200

  124 Rule: ChooseRule .

    $default  reduce using rule 124 (Rule)


State 201

  125 Rule: IterateRule .

    $default  reduce using rule 125 (Rule)


State 202

  126 Rule: BlockRule .

    $default  reduce using rule 126 (Rule)


State 203

  127 Rule: SequenceRule .

    $default  reduce using rule 127 (Rule)


State 204

  128 Rule: UpdateRule .

    $default  reduce using rule 128 (Rule)


State 205

  129 Rule: CallRule .

    $default  reduce using rule 129 (Rule)


State 206

  118 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 243


State 207

   16 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 244
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 208

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 245
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 209

   49 ComposedType: IdentifierPath "<" . Types ">"
   50 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 129
    MaybeFunctionParameters  go to state 246
    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 247
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136
    Types                    go to state 248


State 210

   51 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 249
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 211

   38 Variable: Identifier ":" Type .

    $default  reduce using rule 38 (Variable)


State 212

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  115 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 250
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 213

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  114 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 251
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 214

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  116 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 252
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 215

  113 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 101

    Arguments  go to state 253


State 216

  105 Terms: Terms . "," Term
  110 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 254
    ","  shift, and go to state 149


State 217

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  102 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "]"        shift, and go to state 255
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 218

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  105 Terms: Terms "," Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 105 (Terms)


State 219

  108 Arguments: "(" error ")" .

    $default  reduce using rule 108 (Arguments)


State 220

  107 Arguments: "(" Terms ")" .

    $default  reduce using rule 107 (Arguments)


State 221

   40 Parameters: Parameters "," Variable .

    $default  reduce using rule 40 (Parameters)


State 222

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 256
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 223

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 224

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 257


State 225

  153 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 258


State 226

  131 Rules: Rule .

    $default  reduce using rule 131 (Rules)


State 227

  130 Rules: Rules . Rule
  151 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 179
    "endseq"      shift, and go to state 259
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 260
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 228

  149 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 261


State 229

  130 Rules: Rules . Rule
  147 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "endpar"      shift, and go to state 262
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 260
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 230

  142 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 263


State 231

  143 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 264


State 232

  144 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 265


State 233

  145 IterateRule: "iterate" Rule .

    $default  reduce using rule 145 (IterateRule)


State 234

  155 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 155 (CallRule)


State 235

  157 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 157 (CallRule)


State 236

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  133 ConditionalRule: "if" Term . "then" Rule
  134                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 266
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 237

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  135 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  136         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 267
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 238

  148 BlockRule: "{" error . "}"

    "}"  shift, and go to state 268


State 239

  130 Rules: Rules . Rule
  146 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "}"           shift, and go to state 269
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 260
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 240

  152 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 270


State 241

  130 Rules: Rules . Rule
  150 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "|}"          shift, and go to state 271
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 260
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 242

  154 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 272
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 243

  118 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 273
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 244

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 245

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 274

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 275


State 246

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 276


State 247

   17 FunctionParameters: Type .
   53 Types: Type .

    ","       reduce using rule 53 (Types)
    ">"       reduce using rule 53 (Types)
    $default  reduce using rule 17 (FunctionParameters)


State 248

   49 ComposedType: IdentifierPath "<" Types . ">"
   52 Types: Types . "," Type

    ","  shift, and go to state 277
    ">"  shift, and go to state 278


State 249

   51 FixedSizedType: IdentifierPath "'" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "<"        shift, and go to state 110
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 51 (FixedSizedType)


State 250

  115 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 279
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 251

  114 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 280
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 252

  116 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 281
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 253

  113 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 113 (IndirectCallExpression)


State 254

  110 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 110 (TwoOrMoreArguments)


State 255

  102 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 102 (Range)


State 256

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 29 (DerivedDefinition)


State 257

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 258

  153 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 153 (SequenceRule)


State 259

  151 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 151 (SequenceRule)


State 260

  130 Rules: Rules Rule .

    $default  reduce using rule 130 (Rules)


State 261

  149 BlockRule: "par" error "endpar" .

    $default  reduce using rule 149 (BlockRule)


State 262

  147 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 147 (BlockRule)


State 263

  142 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 282
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 264

  143 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 283
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 265

  144 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 284
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 266

  133 ConditionalRule: "if" Term "then" . Rule
  134                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 285
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 267

  135 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  136         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 286


State 268

  148 BlockRule: "{" error "}" .

    $default  reduce using rule 148 (BlockRule)


State 269

  146 BlockRule: "{" Rules "}" .

    $default  reduce using rule 146 (BlockRule)


State 270

  152 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 152 (SequenceRule)


State 271

  150 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 150 (SequenceRule)


State 272

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  154 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 154 (UpdateRule)


State 273

  118 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 118 (RuleDefinition)


State 274

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 287


State 275

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 288

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 289


State 276

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 290
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 277

   52 Types: Types "," . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 131
    Type                     go to state 291
    BasicType                go to state 133
    ComposedType             go to state 134
    RelationType             go to state 135
    FixedSizedType           go to state 136


State 278

   49 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 49 (ComposedType)


State 279

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  115 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 115 (UniversalQuantifierExpression)


State 280

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  114 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120

    $default  reduce using rule 114 (ConditionalExpression)


State 281

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  116 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 116 (ExistentialQuantifierExpression)


State 282

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  142 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 292
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 283

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  143 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 293
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 284

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  144 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 294
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 285

  133 ConditionalRule: "if" Term "then" Rule .
  134                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 295

    $default  reduce using rule 133 (ConditionalRule)


State 286

  135 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  136         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 296
    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 297
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 298
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 299
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 300
    CaseLabels                       go to state 301


State 287

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 302
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 288

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 303


State 289

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 290

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 304


State 291

   52 Types: Types "," Type .

    $default  reduce using rule 52 (Types)


State 292

  142 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 305
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 293

  143 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 306
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 294

  144 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 307
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 295

  134 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 308
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 296

  136 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 309


State 297

  137 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 310


State 298

  138 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 311


State 299

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term
  139 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ":"        shift, and go to state 312
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 300

  140 CaseLabels: CaseLabel . CaseLabels
  141           | CaseLabel .

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 297
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 298
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 141 (CaseLabels)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 299
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 300
    CaseLabels                       go to state 313


State 301

  135 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 314


State 302

   14 MaybeDefined: "defined" "{" Term . "}"
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "=>" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "}"        shift, and go to state 315
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "=>"       shift, and go to state 117
    "!="       shift, and go to state 118
    "<="       shift, and go to state 119
    ">="       shift, and go to state 120


State 303

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 316
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    Reference                        go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 304

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 50 (RelationType)


State 305

  142 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 142 (LetRule)


State 306

  143 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 143 (ForallRule)


State 307

  144 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 144 (ChooseRule)


State 308

  134 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 134 (ConditionalRule)


State 309

  136 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 136 (CaseRule)


State 310

  137 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 317
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 311

  138 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 318
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 312

  139 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 179
    "par"         shift, and go to state 180
    "skip"        shift, and go to state 181
    "let"         shift, and go to state 182
    "forall"      shift, and go to state 183
    "choose"      shift, and go to state 184
    "iterate"     shift, and go to state 185
    "call"        shift, and go to state 186
    "if"          shift, and go to state 187
    "case"        shift, and go to state 188
    "("           shift, and go to state 189
    "{"           shift, and go to state 190
    "."           shift, and go to state 19
    "{|"          shift, and go to state 191
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 192
    IndirectCallExpression   go to state 193
    Rule                     go to state 319
    SkipRule                 go to state 195
    ConditionalRule          go to state 196
    CaseRule                 go to state 197
    LetRule                  go to state 198
    ForallRule               go to state 199
    ChooseRule               go to state 200
    IterateRule              go to state 201
    BlockRule                go to state 202
    SequenceRule             go to state 203
    UpdateRule               go to state 204
    CallRule                 go to state 205


State 313

  140 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 140 (CaseLabels)


State 314

  135 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 135 (CaseRule)


State 315

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 316

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 320


State 317

  137 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 137 (CaseLabel)


State 318

  138 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 138 (CaseLabel)


State 319

  139 CaseLabel: Term ":" Rule .

    $default  reduce using rule 139 (CaseLabel)


State 320

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
