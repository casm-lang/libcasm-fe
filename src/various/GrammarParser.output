Terminals unused in grammar

   "option"
   "dumps"


State 79 conflicts: 1 reduce/reduce
State 81 conflicts: 15 shift/reduce
State 86 conflicts: 1 shift/reduce
State 140 conflicts: 1 reduce/reduce
State 141 conflicts: 1 reduce/reduce
State 142 conflicts: 1 reduce/reduce
State 143 conflicts: 1 reduce/reduce
State 144 conflicts: 1 reduce/reduce
State 145 conflicts: 1 reduce/reduce
State 146 conflicts: 1 reduce/reduce
State 147 conflicts: 1 reduce/reduce
State 148 conflicts: 1 reduce/reduce
State 149 conflicts: 1 reduce/reduce
State 150 conflicts: 1 reduce/reduce
State 151 conflicts: 1 reduce/reduce
State 153 conflicts: 1 reduce/reduce
State 154 conflicts: 1 reduce/reduce
State 155 conflicts: 1 reduce/reduce
State 242 conflicts: 1 reduce/reduce
State 246 conflicts: 1 reduce/reduce
State 247 conflicts: 1 reduce/reduce
State 248 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 Definitions: Definitions Definition
    7            | Definition

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
    9                   | ProgramFunctionDefinition

   10 MaybeInitially: "initially" "{" MaybeInitializers "}"
   11               | %empty

   12 MaybeDefined: "defined" "{" Expression "}"
   13             | %empty

   14 FunctionParameters: FunctionParameters "*" Type
   15                   | Type

   16 MaybeFunctionParameters: FunctionParameters
   17                        | %empty

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")"
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Expression
   23            | Expression "->" Expression
   24            | Arguments "->" Expression

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Expression

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 MaybeIdentifiers: Identifiers
   35                 | %empty

   36 Variable: Identifier ":" Type
   37         | Identifier

   38 Parameters: Parameters "," Variable
   39           | Variable

   40 MaybeParameters: "(" Parameters ")"
   41                | %empty

   42 Type: BasicType
   43     | ComposedType
   44     | FixedSizedType
   45     | RangedType

   46 BasicType: Identifier

   47 ComposedType: Identifier "(" Types ")"

   48 FixedSizedType: Identifier "<" Expression ">"

   49 RangedType: Identifier "<" Expression ".." Expression ">"

   50 Types: Types "," Type
   51      | Type

   52 Atom: RuleReference
   53     | BitNumber
   54     | IntegerNumber
   55     | FloatingNumber
   56     | RationalNumber
   57     | String
   58     | Undefined
   59     | Boolean

   60 Undefined: "undef"

   61 Boolean: "true"
   62        | "false"

   63 String: "string"

   64 BitNumber: "binary"
   65          | "hexadecimal"

   66 IntegerNumber: "integer"

   67 FloatingNumber: "floating"

   68 RationalNumber: "rational"

   69 RuleReference: "@" "identifier"

   70 Term: DirectCallExpression
   71     | IndirectCallExpression
   72     | ConditionalExpression
   73     | UniversalQuantifierExpression
   74     | ExistentialQuantifierExpression
   75     | Expression
   76     | List
   77     | Range
   78     | Atom

   79 Expression: "(" Expression ")"
   80           | "+" Term
   81           | "(" Term ")"
   82           | "-" Term
   83           | Term "+" Term
   84           | Expression "-" Expression
   85           | Expression "*" Expression
   86           | Expression "/" Expression
   87           | Expression "%" Expression
   88           | Expression "^" Expression
   89           | Expression "!=" Expression
   90           | Expression "=" Expression
   91           | Expression "<" Expression
   92           | Expression ">" Expression
   93           | Expression "<=" Expression
   94           | Expression ">=" Expression
   95           | Expression "or" Expression
   96           | Expression "xor" Expression
   97           | Expression "and" Expression
   98           | Expression "implies" Expression
   99           | "not" Expression

  100 Range: "[" Term ".." Term "]"

  101 List: "[" "]"
  102     | "[" Term "]"
  103     | "[" Terms "]"

  104 Terms: Terms Term ","
  105      | Term ","

  106 Arguments: "(" Terms ")"
  107          | "(" ")"

  108 DirectCallExpression: Identifier
  109                     | Identifier Arguments

  110 IndirectCallExpression: "(" "*" Term ")" Arguments

  111 ConditionalExpression: "if" Expression "then" Expression "else" Expression

  112 UniversalQuantifierExpression: "forall" Variable "in" Expression "holds" Expression

  113 ExistentialQuantifierExpression: "exists" Variable "in" Expression "with" Expression

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  115               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  116 Rule: SkipRule
  117     | ConditionalRule
  118     | CaseRule
  119     | LetRule
  120     | ForallRule
  121     | IterateRule
  122     | BlockRule
  123     | SequenceRule
  124     | UpdateRule
  125     | CallRule

  126 Rules: Rules Rule
  127      | Rule

  128 SkipRule: "skip"

  129 ConditionalRule: "if" Expression "then" Rule
  130                | "if" Expression "then" Rule "else" Rule

  131 CaseRule: "case" Expression "of" "{" CaseLabels "}"

  132 CaseLabel: "default" ":" Rule
  133          | "_" ":" Rule
  134          | Expression ":" Rule

  135 CaseLabels: CaseLabel CaseLabels
  136           | CaseLabel

  137 LetRule: "let" Variable "=" Expression "in" Rule

  138 ForallRule: "forall" Variable "in" Expression "do" Rule

  139 IterateRule: "iterate" Rule

  140 BlockRule: "{" Rules "}"
  141          | "par" Rules "endpar"

  142 SequenceRule: "{|" Rules "|}"
  143             | "seq" Rules "endseq"

  144 UpdateRule: DirectCallExpression ":=" Expression

  145 CallRule: "call" DirectCallExpression
  146         | DirectCallExpression
  147         | "call" IndirectCallExpression
  148         | IndirectCallExpression


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"option" (260)
"derived" (261) 29
"enum" (262) 30
"rule" (263) 114 115
"dumps" (264)
"function" (265) 8
"initially" (266) 10
"defined" (267) 12
"seq" (268) 143
"endseq" (269) 143
"par" (270) 141
"endpar" (271) 141
"skip" (272) 128
"let" (273) 137
"in" (274) 112 113 137 138
"forall" (275) 112 138
"iterate" (276) 139
"do" (277) 138
"call" (278) 145 147
"if" (279) 111 129 130
"then" (280) 111 129 130
"else" (281) 111 130
"case" (282) 131
"of" (283) 131
"default" (284) 132
"holds" (285) 112
"exists" (286) 113
"with" (287) 113
"undef" (288) 60
"false" (289) 62
"true" (290) 61
"and" (291) 97
"or" (292) 95
"xor" (293) 96
"implies" (294) 98
"not" (295) 99
"+" (296) 80 83
"-" (297) 82 84
"=" (298) 29 30 90 114 115 137
"(" (299) 18 40 47 79 81 106 107 110
")" (300) 18 40 47 79 81 106 107 110
"[" (301) 100 101 102 103
"]" (302) 100 101 102 103
"{" (303) 10 12 21 30 131 140
"}" (304) 10 12 21 30 131 140
":" (305) 8 36 132 133 134
"_" (306) 133
"@" (307) 69
"," (308) 25 32 38 50 104 105
"<" (309) 48 49 91
">" (310) 48 49 92
"*" (311) 14 85 110
"/" (312) 86
"%" (313) 87
"^" (314) 88
".." (315) 49 100
"->" (316) 8 23 24 29 115
":=" (317) 144
"!=" (318) 89
"<=" (319) 93
">=" (320) 94
"{|" (321) 142
"|}" (322) 142
"binary" (323) 64
"hexadecimal" (324) 65
"integer" (325) 66
"rational" (326) 68
"floating" (327) 67
"string" (328) 63
"identifier" (329) 31 69
UPLUS (330)
UMINUS (331)
DIRECT_CALL_EXPR_NO_ARG (332)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
Specification (79)
    on left: 1, on right: 0
Definition (80)
    on left: 2 3 4 5, on right: 6 7
Definitions (81)
    on left: 6 7, on right: 1 6
FunctionDefinition (82)
    on left: 8 9, on right: 2
MaybeInitially (83)
    on left: 10 11, on right: 8
MaybeDefined (84)
    on left: 12 13, on right: 8
FunctionParameters (85)
    on left: 14 15, on right: 14 16
MaybeFunctionParameters (86)
    on left: 16 17, on right: 8
MaybeFunctionAttributes (87)
    on left: 18 19, on right: 8
ProgramFunctionDefinition (88)
    on left: 20 21, on right: 9
Initializer (89)
    on left: 22 23 24, on right: 25 26
Initializers (90)
    on left: 25 26, on right: 25 27
MaybeInitializers (91)
    on left: 27 28, on right: 10 21
DerivedDefinition (92)
    on left: 29, on right: 3
EnumerationDefinition (93)
    on left: 30, on right: 5
Identifier (94)
    on left: 31, on right: 8 20 29 30 32 33 36 37 46 47 48 49 108 109
    114 115
Identifiers (95)
    on left: 32 33, on right: 30 32 34
MaybeIdentifiers (96)
    on left: 34 35, on right: 18
Variable (97)
    on left: 36 37, on right: 38 39 112 113 137 138
Parameters (98)
    on left: 38 39, on right: 38 40
MaybeParameters (99)
    on left: 40 41, on right: 29 114 115
Type (100)
    on left: 42 43 44 45, on right: 8 14 15 29 36 50 51 115
BasicType (101)
    on left: 46, on right: 42
ComposedType (102)
    on left: 47, on right: 43
FixedSizedType (103)
    on left: 48, on right: 44
RangedType (104)
    on left: 49, on right: 45
Types (105)
    on left: 50 51, on right: 47 50
Atom (106)
    on left: 52 53 54 55 56 57 58 59, on right: 78
Undefined (107)
    on left: 60, on right: 58
Boolean (108)
    on left: 61 62, on right: 59
String (109)
    on left: 63, on right: 57
BitNumber (110)
    on left: 64 65, on right: 53
IntegerNumber (111)
    on left: 66, on right: 54
FloatingNumber (112)
    on left: 67, on right: 55
RationalNumber (113)
    on left: 68, on right: 56
RuleReference (114)
    on left: 69, on right: 52
Term (115)
    on left: 70 71 72 73 74 75 76 77 78, on right: 80 81 82 83 100
    102 104 105 110
Expression (116)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 98 99, on right: 12 22 23 24 29 48 49 75 79 84 85 86 87 88 89
    90 91 92 93 94 95 96 97 98 99 111 112 113 129 130 131 134 137 138
    144
Range (117)
    on left: 100, on right: 77
List (118)
    on left: 101 102 103, on right: 76
Terms (119)
    on left: 104 105, on right: 103 104 106
Arguments (120)
    on left: 106 107, on right: 24 109 110
DirectCallExpression (121)
    on left: 108 109, on right: 70 144 145 146
IndirectCallExpression (122)
    on left: 110, on right: 71 147 148
ConditionalExpression (123)
    on left: 111, on right: 72
UniversalQuantifierExpression (124)
    on left: 112, on right: 73
ExistentialQuantifierExpression (125)
    on left: 113, on right: 74
RuleDefinition (126)
    on left: 114 115, on right: 4
Rule (127)
    on left: 116 117 118 119 120 121 122 123 124 125, on right: 114
    115 126 127 129 130 132 133 134 137 138 139
Rules (128)
    on left: 126 127, on right: 126 140 141 142 143
SkipRule (129)
    on left: 128, on right: 116
ConditionalRule (130)
    on left: 129 130, on right: 117
CaseRule (131)
    on left: 131, on right: 118
CaseLabel (132)
    on left: 132 133 134, on right: 135 136
CaseLabels (133)
    on left: 135 136, on right: 131 135
LetRule (134)
    on left: 137, on right: 119
ForallRule (135)
    on left: 138, on right: 120
IterateRule (136)
    on left: 139, on right: 121
BlockRule (137)
    on left: 140 141, on right: 122
SequenceRule (138)
    on left: 142 143, on right: 123
UpdateRule (139)
    on left: 144, on right: 124
CallRule (140)
    on left: 145 146 147 148, on right: 125


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 8
    Definitions                go to state 9
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 15


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 16
    "identifier"  shift, and go to state 17

    Identifier  go to state 18


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Expression

    "identifier"  shift, and go to state 17

    Identifier  go to state 19


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier  go to state 20


State 6

  114 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  115               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 21


State 7

    8 FunctionDefinition: "function" . MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "("  shift, and go to state 22

    $default  reduce using rule 19 (MaybeFunctionAttributes)

    MaybeFunctionAttributes  go to state 23


State 8

    7 Definitions: Definition .

    $default  reduce using rule 7 (Definitions)


State 9

    1 Specification: "CASM" Definitions .
    6 Definitions: Definitions . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 24
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 10

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 11

    9 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 9 (FunctionDefinition)


State 12

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 13

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 14

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 15

    0 $accept: Specification "end of file" .

    $default  accept


State 16

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 43
    Initializers                     go to state 44
    MaybeInitializers                go to state 45
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 17

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 18

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 19

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Expression

    "("  shift, and go to state 66

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 67


State 20

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 68


State 21

  114 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  115               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 66

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 69


State 22

   18 MaybeFunctionAttributes: "(" . MaybeIdentifiers ")"

    "identifier"  shift, and go to state 17

    $default  reduce using rule 35 (MaybeIdentifiers)

    Identifier        go to state 70
    Identifiers       go to state 71
    MaybeIdentifiers  go to state 72


State 23

    8 FunctionDefinition: "function" MaybeFunctionAttributes . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier  go to state 73


State 24

    6 Definitions: Definitions Definition .

    $default  reduce using rule 6 (Definitions)


State 25

  112 UniversalQuantifierExpression: "forall" . Variable "in" Expression "holds" Expression

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 75


State 26

  111 ConditionalExpression: "if" . Expression "then" Expression "else" Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 77
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 27

  113 ExistentialQuantifierExpression: "exists" . Variable "in" Expression "with" Expression

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 78


State 28

   60 Undefined: "undef" .

    $default  reduce using rule 60 (Undefined)


State 29

   62 Boolean: "false" .

    $default  reduce using rule 62 (Boolean)


State 30

   61 Boolean: "true" .

    $default  reduce using rule 61 (Boolean)


State 31

   99 Expression: "not" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 79
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 32

   80 Expression: "+" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 80
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 33

   82 Expression: "-" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 82
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 34

   79 Expression: "(" . Expression ")"
   81           | "(" . Term ")"
  106 Arguments: "(" . Terms ")"
  107          | "(" . ")"
  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    ")"            shift, and go to state 83
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "*"            shift, and go to state 84
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 85
    Expression                       go to state 86
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 87
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 35

  100 Range: "[" . Term ".." Term "]"
  101 List: "[" . "]"
  102     | "[" . Term "]"
  103     | "[" . Terms "]"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "]"            shift, and go to state 88
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 89
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 90
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 36

   69 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 91


State 37

   64 BitNumber: "binary" .

    $default  reduce using rule 64 (BitNumber)


State 38

   65 BitNumber: "hexadecimal" .

    $default  reduce using rule 65 (BitNumber)


State 39

   66 IntegerNumber: "integer" .

    $default  reduce using rule 66 (IntegerNumber)


State 40

   68 RationalNumber: "rational" .

    $default  reduce using rule 68 (RationalNumber)


State 41

   67 FloatingNumber: "floating" .

    $default  reduce using rule 67 (FloatingNumber)


State 42

   63 String: "string" .

    $default  reduce using rule 63 (String)


State 43

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 44

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 92

    $default  reduce using rule 27 (MaybeInitializers)


State 45

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 93


State 46

  108 DirectCallExpression: Identifier .
  109                     | Identifier . Arguments

    $default  reduce using rule 108 (DirectCallExpression)

    Arguments  go to state 95


State 47

   78 Term: Atom .

    $default  reduce using rule 78 (Term)


State 48

   58 Atom: Undefined .

    $default  reduce using rule 58 (Atom)


State 49

   59 Atom: Boolean .

    $default  reduce using rule 59 (Atom)


State 50

   57 Atom: String .

    $default  reduce using rule 57 (Atom)


State 51

   53 Atom: BitNumber .

    $default  reduce using rule 53 (Atom)


State 52

   54 Atom: IntegerNumber .

    $default  reduce using rule 54 (Atom)


State 53

   55 Atom: FloatingNumber .

    $default  reduce using rule 55 (Atom)


State 54

   56 Atom: RationalNumber .

    $default  reduce using rule 56 (Atom)


State 55

   52 Atom: RuleReference .

    $default  reduce using rule 52 (Atom)


State 56

   83 Expression: Term . "+" Term

    "+"  shift, and go to state 96


State 57

   22 Initializer: Expression .
   23            | Expression . "->" Expression
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "->"       shift, and go to state 109
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    $default  reduce using rule 22 (Initializer)


State 58

   77 Term: Range .

    $default  reduce using rule 77 (Term)


State 59

   76 Term: List .

    $default  reduce using rule 76 (Term)


State 60

   24 Initializer: Arguments . "->" Expression

    "->"  shift, and go to state 113


State 61

   70 Term: DirectCallExpression .

    $default  reduce using rule 70 (Term)


State 62

   71 Term: IndirectCallExpression .

    $default  reduce using rule 71 (Term)


State 63

   72 Term: ConditionalExpression .

    $default  reduce using rule 72 (Term)


State 64

   73 Term: UniversalQuantifierExpression .

    $default  reduce using rule 73 (Term)


State 65

   74 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 74 (Term)


State 66

   40 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 114
    Parameters  go to state 115


State 67

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Expression

    "->"  shift, and go to state 116


State 68

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 117


State 69

  114 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  115               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 118
    "->"  shift, and go to state 119


State 70

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 71

   32 Identifiers: Identifiers . "," Identifier
   34 MaybeIdentifiers: Identifiers .

    ","  shift, and go to state 120

    $default  reduce using rule 34 (MaybeIdentifiers)


State 72

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers . ")"

    ")"  shift, and go to state 121


State 73

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 122


State 74

   36 Variable: Identifier . ":" Type
   37         | Identifier .

    ":"  shift, and go to state 123

    $default  reduce using rule 37 (Variable)


State 75

  112 UniversalQuantifierExpression: "forall" Variable . "in" Expression "holds" Expression

    "in"  shift, and go to state 124


State 76

   79 Expression: "(" . Expression ")"
   81           | "(" . Term ")"
  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "*"            shift, and go to state 84
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 125
    Expression                       go to state 86
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 77

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  111 ConditionalExpression: "if" Expression . "then" Expression "else" Expression

    "then"     shift, and go to state 126
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 78

  113 ExistentialQuantifierExpression: "exists" Variable . "in" Expression "with" Expression

    "in"  shift, and go to state 127


State 79

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
   99           | "not" Expression .

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 99 (Expression)]
    $default  reduce using rule 99 (Expression)


State 80

   80 Expression: "+" Term .
   83           | Term . "+" Term

    $default  reduce using rule 80 (Expression)


State 81

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "and"      [reduce using rule 75 (Term)]
    "or"       [reduce using rule 75 (Term)]
    "xor"      [reduce using rule 75 (Term)]
    "implies"  [reduce using rule 75 (Term)]
    "-"        [reduce using rule 75 (Term)]
    "="        [reduce using rule 75 (Term)]
    "<"        [reduce using rule 75 (Term)]
    ">"        [reduce using rule 75 (Term)]
    "*"        [reduce using rule 75 (Term)]
    "/"        [reduce using rule 75 (Term)]
    "%"        [reduce using rule 75 (Term)]
    "^"        [reduce using rule 75 (Term)]
    "!="       [reduce using rule 75 (Term)]
    "<="       [reduce using rule 75 (Term)]
    ">="       [reduce using rule 75 (Term)]
    $default   reduce using rule 75 (Term)


State 82

   82 Expression: "-" Term .
   83           | Term . "+" Term

    $default  reduce using rule 82 (Expression)


State 83

  107 Arguments: "(" ")" .

    $default  reduce using rule 107 (Arguments)


State 84

  110 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 128
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 85

   81 Expression: "(" Term . ")"
   83           | Term . "+" Term
  105 Terms: Term . ","

    "+"  shift, and go to state 96
    ")"  shift, and go to state 129
    ","  shift, and go to state 130


State 86

   75 Term: Expression .
   79 Expression: "(" Expression . ")"
   84           | Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    ")"        shift, and go to state 131
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    ")"       [reduce using rule 75 (Term)]
    $default  reduce using rule 75 (Term)


State 87

  104 Terms: Terms . Term ","
  106 Arguments: "(" Terms . ")"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    ")"            shift, and go to state 132
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 133
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 88

  101 List: "[" "]" .

    $default  reduce using rule 101 (List)


State 89

   83 Expression: Term . "+" Term
  100 Range: "[" Term . ".." Term "]"
  102 List: "[" Term . "]"
  105 Terms: Term . ","

    "+"   shift, and go to state 96
    "]"   shift, and go to state 134
    ","   shift, and go to state 130
    ".."  shift, and go to state 135


State 90

  103 List: "[" Terms . "]"
  104 Terms: Terms . Term ","

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "]"            shift, and go to state 136
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 133
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 91

   69 RuleReference: "@" "identifier" .

    $default  reduce using rule 69 (RuleReference)


State 92

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Initializer                      go to state 137
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 93

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 94

  106 Arguments: "(" . Terms ")"
  107          | "(" . ")"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    ")"            shift, and go to state 83
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 138
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 87
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 95

  109 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 109 (DirectCallExpression)


State 96

   83 Expression: Term "+" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 139
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 97

   97 Expression: Expression "and" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 140
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 98

   95 Expression: Expression "or" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 141
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 99

   96 Expression: Expression "xor" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 142
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 100

   98 Expression: Expression "implies" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 143
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 101

   84 Expression: Expression "-" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 144
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 102

   90 Expression: Expression "=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 145
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 103

   91 Expression: Expression "<" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 146
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 104

   92 Expression: Expression ">" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 147
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 105

   85 Expression: Expression "*" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 148
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 106

   86 Expression: Expression "/" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 149
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 107

   87 Expression: Expression "%" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 150
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 108

   88 Expression: Expression "^" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 151
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 109

   23 Initializer: Expression "->" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 152
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 110

   89 Expression: Expression "!=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 153
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 111

   93 Expression: Expression "<=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 154
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 112

   94 Expression: Expression ">=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 155
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 113

   24 Initializer: Arguments "->" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 156
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 114

   39 Parameters: Variable .

    $default  reduce using rule 39 (Parameters)


State 115

   38 Parameters: Parameters . "," Variable
   40 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 157
    ","  shift, and go to state 158


State 116

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Expression

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 160
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 117

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier   go to state 70
    Identifiers  go to state 165


State 118

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 180
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 119

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 191
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 120

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 17

    Identifier  go to state 192


State 121

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")" .

    $default  reduce using rule 18 (MaybeFunctionAttributes)


State 122

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    $default  reduce using rule 17 (MaybeFunctionParameters)

    FunctionParameters       go to state 193
    MaybeFunctionParameters  go to state 194
    Identifier               go to state 159
    Type                     go to state 195
    BasicType                go to state 161
    ComposedType             go to state 162
    FixedSizedType           go to state 163
    RangedType               go to state 164


State 123

   36 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 196
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 124

  112 UniversalQuantifierExpression: "forall" Variable "in" . Expression "holds" Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 197
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 125

   81 Expression: "(" Term . ")"
   83           | Term . "+" Term

    "+"  shift, and go to state 96
    ")"  shift, and go to state 129


State 126

  111 ConditionalExpression: "if" Expression "then" . Expression "else" Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 198
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 127

  113 ExistentialQuantifierExpression: "exists" Variable "in" . Expression "with" Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 199
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 128

   83 Expression: Term . "+" Term
  110 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "+"  shift, and go to state 96
    ")"  shift, and go to state 200


State 129

   81 Expression: "(" Term ")" .

    $default  reduce using rule 81 (Expression)


State 130

  105 Terms: Term "," .

    $default  reduce using rule 105 (Terms)


State 131

   79 Expression: "(" Expression ")" .

    $default  reduce using rule 79 (Expression)


State 132

  106 Arguments: "(" Terms ")" .

    $default  reduce using rule 106 (Arguments)


State 133

   83 Expression: Term . "+" Term
  104 Terms: Terms Term . ","

    "+"  shift, and go to state 96
    ","  shift, and go to state 201


State 134

  102 List: "[" Term "]" .

    $default  reduce using rule 102 (List)


State 135

  100 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 202
    Expression                       go to state 81
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 136

  103 List: "[" Terms "]" .

    $default  reduce using rule 103 (List)


State 137

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 138

   83 Expression: Term . "+" Term
  105 Terms: Term . ","

    "+"  shift, and go to state 96
    ","  shift, and go to state 130


State 139

   83 Expression: Term . "+" Term
   83           | Term "+" Term .

    $default  reduce using rule 83 (Expression)


State 140

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   97           | Expression "and" Expression .
   98           | Expression . "implies" Expression

    "-"   shift, and go to state 101
    "="   shift, and go to state 102
    "<"   shift, and go to state 103
    ">"   shift, and go to state 104
    "*"   shift, and go to state 105
    "/"   shift, and go to state 106
    "%"   shift, and go to state 107
    "^"   shift, and go to state 108
    "!="  shift, and go to state 110
    "<="  shift, and go to state 111
    ">="  shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 97 (Expression)]
    $default  reduce using rule 97 (Expression)


State 141

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   95           | Expression "or" Expression .
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"  shift, and go to state 97
    "xor"  shift, and go to state 99
    "-"    shift, and go to state 101
    "="    shift, and go to state 102
    "<"    shift, and go to state 103
    ">"    shift, and go to state 104
    "*"    shift, and go to state 105
    "/"    shift, and go to state 106
    "%"    shift, and go to state 107
    "^"    shift, and go to state 108
    "!="   shift, and go to state 110
    "<="   shift, and go to state 111
    ">="   shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 95 (Expression)]
    $default  reduce using rule 95 (Expression)


State 142

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   96           | Expression "xor" Expression .
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"  shift, and go to state 97
    "-"    shift, and go to state 101
    "="    shift, and go to state 102
    "<"    shift, and go to state 103
    ">"    shift, and go to state 104
    "*"    shift, and go to state 105
    "/"    shift, and go to state 106
    "%"    shift, and go to state 107
    "^"    shift, and go to state 108
    "!="   shift, and go to state 110
    "<="   shift, and go to state 111
    ">="   shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 96 (Expression)]
    $default  reduce using rule 96 (Expression)


State 143

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
   98           | Expression "implies" Expression .

    "and"  shift, and go to state 97
    "or"   shift, and go to state 98
    "xor"  shift, and go to state 99
    "-"    shift, and go to state 101
    "="    shift, and go to state 102
    "<"    shift, and go to state 103
    ">"    shift, and go to state 104
    "*"    shift, and go to state 105
    "/"    shift, and go to state 106
    "%"    shift, and go to state 107
    "^"    shift, and go to state 108
    "!="   shift, and go to state 110
    "<="   shift, and go to state 111
    ">="   shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 98 (Expression)]
    $default  reduce using rule 98 (Expression)


State 144

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   84           | Expression "-" Expression .
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107
    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 84 (Expression)]
    $default  reduce using rule 84 (Expression)


State 145

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   90           | Expression "=" Expression .
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"   shift, and go to state 101
    "<"   shift, and go to state 103
    ">"   shift, and go to state 104
    "*"   shift, and go to state 105
    "/"   shift, and go to state 106
    "%"   shift, and go to state 107
    "^"   shift, and go to state 108
    "<="  shift, and go to state 111
    ">="  shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 90 (Expression)]
    $default  reduce using rule 90 (Expression)


State 146

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   91           | Expression "<" Expression .
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"  shift, and go to state 101
    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107
    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 91 (Expression)]
    $default  reduce using rule 91 (Expression)


State 147

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   92           | Expression ">" Expression .
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"  shift, and go to state 101
    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107
    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 92 (Expression)]
    $default  reduce using rule 92 (Expression)


State 148

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   85           | Expression "*" Expression .
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 85 (Expression)]
    $default  reduce using rule 85 (Expression)


State 149

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   86           | Expression "/" Expression .
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 86 (Expression)]
    $default  reduce using rule 86 (Expression)


State 150

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   87           | Expression "%" Expression .
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 87 (Expression)]
    $default  reduce using rule 87 (Expression)


State 151

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   88           | Expression "^" Expression .
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 88 (Expression)]
    $default  reduce using rule 88 (Expression)


State 152

   23 Initializer: Expression "->" Expression .
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    $default  reduce using rule 23 (Initializer)


State 153

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   89           | Expression "!=" Expression .
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"   shift, and go to state 101
    "<"   shift, and go to state 103
    ">"   shift, and go to state 104
    "*"   shift, and go to state 105
    "/"   shift, and go to state 106
    "%"   shift, and go to state 107
    "^"   shift, and go to state 108
    "<="  shift, and go to state 111
    ">="  shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 89 (Expression)]
    $default  reduce using rule 89 (Expression)


State 154

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   93           | Expression "<=" Expression .
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"  shift, and go to state 101
    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107
    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 93 (Expression)]
    $default  reduce using rule 93 (Expression)


State 155

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   94           | Expression ">=" Expression .
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "-"  shift, and go to state 101
    "*"  shift, and go to state 105
    "/"  shift, and go to state 106
    "%"  shift, and go to state 107
    "^"  shift, and go to state 108

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 94 (Expression)]
    $default  reduce using rule 94 (Expression)


State 156

   24 Initializer: Arguments "->" Expression .
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    $default  reduce using rule 24 (Initializer)


State 157

   40 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 40 (MaybeParameters)


State 158

   38 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 203


State 159

   46 BasicType: Identifier .
   47 ComposedType: Identifier . "(" Types ")"
   48 FixedSizedType: Identifier . "<" Expression ">"
   49 RangedType: Identifier . "<" Expression ".." Expression ">"

    "("  shift, and go to state 204
    "<"  shift, and go to state 205

    $default  reduce using rule 46 (BasicType)


State 160

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Expression

    "="  shift, and go to state 206


State 161

   42 Type: BasicType .

    $default  reduce using rule 42 (Type)


State 162

   43 Type: ComposedType .

    $default  reduce using rule 43 (Type)


State 163

   44 Type: FixedSizedType .

    $default  reduce using rule 44 (Type)


State 164

   45 Type: RangedType .

    $default  reduce using rule 45 (Type)


State 165

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 207
    ","  shift, and go to state 120


State 166

  143 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 208
    Rules                   go to state 209
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 167

  141 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 208
    Rules                   go to state 210
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 168

  128 SkipRule: "skip" .

    $default  reduce using rule 128 (SkipRule)


State 169

  137 LetRule: "let" . Variable "=" Expression "in" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 211


State 170

  138 ForallRule: "forall" . Variable "in" Expression "do" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 212


State 171

  139 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 213
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 172

  145 CallRule: "call" . DirectCallExpression
  147         | "call" . IndirectCallExpression

    "("           shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 214
    IndirectCallExpression  go to state 215


State 173

  129 ConditionalRule: "if" . Expression "then" Rule
  130                | "if" . Expression "then" Rule "else" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 216
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 174

  131 CaseRule: "case" . Expression "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 217
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 175

  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 84


State 176

  140 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 208
    Rules                   go to state 218
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 177

  142 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 208
    Rules                   go to state 219
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 178

  144 UpdateRule: DirectCallExpression . ":=" Expression
  146 CallRule: DirectCallExpression .

    ":="  shift, and go to state 220

    $default  reduce using rule 146 (CallRule)


State 179

  148 CallRule: IndirectCallExpression .

    $default  reduce using rule 148 (CallRule)


State 180

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 114 (RuleDefinition)


State 181

  116 Rule: SkipRule .

    $default  reduce using rule 116 (Rule)


State 182

  117 Rule: ConditionalRule .

    $default  reduce using rule 117 (Rule)


State 183

  118 Rule: CaseRule .

    $default  reduce using rule 118 (Rule)


State 184

  119 Rule: LetRule .

    $default  reduce using rule 119 (Rule)


State 185

  120 Rule: ForallRule .

    $default  reduce using rule 120 (Rule)


State 186

  121 Rule: IterateRule .

    $default  reduce using rule 121 (Rule)


State 187

  122 Rule: BlockRule .

    $default  reduce using rule 122 (Rule)


State 188

  123 Rule: SequenceRule .

    $default  reduce using rule 123 (Rule)


State 189

  124 Rule: UpdateRule .

    $default  reduce using rule 124 (Rule)


State 190

  125 Rule: CallRule .

    $default  reduce using rule 125 (Rule)


State 191

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 221


State 192

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 193

   14 FunctionParameters: FunctionParameters . "*" Type
   16 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 222

    $default  reduce using rule 16 (MaybeFunctionParameters)


State 194

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 223


State 195

   15 FunctionParameters: Type .

    $default  reduce using rule 15 (FunctionParameters)


State 196

   36 Variable: Identifier ":" Type .

    $default  reduce using rule 36 (Variable)


State 197

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  112 UniversalQuantifierExpression: "forall" Variable "in" Expression . "holds" Expression

    "holds"    shift, and go to state 224
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 198

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  111 ConditionalExpression: "if" Expression "then" Expression . "else" Expression

    "else"     shift, and go to state 225
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 199

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  113 ExistentialQuantifierExpression: "exists" Variable "in" Expression . "with" Expression

    "with"     shift, and go to state 226
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 200

  110 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 94

    Arguments  go to state 227


State 201

  104 Terms: Terms Term "," .

    $default  reduce using rule 104 (Terms)


State 202

   83 Expression: Term . "+" Term
  100 Range: "[" Term ".." Term . "]"

    "+"  shift, and go to state 96
    "]"  shift, and go to state 228


State 203

   38 Parameters: Parameters "," Variable .

    $default  reduce using rule 38 (Parameters)


State 204

   47 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 229
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164
    Types           go to state 230


State 205

   48 FixedSizedType: Identifier "<" . Expression ">"
   49 RangedType: Identifier "<" . Expression ".." Expression ">"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 231
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 206

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 232
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 207

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 208

  127 Rules: Rule .

    $default  reduce using rule 127 (Rules)


State 209

  126 Rules: Rules . Rule
  143 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 166
    "endseq"      shift, and go to state 233
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 234
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 210

  126 Rules: Rules . Rule
  141 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "endpar"      shift, and go to state 235
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 234
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 211

  137 LetRule: "let" Variable . "=" Expression "in" Rule

    "="  shift, and go to state 236


State 212

  138 ForallRule: "forall" Variable . "in" Expression "do" Rule

    "in"  shift, and go to state 237


State 213

  139 IterateRule: "iterate" Rule .

    $default  reduce using rule 139 (IterateRule)


State 214

  145 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 145 (CallRule)


State 215

  147 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 147 (CallRule)


State 216

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  129 ConditionalRule: "if" Expression . "then" Rule
  130                | "if" Expression . "then" Rule "else" Rule

    "then"     shift, and go to state 238
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 217

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  131 CaseRule: "case" Expression . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 239
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 218

  126 Rules: Rules . Rule
  140 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "}"           shift, and go to state 240
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 234
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 219

  126 Rules: Rules . Rule
  142 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "|}"          shift, and go to state 241
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 234
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 220

  144 UpdateRule: DirectCallExpression ":=" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 242
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 221

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 243
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 222

   14 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 244
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 223

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 245
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 224

  112 UniversalQuantifierExpression: "forall" Variable "in" Expression "holds" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 246
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 225

  111 ConditionalExpression: "if" Expression "then" Expression "else" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 247
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 226

  113 ExistentialQuantifierExpression: "exists" Variable "in" Expression "with" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 248
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 227

  110 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 110 (IndirectCallExpression)


State 228

  100 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 100 (Range)


State 229

   51 Types: Type .

    $default  reduce using rule 51 (Types)


State 230

   47 ComposedType: Identifier "(" Types . ")"
   50 Types: Types . "," Type

    ")"  shift, and go to state 249
    ","  shift, and go to state 250


State 231

   48 FixedSizedType: Identifier "<" Expression . ">"
   49 RangedType: Identifier "<" Expression . ".." Expression ">"
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 251
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    ".."       shift, and go to state 252
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 232

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Expression .
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    $default  reduce using rule 29 (DerivedDefinition)


State 233

  143 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 143 (SequenceRule)


State 234

  126 Rules: Rules Rule .

    $default  reduce using rule 126 (Rules)


State 235

  141 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 141 (BlockRule)


State 236

  137 LetRule: "let" Variable "=" . Expression "in" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 253
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 237

  138 ForallRule: "forall" Variable "in" . Expression "do" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 254
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 238

  129 ConditionalRule: "if" Expression "then" . Rule
  130                | "if" Expression "then" . Rule "else" Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 255
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 239

  131 CaseRule: "case" Expression "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 256


State 240

  140 BlockRule: "{" Rules "}" .

    $default  reduce using rule 140 (BlockRule)


State 241

  142 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 142 (SequenceRule)


State 242

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  144 UpdateRule: DirectCallExpression ":=" Expression .

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 144 (UpdateRule)]
    $default  reduce using rule 144 (UpdateRule)


State 243

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 115 (RuleDefinition)


State 244

   14 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 14 (FunctionParameters)


State 245

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 257

    $default  reduce using rule 13 (MaybeDefined)

    MaybeDefined  go to state 258


State 246

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  112 UniversalQuantifierExpression: "forall" Variable "in" Expression "holds" Expression .

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 112 (UniversalQuantifierExpression)]
    $default  reduce using rule 112 (UniversalQuantifierExpression)


State 247

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  111 ConditionalExpression: "if" Expression "then" Expression "else" Expression .

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 111 (ConditionalExpression)]
    $default  reduce using rule 111 (ConditionalExpression)


State 248

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  113 ExistentialQuantifierExpression: "exists" Variable "in" Expression "with" Expression .

    "+"       reduce using rule 75 (Term)
    "+"       [reduce using rule 113 (ExistentialQuantifierExpression)]
    $default  reduce using rule 113 (ExistentialQuantifierExpression)


State 249

   47 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 47 (ComposedType)


State 250

   50 Types: Types "," . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 159
    Type            go to state 259
    BasicType       go to state 161
    ComposedType    go to state 162
    FixedSizedType  go to state 163
    RangedType      go to state 164


State 251

   48 FixedSizedType: Identifier "<" Expression ">" .
   92 Expression: Expression ">" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 48 (FixedSizedType)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 147
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 252

   49 RangedType: Identifier "<" Expression ".." . Expression ">"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 260
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 253

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  137 LetRule: "let" Variable "=" Expression . "in" Rule

    "in"       shift, and go to state 261
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 254

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  138 ForallRule: "forall" Variable "in" Expression . "do" Rule

    "do"       shift, and go to state 262
    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 255

  129 ConditionalRule: "if" Expression "then" Rule .
  130                | "if" Expression "then" Rule . "else" Rule

    "else"  shift, and go to state 263

    $default  reduce using rule 129 (ConditionalRule)


State 256

  131 CaseRule: "case" Expression "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "default"      shift, and go to state 264
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "_"            shift, and go to state 265
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 266
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65
    CaseLabel                        go to state 267
    CaseLabels                       go to state 268


State 257

   12 MaybeDefined: "defined" . "{" Expression "}"

    "{"  shift, and go to state 269


State 258

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 270

    $default  reduce using rule 11 (MaybeInitially)

    MaybeInitially  go to state 271


State 259

   50 Types: Types "," Type .

    $default  reduce using rule 50 (Types)


State 260

   49 RangedType: Identifier "<" Expression ".." Expression . ">"
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "<"        shift, and go to state 103
    ">"        shift, and go to state 272
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 261

  137 LetRule: "let" Variable "=" Expression "in" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 273
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 262

  138 ForallRule: "forall" Variable "in" Expression "do" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 274
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 263

  130 ConditionalRule: "if" Expression "then" Rule "else" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 275
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 264

  132 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 276


State 265

  133 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 277


State 266

   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression
  134 CaseLabel: Expression . ":" Rule

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    ":"        shift, and go to state 278
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 267

  135 CaseLabels: CaseLabel . CaseLabels
  136           | CaseLabel .

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "default"      shift, and go to state 264
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "_"            shift, and go to state 265
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 136 (CaseLabels)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 266
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65
    CaseLabel                        go to state 267
    CaseLabels                       go to state 279


State 268

  131 CaseRule: "case" Expression "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 280


State 269

   12 MaybeDefined: "defined" "{" . Expression "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 281
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 270

   10 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 282


State 271

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 8 (FunctionDefinition)


State 272

   49 RangedType: Identifier "<" Expression ".." Expression ">" .
   92 Expression: Expression ">" . Expression

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 49 (RangedType)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 147
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 273

  137 LetRule: "let" Variable "=" Expression "in" Rule .

    $default  reduce using rule 137 (LetRule)


State 274

  138 ForallRule: "forall" Variable "in" Expression "do" Rule .

    $default  reduce using rule 138 (ForallRule)


State 275

  130 ConditionalRule: "if" Expression "then" Rule "else" Rule .

    $default  reduce using rule 130 (ConditionalRule)


State 276

  132 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 283
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 277

  133 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 284
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 278

  134 CaseLabel: Expression ":" . Rule

    "seq"         shift, and go to state 166
    "par"         shift, and go to state 167
    "skip"        shift, and go to state 168
    "let"         shift, and go to state 169
    "forall"      shift, and go to state 170
    "iterate"     shift, and go to state 171
    "call"        shift, and go to state 172
    "if"          shift, and go to state 173
    "case"        shift, and go to state 174
    "("           shift, and go to state 175
    "{"           shift, and go to state 176
    "{|"          shift, and go to state 177
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 178
    IndirectCallExpression  go to state 179
    Rule                    go to state 285
    SkipRule                go to state 181
    ConditionalRule         go to state 182
    CaseRule                go to state 183
    LetRule                 go to state 184
    ForallRule              go to state 185
    IterateRule             go to state 186
    BlockRule               go to state 187
    SequenceRule            go to state 188
    UpdateRule              go to state 189
    CallRule                go to state 190


State 279

  135 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 135 (CaseLabels)


State 280

  131 CaseRule: "case" Expression "of" "{" CaseLabels "}" .

    $default  reduce using rule 131 (CaseRule)


State 281

   12 MaybeDefined: "defined" "{" Expression . "}"
   75 Term: Expression .
   84 Expression: Expression . "-" Expression
   85           | Expression . "*" Expression
   86           | Expression . "/" Expression
   87           | Expression . "%" Expression
   88           | Expression . "^" Expression
   89           | Expression . "!=" Expression
   90           | Expression . "=" Expression
   91           | Expression . "<" Expression
   92           | Expression . ">" Expression
   93           | Expression . "<=" Expression
   94           | Expression . ">=" Expression
   95           | Expression . "or" Expression
   96           | Expression . "xor" Expression
   97           | Expression . "and" Expression
   98           | Expression . "implies" Expression

    "and"      shift, and go to state 97
    "or"       shift, and go to state 98
    "xor"      shift, and go to state 99
    "implies"  shift, and go to state 100
    "-"        shift, and go to state 101
    "="        shift, and go to state 102
    "}"        shift, and go to state 286
    "<"        shift, and go to state 103
    ">"        shift, and go to state 104
    "*"        shift, and go to state 105
    "/"        shift, and go to state 106
    "%"        shift, and go to state 107
    "^"        shift, and go to state 108
    "!="       shift, and go to state 110
    "<="       shift, and go to state 111
    ">="       shift, and go to state 112

    $default  reduce using rule 75 (Term)


State 282

   10 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 43
    Initializers                     go to state 44
    MaybeInitializers                go to state 287
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 283

  132 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 132 (CaseLabel)


State 284

  133 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 133 (CaseLabel)


State 285

  134 CaseLabel: Expression ":" Rule .

    $default  reduce using rule 134 (CaseLabel)


State 286

   12 MaybeDefined: "defined" "{" Expression "}" .

    $default  reduce using rule 12 (MaybeDefined)


State 287

   10 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 288


State 288

   10 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 10 (MaybeInitially)
