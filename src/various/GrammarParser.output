Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | TwoOrMoreArguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   35                        | Identifier

   36 IdentifierPath: DotSeparatedIdentifiers
   37               | "." DotSeparatedIdentifiers

   38 Variable: Identifier ":" Type
   39         | Identifier

   40 Parameters: Parameters "," Variable
   41           | Variable

   42 MaybeParameters: "(" Parameters ")"
   43                | %empty

   44 Type: BasicType
   45     | ComposedType
   46     | RelationType
   47     | FixedSizedType

   48 BasicType: IdentifierPath

   49 ComposedType: IdentifierPath "<" Types ">"

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   51 FixedSizedType: IdentifierPath "'" Term

   52 Types: Types "," Type
   53      | Type

   54 Atom: RuleReference
   55     | BitNumber
   56     | IntegerNumber
   57     | FloatingNumber
   58     | RationalNumber
   59     | String
   60     | Undefined
   61     | Boolean

   62 Undefined: "undef"

   63 Boolean: "true"
   64        | "false"

   65 String: "string"

   66 BitNumber: "binary"
   67          | "hexadecimal"

   68 IntegerNumber: "integer"

   69 FloatingNumber: "floating"

   70 RationalNumber: "rational"

   71 RuleReference: "@" IdentifierPath

   72 Term: DirectCallExpression
   73     | IndirectCallExpression
   74     | ConditionalExpression
   75     | UniversalQuantifierExpression
   76     | ExistentialQuantifierExpression
   77     | Expression
   78     | List
   79     | Range
   80     | Atom

   81 Expression: "(" Term ")"
   82           | "+" Term
   83           | "-" Term
   84           | Term "+" Term
   85           | Term "-" Term
   86           | Term "*" Term
   87           | Term "/" Term
   88           | Term "%" Term
   89           | Term "^" Term
   90           | Term "!=" Term
   91           | Term "=" Term
   92           | Term "<" Term
   93           | Term ">" Term
   94           | Term "<=" Term
   95           | Term ">=" Term
   96           | Term "or" Term
   97           | Term "xor" Term
   98           | Term "and" Term
   99           | Term "implies" Term
  100           | "not" Term

  101 Range: "[" Term ".." Term "]"

  102 List: "[" "]"
  103     | "[" Terms "]"

  104 Terms: Terms "," Term
  105      | Term

  106 Arguments: "(" Terms ")"
  107          | "(" ")"

  108 TwoOrMoreArguments: "(" Term "," Terms ")"

  109 DirectCallExpression: IdentifierPath
  110                     | IdentifierPath Arguments

  111 IndirectCallExpression: "(" "*" Term ")" Arguments

  112 ConditionalExpression: "if" Term "then" Term "else" Term

  113 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  114 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  115 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  116               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  117 Rule: SkipRule
  118     | ConditionalRule
  119     | CaseRule
  120     | LetRule
  121     | ForallRule
  122     | IterateRule
  123     | BlockRule
  124     | SequenceRule
  125     | UpdateRule
  126     | CallRule

  127 Rules: Rules Rule
  128      | Rule

  129 SkipRule: "skip"

  130 ConditionalRule: "if" Term "then" Rule
  131                | "if" Term "then" Rule "else" Rule

  132 CaseRule: "case" Term "of" "{" CaseLabels "}"

  133 CaseLabel: "default" ":" Rule
  134          | "_" ":" Rule
  135          | Term ":" Rule

  136 CaseLabels: CaseLabel CaseLabels
  137           | CaseLabel

  138 LetRule: "let" Variable "=" Term "in" Rule

  139 ForallRule: "forall" Variable "in" Term "do" Rule

  140 IterateRule: "iterate" Rule

  141 BlockRule: "{" Rules "}"
  142          | "par" Rules "endpar"

  143 SequenceRule: "{|" Rules "|}"
  144             | "seq" Rules "endseq"

  145 UpdateRule: DirectCallExpression ":=" Term

  146 CallRule: "call" DirectCallExpression
  147         | DirectCallExpression
  148         | "call" IndirectCallExpression
  149         | IndirectCallExpression

  150 Attribute: BasicAttribute
  151          | ExpressionAttribute

  152 Attributes: Attributes "," Attribute
  153           | Attribute

  154 BasicAttribute: Identifier

  155 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"derived" (260) 29
"enum" (261) 30
"rule" (262) 115 116
"function" (263) 10
"initially" (264) 12
"defined" (265) 14
"seq" (266) 144
"endseq" (267) 144
"par" (268) 142
"endpar" (269) 142
"skip" (270) 129
"let" (271) 138
"in" (272) 113 114 138 139
"forall" (273) 113 139
"iterate" (274) 140
"do" (275) 139
"call" (276) 146 148
"if" (277) 112 130 131
"then" (278) 112 130 131
"else" (279) 112 131
"case" (280) 132
"of" (281) 132
"default" (282) 133
"holds" (283) 113
"exists" (284) 114
"with" (285) 114
"undef" (286) 62
"false" (287) 64
"true" (288) 63
"and" (289) 98
"or" (290) 96
"xor" (291) 97
"implies" (292) 99
"not" (293) 100
"+" (294) 82 84
"-" (295) 83 85
"=" (296) 29 30 91 115 116 138
"(" (297) 42 81 106 107 108 111
")" (298) 42 81 106 107 108 111
"[" (299) 6 101 102 103
"]" (300) 6 101 102 103
"{" (301) 12 14 21 30 132 141
"}" (302) 12 14 21 30 132 141
":" (303) 10 38 133 134 135
"_" (304) 134
"@" (305) 71
"," (306) 25 32 40 52 104 108 152
"<" (307) 49 50 92
">" (308) 49 50 93
"*" (309) 16 86 111
"/" (310) 87
"%" (311) 88
"^" (312) 89
"'" (313) 51
".." (314) 101
"." (315) 34 37
"->" (316) 10 23 24 29 50 116
":=" (317) 145
"!=" (318) 90
"<=" (319) 94
">=" (320) 95
"{|" (321) 143
"|}" (322) 143
"binary" (323) 66
"hexadecimal" (324) 67
"integer" (325) 68
"rational" (326) 70
"floating" (327) 69
"string" (328) 65
"identifier" (329) 31
ABSOLUTE_PATH (330)
UPLUS (331)
UMINUS (332)
CALL_WITHOUT_ARGS (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
Specification (80)
    on left: 1, on right: 0
Definition (81)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (82)
    on left: 6 7, on right: 8 9
Definitions (83)
    on left: 8 9, on right: 1 8
FunctionDefinition (84)
    on left: 10 11, on right: 2
MaybeInitially (85)
    on left: 12 13, on right: 10
MaybeDefined (86)
    on left: 14 15, on right: 10
FunctionParameters (87)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (88)
    on left: 18 19, on right: 10 50
ProgramFunctionDefinition (89)
    on left: 20 21, on right: 11
Initializer (90)
    on left: 22 23 24, on right: 25 26
Initializers (91)
    on left: 25 26, on right: 25 27
MaybeInitializers (92)
    on left: 27 28, on right: 12 21
DerivedDefinition (93)
    on left: 29, on right: 3
EnumerationDefinition (94)
    on left: 30, on right: 5
Identifier (95)
    on left: 31, on right: 10 29 30 32 33 34 35 38 39 115 116 154 155
Identifiers (96)
    on left: 32 33, on right: 30 32
DotSeparatedIdentifiers (97)
    on left: 34 35, on right: 34 36 37
IdentifierPath (98)
    on left: 36 37, on right: 20 48 49 50 51 71 109 110
Variable (99)
    on left: 38 39, on right: 40 41 113 114 138 139
Parameters (100)
    on left: 40 41, on right: 40 42
MaybeParameters (101)
    on left: 42 43, on right: 29 115 116
Type (102)
    on left: 44 45 46 47, on right: 10 16 17 29 38 50 52 53 116
BasicType (103)
    on left: 48, on right: 44
ComposedType (104)
    on left: 49, on right: 45
RelationType (105)
    on left: 50, on right: 46
FixedSizedType (106)
    on left: 51, on right: 47
Types (107)
    on left: 52 53, on right: 49 52
Atom (108)
    on left: 54 55 56 57 58 59 60 61, on right: 80
Undefined (109)
    on left: 62, on right: 60
Boolean (110)
    on left: 63 64, on right: 61
String (111)
    on left: 65, on right: 59
BitNumber (112)
    on left: 66 67, on right: 55
IntegerNumber (113)
    on left: 68, on right: 56
FloatingNumber (114)
    on left: 69, on right: 57
RationalNumber (115)
    on left: 70, on right: 58
RuleReference (116)
    on left: 71, on right: 54
Term (117)
    on left: 72 73 74 75 76 77 78 79 80, on right: 14 22 23 24 29 51
    81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    104 105 108 111 112 113 114 130 131 132 135 138 139 145 155
Expression (118)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100, on right: 77
Range (119)
    on left: 101, on right: 79
List (120)
    on left: 102 103, on right: 78
Terms (121)
    on left: 104 105, on right: 103 104 106 108
Arguments (122)
    on left: 106 107, on right: 110 111
TwoOrMoreArguments (123)
    on left: 108, on right: 24
DirectCallExpression (124)
    on left: 109 110, on right: 72 145 146 147
IndirectCallExpression (125)
    on left: 111, on right: 73 148 149
ConditionalExpression (126)
    on left: 112, on right: 74
UniversalQuantifierExpression (127)
    on left: 113, on right: 75
ExistentialQuantifierExpression (128)
    on left: 114, on right: 76
RuleDefinition (129)
    on left: 115 116, on right: 4
Rule (130)
    on left: 117 118 119 120 121 122 123 124 125 126, on right: 115
    116 127 128 130 131 133 134 135 138 139 140
Rules (131)
    on left: 127 128, on right: 127 141 142 143 144
SkipRule (132)
    on left: 129, on right: 117
ConditionalRule (133)
    on left: 130 131, on right: 118
CaseRule (134)
    on left: 132, on right: 119
CaseLabel (135)
    on left: 133 134 135, on right: 136 137
CaseLabels (136)
    on left: 136 137, on right: 132 136
LetRule (137)
    on left: 138, on right: 120
ForallRule (138)
    on left: 139, on right: 121
IterateRule (139)
    on left: 140, on right: 122
BlockRule (140)
    on left: 141 142, on right: 123
SequenceRule (141)
    on left: 143 144, on right: 124
UpdateRule (142)
    on left: 145, on right: 125
CallRule (143)
    on left: 146 147 148 149, on right: 126
Attribute (144)
    on left: 150 151, on right: 152 153
Attributes (145)
    on left: 152 153, on right: 6 152
BasicAttribute (146)
    on left: 154, on right: 150
ExpressionAttribute (147)
    on left: 155, on right: 151


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 23


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 24


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier  go to state 25


State 6

  115 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  116               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 26


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 20

    Identifier  go to state 27


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 29
    Attributes           go to state 30
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 33
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 54
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 19

   37 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 75


State 20

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 21

   35 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 22

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   36 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 76

    $default  reduce using rule 36 (IdentifierPath)


State 23

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 24

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 78


State 25

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 79


State 26

  115 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  116               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 80


State 27

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 81


State 28

  154 BasicAttribute: Identifier .
  155 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 154 (BasicAttribute)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 83
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 29

  153 Attributes: Attribute .

    $default  reduce using rule 153 (Attributes)


State 30

    6 AttributedDefinition: "[" Attributes . "]" Definition
  152 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 84
    ","  shift, and go to state 85


State 31

  150 Attribute: BasicAttribute .

    $default  reduce using rule 150 (Attribute)


State 32

  151 Attribute: ExpressionAttribute .

    $default  reduce using rule 151 (Attribute)


State 33

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 34

  113 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 87


State 35

  112 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 88
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 36

  114 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 89


State 37

   62 Undefined: "undef" .

    $default  reduce using rule 62 (Undefined)


State 38

   64 Boolean: "false" .

    $default  reduce using rule 64 (Boolean)


State 39

   63 Boolean: "true" .

    $default  reduce using rule 63 (Boolean)


State 40

  100 Expression: "not" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 90
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 41

   82 Expression: "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 91
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 42

   83 Expression: "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 92
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 43

   81 Expression: "(" . Term ")"
  108 TwoOrMoreArguments: "(" . Term "," Terms ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 94
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 44

  101 Range: "[" . Term ".." Term "]"
  102 List: "[" . "]"
  103     | "[" . Terms "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "]"            shift, and go to state 95
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 96
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 97
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 45

   71 RuleReference: "@" . IdentifierPath

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 98


State 46

   66 BitNumber: "binary" .

    $default  reduce using rule 66 (BitNumber)


State 47

   67 BitNumber: "hexadecimal" .

    $default  reduce using rule 67 (BitNumber)


State 48

   68 IntegerNumber: "integer" .

    $default  reduce using rule 68 (IntegerNumber)


State 49

   70 RationalNumber: "rational" .

    $default  reduce using rule 70 (RationalNumber)


State 50

   69 FloatingNumber: "floating" .

    $default  reduce using rule 69 (FloatingNumber)


State 51

   65 String: "string" .

    $default  reduce using rule 65 (String)


State 52

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 53

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 99

    $default  reduce using rule 27 (MaybeInitializers)


State 54

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 100


State 55

  109 DirectCallExpression: IdentifierPath .
  110                     | IdentifierPath . Arguments

    "("  shift, and go to state 101

    $default  reduce using rule 109 (DirectCallExpression)

    Arguments  go to state 102


State 56

   80 Term: Atom .

    $default  reduce using rule 80 (Term)


State 57

   60 Atom: Undefined .

    $default  reduce using rule 60 (Atom)


State 58

   61 Atom: Boolean .

    $default  reduce using rule 61 (Atom)


State 59

   59 Atom: String .

    $default  reduce using rule 59 (Atom)


State 60

   55 Atom: BitNumber .

    $default  reduce using rule 55 (Atom)


State 61

   56 Atom: IntegerNumber .

    $default  reduce using rule 56 (Atom)


State 62

   57 Atom: FloatingNumber .

    $default  reduce using rule 57 (Atom)


State 63

   58 Atom: RationalNumber .

    $default  reduce using rule 58 (Atom)


State 64

   54 Atom: RuleReference .

    $default  reduce using rule 54 (Atom)


State 65

   22 Initializer: Term .
   23            | Term . "->" Term
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "->"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 22 (Initializer)


State 66

   77 Term: Expression .

    $default  reduce using rule 77 (Term)


State 67

   79 Term: Range .

    $default  reduce using rule 79 (Term)


State 68

   78 Term: List .

    $default  reduce using rule 78 (Term)


State 69

   24 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 120


State 70

   72 Term: DirectCallExpression .

    $default  reduce using rule 72 (Term)


State 71

   73 Term: IndirectCallExpression .

    $default  reduce using rule 73 (Term)


State 72

   74 Term: ConditionalExpression .

    $default  reduce using rule 74 (Term)


State 73

   75 Term: UniversalQuantifierExpression .

    $default  reduce using rule 75 (Term)


State 74

   76 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 76 (Term)


State 75

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 37 (IdentifierPath)


State 76

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 121


State 77

   42 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 122
    Parameters  go to state 123


State 78

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 124


State 79

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 125


State 80

  115 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  116               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 126
    "->"  shift, and go to state 127


State 81

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 128
    MaybeFunctionParameters  go to state 129
    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 131
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 82

   81 Expression: "(" . Term ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 136
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 83

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  155 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 155 (ExpressionAttribute)


State 84

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 137
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 85

  152 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 138
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 86

   38 Variable: Identifier . ":" Type
   39         | Identifier .

    ":"  shift, and go to state 139

    $default  reduce using rule 39 (Variable)


State 87

  113 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 140


State 88

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  112 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 141
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 89

  114 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 142


State 90

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  100           | "not" Term .

    $default  reduce using rule 100 (Expression)


State 91

   82 Expression: "+" Term .
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    $default  reduce using rule 82 (Expression)


State 92

   83 Expression: "-" Term .
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    $default  reduce using rule 83 (Expression)


State 93

  111 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 143
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 94

   81 Expression: "(" Term . ")"
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  108 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 144
    ","        shift, and go to state 145
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 95

  102 List: "[" "]" .

    $default  reduce using rule 102 (List)


State 96

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  101 Range: "[" Term . ".." Term "]"
  105 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    ".."       shift, and go to state 146
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 105 (Terms)


State 97

  103 List: "[" Terms . "]"
  104 Terms: Terms . "," Term

    "]"  shift, and go to state 147
    ","  shift, and go to state 148


State 98

   71 RuleReference: "@" IdentifierPath .

    $default  reduce using rule 71 (RuleReference)


State 99

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Initializer                      go to state 149
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 100

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 101

  106 Arguments: "(" . Terms ")"
  107          | "(" . ")"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    ")"            shift, and go to state 150
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 151
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 152
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 102

  110 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 110 (DirectCallExpression)


State 103

   98 Expression: Term "and" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 153
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 104

   96 Expression: Term "or" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 154
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 105

   97 Expression: Term "xor" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 155
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 106

   99 Expression: Term "implies" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 156
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 107

   84 Expression: Term "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 157
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 108

   85 Expression: Term "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 158
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 109

   91 Expression: Term "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 159
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 110

   92 Expression: Term "<" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 160
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 111

   93 Expression: Term ">" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 161
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 112

   86 Expression: Term "*" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 162
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 113

   87 Expression: Term "/" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 163
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 114

   88 Expression: Term "%" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 164
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 115

   89 Expression: Term "^" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 165
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 116

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 166
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 117

   90 Expression: Term "!=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 167
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 118

   94 Expression: Term "<=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 168
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 119

   95 Expression: Term ">=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 169
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 120

   24 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 170
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 121

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 34 (DotSeparatedIdentifiers)


State 122

   41 Parameters: Variable .

    $default  reduce using rule 41 (Parameters)


State 123

   40 Parameters: Parameters . "," Variable
   42 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 171
    ","  shift, and go to state 172


State 124

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 173
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 125

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier   go to state 174
    Identifiers  go to state 175


State 126

  115 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 190
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 127

  116 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 201
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 128

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 202

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 129

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 203


State 130

   48 BasicType: IdentifierPath .
   49 ComposedType: IdentifierPath . "<" Types ">"
   50 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   51 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 204
    "'"  shift, and go to state 205

    $default  reduce using rule 48 (BasicType)


State 131

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 132

   44 Type: BasicType .

    $default  reduce using rule 44 (Type)


State 133

   45 Type: ComposedType .

    $default  reduce using rule 45 (Type)


State 134

   46 Type: RelationType .

    $default  reduce using rule 46 (Type)


State 135

   47 Type: FixedSizedType .

    $default  reduce using rule 47 (Type)


State 136

   81 Expression: "(" Term . ")"
   84           | Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 144
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 137

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 138

  152 Attributes: Attributes "," Attribute .

    $default  reduce using rule 152 (Attributes)


State 139

   38 Variable: Identifier ":" . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 206
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 140

  113 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 207
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 141

  112 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 208
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 142

  114 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 209
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 143

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  111 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 210
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 144

   81 Expression: "(" Term ")" .

    $default  reduce using rule 81 (Expression)


State 145

  108 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 151
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 211
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 146

  101 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 212
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 147

  103 List: "[" Terms "]" .

    $default  reduce using rule 103 (List)


State 148

  104 Terms: Terms "," . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 213
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 149

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 150

  107 Arguments: "(" ")" .

    $default  reduce using rule 107 (Arguments)


State 151

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  105 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 105 (Terms)


State 152

  104 Terms: Terms . "," Term
  106 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 214
    ","  shift, and go to state 148


State 153

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   98           | Term "and" Term .
   99           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "="   shift, and go to state 109
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "!="  shift, and go to state 117
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 98 (Expression)


State 154

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   96           | Term "or" Term .
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"  shift, and go to state 103
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 96 (Expression)


State 155

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   97           | Term "xor" Term .
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"  shift, and go to state 103
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 97 (Expression)


State 156

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
   99           | Term "implies" Term .

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 99 (Expression)


State 157

   84 Expression: Term . "+" Term
   84           | Term "+" Term .
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 84 (Expression)


State 158

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   85           | Term "-" Term .
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 85 (Expression)


State 159

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   91           | Term "=" Term .
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 91 (Expression)


State 160

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   92           | Term "<" Term .
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 92 (Expression)


State 161

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   93           | Term ">" Term .
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 93 (Expression)


State 162

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   86           | Term "*" Term .
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 86 (Expression)


State 163

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   87           | Term "/" Term .
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 87 (Expression)


State 164

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   88           | Term "%" Term .
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 88 (Expression)


State 165

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   89           | Term "^" Term .
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    $default  reduce using rule 89 (Expression)


State 166

   23 Initializer: Term "->" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 23 (Initializer)


State 167

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   90           | Term "!=" Term .
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 90 (Expression)


State 168

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   94           | Term "<=" Term .
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 94 (Expression)


State 169

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   95           | Term ">=" Term .
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 95 (Expression)


State 170

   24 Initializer: TwoOrMoreArguments "->" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 24 (Initializer)


State 171

   42 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 42 (MaybeParameters)


State 172

   40 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 215


State 173

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 216


State 174

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 175

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 217
    ","  shift, and go to state 218


State 176

  144 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 219
    Rules                    go to state 220
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 177

  142 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 219
    Rules                    go to state 221
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 178

  129 SkipRule: "skip" .

    $default  reduce using rule 129 (SkipRule)


State 179

  138 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 222


State 180

  139 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 223


State 181

  140 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 224
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 182

  146 CallRule: "call" . DirectCallExpression
  148         | "call" . IndirectCallExpression

    "("           shift, and go to state 185
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 225
    IndirectCallExpression   go to state 226


State 183

  130 ConditionalRule: "if" . Term "then" Rule
  131                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 227
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 184

  132 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 228
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 185

  111 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 93


State 186

  141 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 219
    Rules                    go to state 229
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 187

  143 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 219
    Rules                    go to state 230
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 188

  145 UpdateRule: DirectCallExpression . ":=" Term
  147 CallRule: DirectCallExpression .

    ":="  shift, and go to state 231

    $default  reduce using rule 147 (CallRule)


State 189

  149 CallRule: IndirectCallExpression .

    $default  reduce using rule 149 (CallRule)


State 190

  115 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 115 (RuleDefinition)


State 191

  117 Rule: SkipRule .

    $default  reduce using rule 117 (Rule)


State 192

  118 Rule: ConditionalRule .

    $default  reduce using rule 118 (Rule)


State 193

  119 Rule: CaseRule .

    $default  reduce using rule 119 (Rule)


State 194

  120 Rule: LetRule .

    $default  reduce using rule 120 (Rule)


State 195

  121 Rule: ForallRule .

    $default  reduce using rule 121 (Rule)


State 196

  122 Rule: IterateRule .

    $default  reduce using rule 122 (Rule)


State 197

  123 Rule: BlockRule .

    $default  reduce using rule 123 (Rule)


State 198

  124 Rule: SequenceRule .

    $default  reduce using rule 124 (Rule)


State 199

  125 Rule: UpdateRule .

    $default  reduce using rule 125 (Rule)


State 200

  126 Rule: CallRule .

    $default  reduce using rule 126 (Rule)


State 201

  116 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 232


State 202

   16 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 233
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 203

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 234
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 204

   49 ComposedType: IdentifierPath "<" . Types ">"
   50 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 128
    MaybeFunctionParameters  go to state 235
    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 236
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135
    Types                    go to state 237


State 205

   51 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 238
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 206

   38 Variable: Identifier ":" Type .

    $default  reduce using rule 38 (Variable)


State 207

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  113 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 239
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 208

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  112 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 240
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 209

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  114 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 241
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 210

  111 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 101

    Arguments  go to state 242


State 211

  104 Terms: Terms . "," Term
  108 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 243
    ","  shift, and go to state 148


State 212

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  101 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "]"        shift, and go to state 244
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 213

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  104 Terms: Terms "," Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 104 (Terms)


State 214

  106 Arguments: "(" Terms ")" .

    $default  reduce using rule 106 (Arguments)


State 215

   40 Parameters: Parameters "," Variable .

    $default  reduce using rule 40 (Parameters)


State 216

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 245
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 217

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 218

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 246


State 219

  128 Rules: Rule .

    $default  reduce using rule 128 (Rules)


State 220

  127 Rules: Rules . Rule
  144 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 176
    "endseq"      shift, and go to state 247
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 248
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 221

  127 Rules: Rules . Rule
  142 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "endpar"      shift, and go to state 249
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 248
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 222

  138 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 250


State 223

  139 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 251


State 224

  140 IterateRule: "iterate" Rule .

    $default  reduce using rule 140 (IterateRule)


State 225

  146 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 146 (CallRule)


State 226

  148 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 148 (CallRule)


State 227

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  130 ConditionalRule: "if" Term . "then" Rule
  131                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 252
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 228

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  132 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 253
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 229

  127 Rules: Rules . Rule
  141 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "}"           shift, and go to state 254
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 248
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 230

  127 Rules: Rules . Rule
  143 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "|}"          shift, and go to state 255
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 248
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 231

  145 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 256
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 232

  116 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 257
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 233

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 234

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 258

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 259


State 235

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 260


State 236

   17 FunctionParameters: Type .
   53 Types: Type .

    ","       reduce using rule 53 (Types)
    ">"       reduce using rule 53 (Types)
    $default  reduce using rule 17 (FunctionParameters)


State 237

   49 ComposedType: IdentifierPath "<" Types . ">"
   52 Types: Types . "," Type

    ","  shift, and go to state 261
    ">"  shift, and go to state 262


State 238

   51 FixedSizedType: IdentifierPath "'" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "<"        shift, and go to state 110
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 51 (FixedSizedType)


State 239

  113 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 263
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 240

  112 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 264
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 241

  114 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 265
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 242

  111 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 111 (IndirectCallExpression)


State 243

  108 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 108 (TwoOrMoreArguments)


State 244

  101 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 101 (Range)


State 245

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 29 (DerivedDefinition)


State 246

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 247

  144 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 144 (SequenceRule)


State 248

  127 Rules: Rules Rule .

    $default  reduce using rule 127 (Rules)


State 249

  142 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 142 (BlockRule)


State 250

  138 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 266
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 251

  139 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 267
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 252

  130 ConditionalRule: "if" Term "then" . Rule
  131                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 268
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 253

  132 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 269


State 254

  141 BlockRule: "{" Rules "}" .

    $default  reduce using rule 141 (BlockRule)


State 255

  143 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 143 (SequenceRule)


State 256

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  145 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 145 (UpdateRule)


State 257

  116 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 116 (RuleDefinition)


State 258

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 270


State 259

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 271

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 272


State 260

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 273
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 261

   52 Types: Types "," . Type

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 130
    Type                     go to state 274
    BasicType                go to state 132
    ComposedType             go to state 133
    RelationType             go to state 134
    FixedSizedType           go to state 135


State 262

   49 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 49 (ComposedType)


State 263

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  113 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 113 (UniversalQuantifierExpression)


State 264

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  112 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 112 (ConditionalExpression)


State 265

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  114 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 114 (ExistentialQuantifierExpression)


State 266

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  138 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 275
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 267

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  139 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 276
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 268

  130 ConditionalRule: "if" Term "then" Rule .
  131                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 277

    $default  reduce using rule 130 (ConditionalRule)


State 269

  132 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 278
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 279
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 280
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 281
    CaseLabels                       go to state 282


State 270

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 283
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 271

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 284


State 272

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 273

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 285


State 274

   52 Types: Types "," Type .

    $default  reduce using rule 52 (Types)


State 275

  138 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 286
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 276

  139 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 287
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 277

  131 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 288
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 278

  133 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 289


State 279

  134 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 290


State 280

   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term
  135 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ":"        shift, and go to state 291
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 281

  136 CaseLabels: CaseLabel . CaseLabels
  137           | CaseLabel .

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 278
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 279
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 137 (CaseLabels)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 280
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 281
    CaseLabels                       go to state 292


State 282

  132 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 293


State 283

   14 MaybeDefined: "defined" "{" Term . "}"
   84 Expression: Term . "+" Term
   85           | Term . "-" Term
   86           | Term . "*" Term
   87           | Term . "/" Term
   88           | Term . "%" Term
   89           | Term . "^" Term
   90           | Term . "!=" Term
   91           | Term . "=" Term
   92           | Term . "<" Term
   93           | Term . ">" Term
   94           | Term . "<=" Term
   95           | Term . ">=" Term
   96           | Term . "or" Term
   97           | Term . "xor" Term
   98           | Term . "and" Term
   99           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "}"        shift, and go to state 294
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 284

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 295
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 285

   50 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 50 (RelationType)


State 286

  138 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 138 (LetRule)


State 287

  139 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 139 (ForallRule)


State 288

  131 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 131 (ConditionalRule)


State 289

  133 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 296
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 290

  134 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 297
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 291

  135 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "."           shift, and go to state 19
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 188
    IndirectCallExpression   go to state 189
    Rule                     go to state 298
    SkipRule                 go to state 191
    ConditionalRule          go to state 192
    CaseRule                 go to state 193
    LetRule                  go to state 194
    ForallRule               go to state 195
    IterateRule              go to state 196
    BlockRule                go to state 197
    SequenceRule             go to state 198
    UpdateRule               go to state 199
    CallRule                 go to state 200


State 292

  136 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 136 (CaseLabels)


State 293

  132 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 132 (CaseRule)


State 294

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 295

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 299


State 296

  133 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 133 (CaseLabel)


State 297

  134 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 134 (CaseLabel)


State 298

  135 CaseLabel: Term ":" Rule .

    $default  reduce using rule 135 (CaseLabel)


State 299

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
