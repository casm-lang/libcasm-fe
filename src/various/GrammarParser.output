State 52 conflicts: 1 shift/reduce
State 255 conflicts: 1 shift/reduce
State 279 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | TwoOrMoreArguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 Variable: Identifier ":" Type
   35         | Identifier

   36 Parameters: Parameters "," Variable
   37           | Variable

   38 MaybeParameters: "(" Parameters ")"
   39                | %empty

   40 Type: BasicType
   41     | ComposedType
   42     | FixedSizedType
   43     | RangedType

   44 BasicType: Identifier

   45 ComposedType: Identifier "(" Types ")"

   46 FixedSizedType: Identifier "<" Term ">"

   47 RangedType: Identifier "<" Term ".." Term ">"

   48 Types: Types "," Type
   49      | Type

   50 Atom: RuleReference
   51     | BitNumber
   52     | IntegerNumber
   53     | FloatingNumber
   54     | RationalNumber
   55     | String
   56     | Undefined
   57     | Boolean

   58 Undefined: "undef"

   59 Boolean: "true"
   60        | "false"

   61 String: "string"

   62 BitNumber: "binary"
   63          | "hexadecimal"

   64 IntegerNumber: "integer"

   65 FloatingNumber: "floating"

   66 RationalNumber: "rational"

   67 RuleReference: "@" "identifier"

   68 Term: DirectCallExpression
   69     | IndirectCallExpression
   70     | ConditionalExpression
   71     | UniversalQuantifierExpression
   72     | ExistentialQuantifierExpression
   73     | Expression
   74     | List
   75     | Range
   76     | Atom

   77 Expression: "(" Term ")"
   78           | "+" Term
   79           | "-" Term
   80           | Term "+" Term
   81           | Term "-" Term
   82           | Term "*" Term
   83           | Term "/" Term
   84           | Term "%" Term
   85           | Term "^" Term
   86           | Term "!=" Term
   87           | Term "=" Term
   88           | Term "<" Term
   89           | Term ">" Term
   90           | Term "<=" Term
   91           | Term ">=" Term
   92           | Term "or" Term
   93           | Term "xor" Term
   94           | Term "and" Term
   95           | Term "implies" Term
   96           | "not" Term

   97 Range: "[" Term ".." Term "]"

   98 List: "[" "]"
   99     | "[" Terms "]"

  100 Terms: Terms "," Term
  101      | Term

  102 Arguments: "(" Terms ")"
  103          | "(" ")"

  104 TwoOrMoreArguments: "(" Term "," Terms ")"

  105 DirectCallExpression: Identifier
  106                     | Identifier Arguments

  107 IndirectCallExpression: "(" "*" Term ")" Arguments

  108 ConditionalExpression: "if" Term "then" Term "else" Term

  109 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  110 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  111 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  112               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  113 Rule: SkipRule
  114     | ConditionalRule
  115     | CaseRule
  116     | LetRule
  117     | ForallRule
  118     | IterateRule
  119     | BlockRule
  120     | SequenceRule
  121     | UpdateRule
  122     | CallRule

  123 Rules: Rules Rule
  124      | Rule

  125 SkipRule: "skip"

  126 ConditionalRule: "if" Term "then" Rule
  127                | "if" Term "then" Rule "else" Rule

  128 CaseRule: "case" Term "of" "{" CaseLabels "}"

  129 CaseLabel: "default" ":" Rule
  130          | "_" ":" Rule
  131          | Term ":" Rule

  132 CaseLabels: CaseLabel CaseLabels
  133           | CaseLabel

  134 LetRule: "let" Variable "=" Term "in" Rule

  135 ForallRule: "forall" Variable "in" Term "do" Rule

  136 IterateRule: "iterate" Rule

  137 BlockRule: "{" Rules "}"
  138          | "par" Rules "endpar"

  139 SequenceRule: "{|" Rules "|}"
  140             | "seq" Rules "endseq"

  141 UpdateRule: DirectCallExpression ":=" Term

  142 CallRule: "call" DirectCallExpression
  143         | DirectCallExpression
  144         | "call" IndirectCallExpression
  145         | IndirectCallExpression

  146 Attribute: BasicAttribute
  147          | ExpressionAttribute

  148 Attributes: Attributes "," Attribute
  149           | Attribute

  150 BasicAttribute: Identifier

  151 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"derived" (260) 29
"enum" (261) 30
"rule" (262) 111 112
"function" (263) 10
"initially" (264) 12
"defined" (265) 14
"seq" (266) 140
"endseq" (267) 140
"par" (268) 138
"endpar" (269) 138
"skip" (270) 125
"let" (271) 134
"in" (272) 109 110 134 135
"forall" (273) 109 135
"iterate" (274) 136
"do" (275) 135
"call" (276) 142 144
"if" (277) 108 126 127
"then" (278) 108 126 127
"else" (279) 108 127
"case" (280) 128
"of" (281) 128
"default" (282) 129
"holds" (283) 109
"exists" (284) 110
"with" (285) 110
"undef" (286) 58
"false" (287) 60
"true" (288) 59
"and" (289) 94
"or" (290) 92
"xor" (291) 93
"implies" (292) 95
"not" (293) 96
"+" (294) 78 80
"-" (295) 79 81
"=" (296) 29 30 87 111 112 134
"(" (297) 38 45 77 102 103 104 107
")" (298) 38 45 77 102 103 104 107
"[" (299) 6 97 98 99
"]" (300) 6 97 98 99
"{" (301) 12 14 21 30 128 137
"}" (302) 12 14 21 30 128 137
":" (303) 10 34 129 130 131
"_" (304) 130
"@" (305) 67
"," (306) 25 32 36 48 100 104 148
"<" (307) 46 47 88
">" (308) 46 47 89
"*" (309) 16 82 107
"/" (310) 83
"%" (311) 84
"^" (312) 85
".." (313) 47 97
"->" (314) 10 23 24 29 112
":=" (315) 141
"!=" (316) 86
"<=" (317) 90
">=" (318) 91
"{|" (319) 139
"|}" (320) 139
"binary" (321) 62
"hexadecimal" (322) 63
"integer" (323) 64
"rational" (324) 66
"floating" (325) 65
"string" (326) 61
"identifier" (327) 31 67
UPLUS (328)
UMINUS (329)


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
Specification (76)
    on left: 1, on right: 0
Definition (77)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (78)
    on left: 6 7, on right: 8 9
Definitions (79)
    on left: 8 9, on right: 1 8
FunctionDefinition (80)
    on left: 10 11, on right: 2
MaybeInitially (81)
    on left: 12 13, on right: 10
MaybeDefined (82)
    on left: 14 15, on right: 10
FunctionParameters (83)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (84)
    on left: 18 19, on right: 10
ProgramFunctionDefinition (85)
    on left: 20 21, on right: 11
Initializer (86)
    on left: 22 23 24, on right: 25 26
Initializers (87)
    on left: 25 26, on right: 25 27
MaybeInitializers (88)
    on left: 27 28, on right: 12 21
DerivedDefinition (89)
    on left: 29, on right: 3
EnumerationDefinition (90)
    on left: 30, on right: 5
Identifier (91)
    on left: 31, on right: 10 20 29 30 32 33 34 35 44 45 46 47 105
    106 111 112 150 151
Identifiers (92)
    on left: 32 33, on right: 30 32
Variable (93)
    on left: 34 35, on right: 36 37 109 110 134 135
Parameters (94)
    on left: 36 37, on right: 36 38
MaybeParameters (95)
    on left: 38 39, on right: 29 111 112
Type (96)
    on left: 40 41 42 43, on right: 10 16 17 29 34 48 49 112
BasicType (97)
    on left: 44, on right: 40
ComposedType (98)
    on left: 45, on right: 41
FixedSizedType (99)
    on left: 46, on right: 42
RangedType (100)
    on left: 47, on right: 43
Types (101)
    on left: 48 49, on right: 45 48
Atom (102)
    on left: 50 51 52 53 54 55 56 57, on right: 76
Undefined (103)
    on left: 58, on right: 56
Boolean (104)
    on left: 59 60, on right: 57
String (105)
    on left: 61, on right: 55
BitNumber (106)
    on left: 62 63, on right: 51
IntegerNumber (107)
    on left: 64, on right: 52
FloatingNumber (108)
    on left: 65, on right: 53
RationalNumber (109)
    on left: 66, on right: 54
RuleReference (110)
    on left: 67, on right: 50
Term (111)
    on left: 68 69 70 71 72 73 74 75 76, on right: 14 22 23 24 29 46
    47 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 100 101 104 107 108 109 110 126 127 128 131 134 135 141 151
Expression (112)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96, on right: 73
Range (113)
    on left: 97, on right: 75
List (114)
    on left: 98 99, on right: 74
Terms (115)
    on left: 100 101, on right: 99 100 102 104
Arguments (116)
    on left: 102 103, on right: 106 107
TwoOrMoreArguments (117)
    on left: 104, on right: 24
DirectCallExpression (118)
    on left: 105 106, on right: 68 141 142 143
IndirectCallExpression (119)
    on left: 107, on right: 69 144 145
ConditionalExpression (120)
    on left: 108, on right: 70
UniversalQuantifierExpression (121)
    on left: 109, on right: 71
ExistentialQuantifierExpression (122)
    on left: 110, on right: 72
RuleDefinition (123)
    on left: 111 112, on right: 4
Rule (124)
    on left: 113 114 115 116 117 118 119 120 121 122, on right: 111
    112 123 124 126 127 129 130 131 134 135 136
Rules (125)
    on left: 123 124, on right: 123 137 138 139 140
SkipRule (126)
    on left: 125, on right: 113
ConditionalRule (127)
    on left: 126 127, on right: 114
CaseRule (128)
    on left: 128, on right: 115
CaseLabel (129)
    on left: 129 130 131, on right: 132 133
CaseLabels (130)
    on left: 132 133, on right: 128 132
LetRule (131)
    on left: 134, on right: 116
ForallRule (132)
    on left: 135, on right: 117
IterateRule (133)
    on left: 136, on right: 118
BlockRule (134)
    on left: 137 138, on right: 119
SequenceRule (135)
    on left: 139 140, on right: 120
UpdateRule (136)
    on left: 141, on right: 121
CallRule (137)
    on left: 142 143 144 145, on right: 122
Attribute (138)
    on left: 146 147, on right: 148 149
Attributes (139)
    on left: 148 149, on right: 6 148
BasicAttribute (140)
    on left: 150, on right: 146
ExpressionAttribute (141)
    on left: 151, on right: 147


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "identifier"  shift, and go to state 19

    Identifier  go to state 20


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 21


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier  go to state 22


State 6

  111 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  112               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 23


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier  go to state 24


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 26
    Attributes           go to state 27
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 30
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 51
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 19

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 20

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 21

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 73


State 22

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 74


State 23

  111 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  112               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 75


State 24

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 76


State 25

  150 BasicAttribute: Identifier .
  151 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 150 (BasicAttribute)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 78
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 26

  149 Attributes: Attribute .

    $default  reduce using rule 149 (Attributes)


State 27

    6 AttributedDefinition: "[" Attributes . "]" Definition
  148 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 28

  146 Attribute: BasicAttribute .

    $default  reduce using rule 146 (Attribute)


State 29

  147 Attribute: ExpressionAttribute .

    $default  reduce using rule 147 (Attribute)


State 30

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 31

  109 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 82


State 32

  108 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 83
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 33

  110 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 84


State 34

   58 Undefined: "undef" .

    $default  reduce using rule 58 (Undefined)


State 35

   60 Boolean: "false" .

    $default  reduce using rule 60 (Boolean)


State 36

   59 Boolean: "true" .

    $default  reduce using rule 59 (Boolean)


State 37

   96 Expression: "not" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 85
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 38

   78 Expression: "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 86
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 39

   79 Expression: "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 87
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 40

   77 Expression: "(" . Term ")"
  104 TwoOrMoreArguments: "(" . Term "," Terms ")"
  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 88
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 89
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 41

   97 Range: "[" . Term ".." Term "]"
   98 List: "[" . "]"
   99     | "[" . Terms "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "]"            shift, and go to state 90
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 91
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 92
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 42

   67 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 93


State 43

   62 BitNumber: "binary" .

    $default  reduce using rule 62 (BitNumber)


State 44

   63 BitNumber: "hexadecimal" .

    $default  reduce using rule 63 (BitNumber)


State 45

   64 IntegerNumber: "integer" .

    $default  reduce using rule 64 (IntegerNumber)


State 46

   66 RationalNumber: "rational" .

    $default  reduce using rule 66 (RationalNumber)


State 47

   65 FloatingNumber: "floating" .

    $default  reduce using rule 65 (FloatingNumber)


State 48

   61 String: "string" .

    $default  reduce using rule 61 (String)


State 49

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 50

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 94

    $default  reduce using rule 27 (MaybeInitializers)


State 51

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 95


State 52

  105 DirectCallExpression: Identifier .
  106                     | Identifier . Arguments

    "("  shift, and go to state 96

    "("       [reduce using rule 105 (DirectCallExpression)]
    $default  reduce using rule 105 (DirectCallExpression)

    Arguments  go to state 97


State 53

   76 Term: Atom .

    $default  reduce using rule 76 (Term)


State 54

   56 Atom: Undefined .

    $default  reduce using rule 56 (Atom)


State 55

   57 Atom: Boolean .

    $default  reduce using rule 57 (Atom)


State 56

   55 Atom: String .

    $default  reduce using rule 55 (Atom)


State 57

   51 Atom: BitNumber .

    $default  reduce using rule 51 (Atom)


State 58

   52 Atom: IntegerNumber .

    $default  reduce using rule 52 (Atom)


State 59

   53 Atom: FloatingNumber .

    $default  reduce using rule 53 (Atom)


State 60

   54 Atom: RationalNumber .

    $default  reduce using rule 54 (Atom)


State 61

   50 Atom: RuleReference .

    $default  reduce using rule 50 (Atom)


State 62

   22 Initializer: Term .
   23            | Term . "->" Term
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "->"       shift, and go to state 111
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 22 (Initializer)


State 63

   73 Term: Expression .

    $default  reduce using rule 73 (Term)


State 64

   75 Term: Range .

    $default  reduce using rule 75 (Term)


State 65

   74 Term: List .

    $default  reduce using rule 74 (Term)


State 66

   24 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 115


State 67

   68 Term: DirectCallExpression .

    $default  reduce using rule 68 (Term)


State 68

   69 Term: IndirectCallExpression .

    $default  reduce using rule 69 (Term)


State 69

   70 Term: ConditionalExpression .

    $default  reduce using rule 70 (Term)


State 70

   71 Term: UniversalQuantifierExpression .

    $default  reduce using rule 71 (Term)


State 71

   72 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 72 (Term)


State 72

   38 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 116
    Parameters  go to state 117


State 73

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 118


State 74

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 119


State 75

  111 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  112               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 120
    "->"  shift, and go to state 121


State 76

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 122
    MaybeFunctionParameters  go to state 123
    Identifier               go to state 124
    Type                     go to state 125
    BasicType                go to state 126
    ComposedType             go to state 127
    FixedSizedType           go to state 128
    RangedType               go to state 129


State 77

   77 Expression: "(" . Term ")"
  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 88
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 130
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 78

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  151 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 151 (ExpressionAttribute)


State 79

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 131
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 80

  148 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 132
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 81

   34 Variable: Identifier . ":" Type
   35         | Identifier .

    ":"  shift, and go to state 133

    $default  reduce using rule 35 (Variable)


State 82

  109 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 134


State 83

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  108 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 135
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 84

  110 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 136


State 85

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
   96           | "not" Term .

    $default  reduce using rule 96 (Expression)


State 86

   78 Expression: "+" Term .
   80           | Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    $default  reduce using rule 78 (Expression)


State 87

   79 Expression: "-" Term .
   80           | Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    $default  reduce using rule 79 (Expression)


State 88

  107 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 137
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 89

   77 Expression: "(" Term . ")"
   80           | Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  104 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 138
    ","        shift, and go to state 139
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 90

   98 List: "[" "]" .

    $default  reduce using rule 98 (List)


State 91

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
   97 Range: "[" Term . ".." Term "]"
  101 Terms: Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    ".."       shift, and go to state 140
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 101 (Terms)


State 92

   99 List: "[" Terms . "]"
  100 Terms: Terms . "," Term

    "]"  shift, and go to state 141
    ","  shift, and go to state 142


State 93

   67 RuleReference: "@" "identifier" .

    $default  reduce using rule 67 (RuleReference)


State 94

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Initializer                      go to state 143
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 95

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 96

  102 Arguments: "(" . Terms ")"
  103          | "(" . ")"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    ")"            shift, and go to state 144
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 145
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 146
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 97

  106 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 106 (DirectCallExpression)


State 98

   94 Expression: Term "and" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 147
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 99

   92 Expression: Term "or" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 148
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 100

   93 Expression: Term "xor" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 149
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 101

   95 Expression: Term "implies" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 150
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 102

   80 Expression: Term "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 151
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 103

   81 Expression: Term "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 152
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 104

   87 Expression: Term "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 153
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 105

   88 Expression: Term "<" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 154
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 106

   89 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 155
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 107

   82 Expression: Term "*" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 156
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 108

   83 Expression: Term "/" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 157
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 109

   84 Expression: Term "%" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 158
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 110

   85 Expression: Term "^" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 159
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 111

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 160
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 112

   86 Expression: Term "!=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 161
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 113

   90 Expression: Term "<=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 162
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 114

   91 Expression: Term ">=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 163
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 115

   24 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 164
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 116

   37 Parameters: Variable .

    $default  reduce using rule 37 (Parameters)


State 117

   36 Parameters: Parameters . "," Variable
   38 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 165
    ","  shift, and go to state 166


State 118

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 167
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 119

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier   go to state 168
    Identifiers  go to state 169


State 120

  111 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 184
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 121

  112 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 195
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 122

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 196

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 123

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 197


State 124

   44 BasicType: Identifier .
   45 ComposedType: Identifier . "(" Types ")"
   46 FixedSizedType: Identifier . "<" Term ">"
   47 RangedType: Identifier . "<" Term ".." Term ">"

    "("  shift, and go to state 198
    "<"  shift, and go to state 199

    $default  reduce using rule 44 (BasicType)


State 125

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 126

   40 Type: BasicType .

    $default  reduce using rule 40 (Type)


State 127

   41 Type: ComposedType .

    $default  reduce using rule 41 (Type)


State 128

   42 Type: FixedSizedType .

    $default  reduce using rule 42 (Type)


State 129

   43 Type: RangedType .

    $default  reduce using rule 43 (Type)


State 130

   77 Expression: "(" Term . ")"
   80           | Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 138
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 131

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 132

  148 Attributes: Attributes "," Attribute .

    $default  reduce using rule 148 (Attributes)


State 133

   34 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 200
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 134

  109 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 201
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 135

  108 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 202
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 136

  110 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 203
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 137

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  107 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 204
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 138

   77 Expression: "(" Term ")" .

    $default  reduce using rule 77 (Expression)


State 139

  104 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 145
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 205
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 140

   97 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 206
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 141

   99 List: "[" Terms "]" .

    $default  reduce using rule 99 (List)


State 142

  100 Terms: Terms "," . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 207
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 143

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 144

  103 Arguments: "(" ")" .

    $default  reduce using rule 103 (Arguments)


State 145

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  101 Terms: Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 101 (Terms)


State 146

  100 Terms: Terms . "," Term
  102 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 208
    ","  shift, and go to state 142


State 147

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   94           | Term "and" Term .
   95           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "="   shift, and go to state 104
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "!="  shift, and go to state 112
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 94 (Expression)


State 148

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   92           | Term "or" Term .
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"  shift, and go to state 98
    "xor"  shift, and go to state 100
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 92 (Expression)


State 149

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   93           | Term "xor" Term .
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"  shift, and go to state 98
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 93 (Expression)


State 150

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
   95           | Term "implies" Term .

    "and"  shift, and go to state 98
    "or"   shift, and go to state 99
    "xor"  shift, and go to state 100
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 95 (Expression)


State 151

   80 Expression: Term . "+" Term
   80           | Term "+" Term .
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 80 (Expression)


State 152

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   81           | Term "-" Term .
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 81 (Expression)


State 153

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   87           | Term "=" Term .
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 87 (Expression)


State 154

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   88           | Term "<" Term .
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 88 (Expression)


State 155

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   89           | Term ">" Term .
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 89 (Expression)


State 156

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   82           | Term "*" Term .
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 82 (Expression)


State 157

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   83           | Term "/" Term .
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 83 (Expression)


State 158

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   84           | Term "%" Term .
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 84 (Expression)


State 159

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   85           | Term "^" Term .
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    $default  reduce using rule 85 (Expression)


State 160

   23 Initializer: Term "->" Term .
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 23 (Initializer)


State 161

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   86           | Term "!=" Term .
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 86 (Expression)


State 162

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   90           | Term "<=" Term .
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 90 (Expression)


State 163

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   91           | Term ">=" Term .
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 91 (Expression)


State 164

   24 Initializer: TwoOrMoreArguments "->" Term .
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 24 (Initializer)


State 165

   38 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 38 (MaybeParameters)


State 166

   36 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 209


State 167

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 210


State 168

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 169

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 211
    ","  shift, and go to state 212


State 170

  140 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 213
    Rules                   go to state 214
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 171

  138 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 213
    Rules                   go to state 215
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 172

  125 SkipRule: "skip" .

    $default  reduce using rule 125 (SkipRule)


State 173

  134 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 216


State 174

  135 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 217


State 175

  136 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 218
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 176

  142 CallRule: "call" . DirectCallExpression
  144         | "call" . IndirectCallExpression

    "("           shift, and go to state 179
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 219
    IndirectCallExpression  go to state 220


State 177

  126 ConditionalRule: "if" . Term "then" Rule
  127                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 221
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 178

  128 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 222
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 179

  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 88


State 180

  137 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 213
    Rules                   go to state 223
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 181

  139 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 213
    Rules                   go to state 224
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 182

  141 UpdateRule: DirectCallExpression . ":=" Term
  143 CallRule: DirectCallExpression .

    ":="  shift, and go to state 225

    $default  reduce using rule 143 (CallRule)


State 183

  145 CallRule: IndirectCallExpression .

    $default  reduce using rule 145 (CallRule)


State 184

  111 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 111 (RuleDefinition)


State 185

  113 Rule: SkipRule .

    $default  reduce using rule 113 (Rule)


State 186

  114 Rule: ConditionalRule .

    $default  reduce using rule 114 (Rule)


State 187

  115 Rule: CaseRule .

    $default  reduce using rule 115 (Rule)


State 188

  116 Rule: LetRule .

    $default  reduce using rule 116 (Rule)


State 189

  117 Rule: ForallRule .

    $default  reduce using rule 117 (Rule)


State 190

  118 Rule: IterateRule .

    $default  reduce using rule 118 (Rule)


State 191

  119 Rule: BlockRule .

    $default  reduce using rule 119 (Rule)


State 192

  120 Rule: SequenceRule .

    $default  reduce using rule 120 (Rule)


State 193

  121 Rule: UpdateRule .

    $default  reduce using rule 121 (Rule)


State 194

  122 Rule: CallRule .

    $default  reduce using rule 122 (Rule)


State 195

  112 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 226


State 196

   16 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 227
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 197

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 228
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 198

   45 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 229
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129
    Types           go to state 230


State 199

   46 FixedSizedType: Identifier "<" . Term ">"
   47 RangedType: Identifier "<" . Term ".." Term ">"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 231
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 200

   34 Variable: Identifier ":" Type .

    $default  reduce using rule 34 (Variable)


State 201

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  109 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 232
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 202

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  108 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 233
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 203

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  110 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 234
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 204

  107 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 96

    Arguments  go to state 235


State 205

  100 Terms: Terms . "," Term
  104 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 236
    ","  shift, and go to state 142


State 206

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
   97 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "]"        shift, and go to state 237
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 207

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  100 Terms: Terms "," Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 100 (Terms)


State 208

  102 Arguments: "(" Terms ")" .

    $default  reduce using rule 102 (Arguments)


State 209

   36 Parameters: Parameters "," Variable .

    $default  reduce using rule 36 (Parameters)


State 210

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 238
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 211

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 212

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 19

    Identifier  go to state 239


State 213

  124 Rules: Rule .

    $default  reduce using rule 124 (Rules)


State 214

  123 Rules: Rules . Rule
  140 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 170
    "endseq"      shift, and go to state 240
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 241
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 215

  123 Rules: Rules . Rule
  138 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "endpar"      shift, and go to state 242
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 241
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 216

  134 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 243


State 217

  135 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 244


State 218

  136 IterateRule: "iterate" Rule .

    $default  reduce using rule 136 (IterateRule)


State 219

  142 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 142 (CallRule)


State 220

  144 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 144 (CallRule)


State 221

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  126 ConditionalRule: "if" Term . "then" Rule
  127                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 245
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 222

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  128 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 246
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 223

  123 Rules: Rules . Rule
  137 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "}"           shift, and go to state 247
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 241
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 224

  123 Rules: Rules . Rule
  139 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "|}"          shift, and go to state 248
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 241
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 225

  141 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 249
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 226

  112 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 250
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 227

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 228

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 251

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 252


State 229

   49 Types: Type .

    $default  reduce using rule 49 (Types)


State 230

   45 ComposedType: Identifier "(" Types . ")"
   48 Types: Types . "," Type

    ")"  shift, and go to state 253
    ","  shift, and go to state 254


State 231

   46 FixedSizedType: Identifier "<" Term . ">"
   47 RangedType: Identifier "<" Term . ".." Term ">"
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 255
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    ".."       shift, and go to state 256
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 232

  109 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 257
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 233

  108 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 258
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 234

  110 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 259
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 235

  107 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 107 (IndirectCallExpression)


State 236

  104 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 104 (TwoOrMoreArguments)


State 237

   97 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 97 (Range)


State 238

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 29 (DerivedDefinition)


State 239

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 240

  140 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 140 (SequenceRule)


State 241

  123 Rules: Rules Rule .

    $default  reduce using rule 123 (Rules)


State 242

  138 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 138 (BlockRule)


State 243

  134 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 260
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 244

  135 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 261
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 245

  126 ConditionalRule: "if" Term "then" . Rule
  127                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 262
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 246

  128 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 263


State 247

  137 BlockRule: "{" Rules "}" .

    $default  reduce using rule 137 (BlockRule)


State 248

  139 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 139 (SequenceRule)


State 249

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  141 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 141 (UpdateRule)


State 250

  112 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 112 (RuleDefinition)


State 251

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 264


State 252

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 265

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 266


State 253

   45 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 45 (ComposedType)


State 254

   48 Types: Types "," . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 267
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    RangedType      go to state 129


State 255

   46 FixedSizedType: Identifier "<" Term ">" .
   89 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 46 (FixedSizedType)]
    $default  reduce using rule 46 (FixedSizedType)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 155
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 256

   47 RangedType: Identifier "<" Term ".." . Term ">"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 268
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 257

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  109 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 109 (UniversalQuantifierExpression)


State 258

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  108 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 108 (ConditionalExpression)


State 259

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  110 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 110 (ExistentialQuantifierExpression)


State 260

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  134 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 269
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 261

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  135 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 270
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 262

  126 ConditionalRule: "if" Term "then" Rule .
  127                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 271

    $default  reduce using rule 126 (ConditionalRule)


State 263

  128 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 272
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 273
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 274
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 275
    CaseLabels                       go to state 276


State 264

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 277
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 265

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 278


State 266

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 267

   48 Types: Types "," Type .

    $default  reduce using rule 48 (Types)


State 268

   47 RangedType: Identifier "<" Term ".." Term . ">"
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 279
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 269

  134 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 280
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 270

  135 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 281
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 271

  127 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 282
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 272

  129 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 283


State 273

  130 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 284


State 274

   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term
  131 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ":"        shift, and go to state 285
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 275

  132 CaseLabels: CaseLabel . CaseLabels
  133           | CaseLabel .

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 272
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 273
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 133 (CaseLabels)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 274
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 275
    CaseLabels                       go to state 286


State 276

  128 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 287


State 277

   14 MaybeDefined: "defined" "{" Term . "}"
   80 Expression: Term . "+" Term
   81           | Term . "-" Term
   82           | Term . "*" Term
   83           | Term . "/" Term
   84           | Term . "%" Term
   85           | Term . "^" Term
   86           | Term . "!=" Term
   87           | Term . "=" Term
   88           | Term . "<" Term
   89           | Term . ">" Term
   90           | Term . "<=" Term
   91           | Term . ">=" Term
   92           | Term . "or" Term
   93           | Term . "xor" Term
   94           | Term . "and" Term
   95           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "}"        shift, and go to state 288
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 278

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 289
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 279

   47 RangedType: Identifier "<" Term ".." Term ">" .
   89 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 47 (RangedType)]
    $default  reduce using rule 47 (RangedType)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 155
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 280

  134 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 134 (LetRule)


State 281

  135 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 135 (ForallRule)


State 282

  127 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 127 (ConditionalRule)


State 283

  129 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 290
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 284

  130 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 291
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 285

  131 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 170
    "par"         shift, and go to state 171
    "skip"        shift, and go to state 172
    "let"         shift, and go to state 173
    "forall"      shift, and go to state 174
    "iterate"     shift, and go to state 175
    "call"        shift, and go to state 176
    "if"          shift, and go to state 177
    "case"        shift, and go to state 178
    "("           shift, and go to state 179
    "{"           shift, and go to state 180
    "{|"          shift, and go to state 181
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 182
    IndirectCallExpression  go to state 183
    Rule                    go to state 292
    SkipRule                go to state 185
    ConditionalRule         go to state 186
    CaseRule                go to state 187
    LetRule                 go to state 188
    ForallRule              go to state 189
    IterateRule             go to state 190
    BlockRule               go to state 191
    SequenceRule            go to state 192
    UpdateRule              go to state 193
    CallRule                go to state 194


State 286

  132 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 132 (CaseLabels)


State 287

  128 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 128 (CaseRule)


State 288

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 289

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 293


State 290

  129 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 129 (CaseLabel)


State 291

  130 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 130 (CaseLabel)


State 292

  131 CaseLabel: Term ":" Rule .

    $default  reduce using rule 131 (CaseLabel)


State 293

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
