Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | TwoOrMoreArguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   35                        | Identifier

   36 IdentifierPath: DotSeparatedIdentifiers
   37               | "." DotSeparatedIdentifiers

   38 Variable: Identifier ":" Type
   39         | Identifier

   40 Parameters: Parameters "," Variable
   41           | Variable

   42 MaybeParameters: "(" Parameters ")"
   43                | %empty

   44 Type: BasicType
   45     | ComposedType
   46     | FixedSizedType

   47 BasicType: Identifier

   48 ComposedType: Identifier "<" Types ">"

   49 FixedSizedType: Identifier "'" Term

   50 Types: Types "," Type
   51      | Type

   52 Atom: RuleReference
   53     | BitNumber
   54     | IntegerNumber
   55     | FloatingNumber
   56     | RationalNumber
   57     | String
   58     | Undefined
   59     | Boolean

   60 Undefined: "undef"

   61 Boolean: "true"
   62        | "false"

   63 String: "string"

   64 BitNumber: "binary"
   65          | "hexadecimal"

   66 IntegerNumber: "integer"

   67 FloatingNumber: "floating"

   68 RationalNumber: "rational"

   69 RuleReference: "@" IdentifierPath

   70 Term: DirectCallExpression
   71     | IndirectCallExpression
   72     | ConditionalExpression
   73     | UniversalQuantifierExpression
   74     | ExistentialQuantifierExpression
   75     | Expression
   76     | List
   77     | Range
   78     | Atom

   79 Expression: "(" Term ")"
   80           | "+" Term
   81           | "-" Term
   82           | Term "+" Term
   83           | Term "-" Term
   84           | Term "*" Term
   85           | Term "/" Term
   86           | Term "%" Term
   87           | Term "^" Term
   88           | Term "!=" Term
   89           | Term "=" Term
   90           | Term "<" Term
   91           | Term ">" Term
   92           | Term "<=" Term
   93           | Term ">=" Term
   94           | Term "or" Term
   95           | Term "xor" Term
   96           | Term "and" Term
   97           | Term "implies" Term
   98           | "not" Term

   99 Range: "[" Term ".." Term "]"

  100 List: "[" "]"
  101     | "[" Terms "]"

  102 Terms: Terms "," Term
  103      | Term

  104 Arguments: "(" Terms ")"
  105          | "(" ")"

  106 TwoOrMoreArguments: "(" Term "," Terms ")"

  107 DirectCallExpression: IdentifierPath
  108                     | IdentifierPath Arguments

  109 IndirectCallExpression: "(" "*" Term ")" Arguments

  110 ConditionalExpression: "if" Term "then" Term "else" Term

  111 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  112 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  113 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  114               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  115 Rule: SkipRule
  116     | ConditionalRule
  117     | CaseRule
  118     | LetRule
  119     | ForallRule
  120     | IterateRule
  121     | BlockRule
  122     | SequenceRule
  123     | UpdateRule
  124     | CallRule

  125 Rules: Rules Rule
  126      | Rule

  127 SkipRule: "skip"

  128 ConditionalRule: "if" Term "then" Rule
  129                | "if" Term "then" Rule "else" Rule

  130 CaseRule: "case" Term "of" "{" CaseLabels "}"

  131 CaseLabel: "default" ":" Rule
  132          | "_" ":" Rule
  133          | Term ":" Rule

  134 CaseLabels: CaseLabel CaseLabels
  135           | CaseLabel

  136 LetRule: "let" Variable "=" Term "in" Rule

  137 ForallRule: "forall" Variable "in" Term "do" Rule

  138 IterateRule: "iterate" Rule

  139 BlockRule: "{" Rules "}"
  140          | "par" Rules "endpar"

  141 SequenceRule: "{|" Rules "|}"
  142             | "seq" Rules "endseq"

  143 UpdateRule: DirectCallExpression ":=" Term

  144 CallRule: "call" DirectCallExpression
  145         | DirectCallExpression
  146         | "call" IndirectCallExpression
  147         | IndirectCallExpression

  148 Attribute: BasicAttribute
  149          | ExpressionAttribute

  150 Attributes: Attributes "," Attribute
  151           | Attribute

  152 BasicAttribute: Identifier

  153 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"derived" (260) 29
"enum" (261) 30
"rule" (262) 113 114
"function" (263) 10
"initially" (264) 12
"defined" (265) 14
"seq" (266) 142
"endseq" (267) 142
"par" (268) 140
"endpar" (269) 140
"skip" (270) 127
"let" (271) 136
"in" (272) 111 112 136 137
"forall" (273) 111 137
"iterate" (274) 138
"do" (275) 137
"call" (276) 144 146
"if" (277) 110 128 129
"then" (278) 110 128 129
"else" (279) 110 129
"case" (280) 130
"of" (281) 130
"default" (282) 131
"holds" (283) 111
"exists" (284) 112
"with" (285) 112
"undef" (286) 60
"false" (287) 62
"true" (288) 61
"and" (289) 96
"or" (290) 94
"xor" (291) 95
"implies" (292) 97
"not" (293) 98
"+" (294) 80 82
"-" (295) 81 83
"=" (296) 29 30 89 113 114 136
"(" (297) 42 79 104 105 106 109
")" (298) 42 79 104 105 106 109
"[" (299) 6 99 100 101
"]" (300) 6 99 100 101
"{" (301) 12 14 21 30 130 139
"}" (302) 12 14 21 30 130 139
":" (303) 10 38 131 132 133
"_" (304) 132
"@" (305) 69
"," (306) 25 32 40 50 102 106 150
"<" (307) 48 90
">" (308) 48 91
"*" (309) 16 84 109
"/" (310) 85
"%" (311) 86
"^" (312) 87
"'" (313) 49
".." (314) 99
"." (315) 34 37
"->" (316) 10 23 24 29 114
":=" (317) 143
"!=" (318) 88
"<=" (319) 92
">=" (320) 93
"{|" (321) 141
"|}" (322) 141
"binary" (323) 64
"hexadecimal" (324) 65
"integer" (325) 66
"rational" (326) 68
"floating" (327) 67
"string" (328) 63
"identifier" (329) 31
ABSOLUTE_PATH (330)
UPLUS (331)
UMINUS (332)
CALL_WITHOUT_ARGS (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
Specification (80)
    on left: 1, on right: 0
Definition (81)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (82)
    on left: 6 7, on right: 8 9
Definitions (83)
    on left: 8 9, on right: 1 8
FunctionDefinition (84)
    on left: 10 11, on right: 2
MaybeInitially (85)
    on left: 12 13, on right: 10
MaybeDefined (86)
    on left: 14 15, on right: 10
FunctionParameters (87)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (88)
    on left: 18 19, on right: 10
ProgramFunctionDefinition (89)
    on left: 20 21, on right: 11
Initializer (90)
    on left: 22 23 24, on right: 25 26
Initializers (91)
    on left: 25 26, on right: 25 27
MaybeInitializers (92)
    on left: 27 28, on right: 12 21
DerivedDefinition (93)
    on left: 29, on right: 3
EnumerationDefinition (94)
    on left: 30, on right: 5
Identifier (95)
    on left: 31, on right: 10 29 30 32 33 34 35 38 39 47 48 49 113
    114 152 153
Identifiers (96)
    on left: 32 33, on right: 30 32
DotSeparatedIdentifiers (97)
    on left: 34 35, on right: 34 36 37
IdentifierPath (98)
    on left: 36 37, on right: 20 69 107 108
Variable (99)
    on left: 38 39, on right: 40 41 111 112 136 137
Parameters (100)
    on left: 40 41, on right: 40 42
MaybeParameters (101)
    on left: 42 43, on right: 29 113 114
Type (102)
    on left: 44 45 46, on right: 10 16 17 29 38 50 51 114
BasicType (103)
    on left: 47, on right: 44
ComposedType (104)
    on left: 48, on right: 45
FixedSizedType (105)
    on left: 49, on right: 46
Types (106)
    on left: 50 51, on right: 48 50
Atom (107)
    on left: 52 53 54 55 56 57 58 59, on right: 78
Undefined (108)
    on left: 60, on right: 58
Boolean (109)
    on left: 61 62, on right: 59
String (110)
    on left: 63, on right: 57
BitNumber (111)
    on left: 64 65, on right: 53
IntegerNumber (112)
    on left: 66, on right: 54
FloatingNumber (113)
    on left: 67, on right: 55
RationalNumber (114)
    on left: 68, on right: 56
RuleReference (115)
    on left: 69, on right: 52
Term (116)
    on left: 70 71 72 73 74 75 76 77 78, on right: 14 22 23 24 29 49
    79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
    102 103 106 109 110 111 112 128 129 130 133 136 137 143 153
Expression (117)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 98, on right: 75
Range (118)
    on left: 99, on right: 77
List (119)
    on left: 100 101, on right: 76
Terms (120)
    on left: 102 103, on right: 101 102 104 106
Arguments (121)
    on left: 104 105, on right: 108 109
TwoOrMoreArguments (122)
    on left: 106, on right: 24
DirectCallExpression (123)
    on left: 107 108, on right: 70 143 144 145
IndirectCallExpression (124)
    on left: 109, on right: 71 146 147
ConditionalExpression (125)
    on left: 110, on right: 72
UniversalQuantifierExpression (126)
    on left: 111, on right: 73
ExistentialQuantifierExpression (127)
    on left: 112, on right: 74
RuleDefinition (128)
    on left: 113 114, on right: 4
Rule (129)
    on left: 115 116 117 118 119 120 121 122 123 124, on right: 113
    114 125 126 128 129 131 132 133 136 137 138
Rules (130)
    on left: 125 126, on right: 125 139 140 141 142
SkipRule (131)
    on left: 127, on right: 115
ConditionalRule (132)
    on left: 128 129, on right: 116
CaseRule (133)
    on left: 130, on right: 117
CaseLabel (134)
    on left: 131 132 133, on right: 134 135
CaseLabels (135)
    on left: 134 135, on right: 130 134
LetRule (136)
    on left: 136, on right: 118
ForallRule (137)
    on left: 137, on right: 119
IterateRule (138)
    on left: 138, on right: 120
BlockRule (139)
    on left: 139 140, on right: 121
SequenceRule (140)
    on left: 141 142, on right: 122
UpdateRule (141)
    on left: 143, on right: 123
CallRule (142)
    on left: 144 145 146 147, on right: 124
Attribute (143)
    on left: 148 149, on right: 150 151
Attributes (144)
    on left: 150 151, on right: 6 150
BasicAttribute (145)
    on left: 152, on right: 148
ExpressionAttribute (146)
    on left: 153, on right: 149


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 23


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 24


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier  go to state 25


State 6

  113 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  114               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 26


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 20

    Identifier  go to state 27


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 29
    Attributes           go to state 30
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 33
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 54
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 19

   37 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 75


State 20

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 21

   35 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 22

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   36 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 76

    $default  reduce using rule 36 (IdentifierPath)


State 23

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 24

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 78


State 25

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 79


State 26

  113 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  114               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 77

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 80


State 27

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 81


State 28

  152 BasicAttribute: Identifier .
  153 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 152 (BasicAttribute)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 83
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 29

  151 Attributes: Attribute .

    $default  reduce using rule 151 (Attributes)


State 30

    6 AttributedDefinition: "[" Attributes . "]" Definition
  150 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 84
    ","  shift, and go to state 85


State 31

  148 Attribute: BasicAttribute .

    $default  reduce using rule 148 (Attribute)


State 32

  149 Attribute: ExpressionAttribute .

    $default  reduce using rule 149 (Attribute)


State 33

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 34

  111 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 87


State 35

  110 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 88
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 36

  112 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 89


State 37

   60 Undefined: "undef" .

    $default  reduce using rule 60 (Undefined)


State 38

   62 Boolean: "false" .

    $default  reduce using rule 62 (Boolean)


State 39

   61 Boolean: "true" .

    $default  reduce using rule 61 (Boolean)


State 40

   98 Expression: "not" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 90
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 41

   80 Expression: "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 91
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 42

   81 Expression: "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 92
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 43

   79 Expression: "(" . Term ")"
  106 TwoOrMoreArguments: "(" . Term "," Terms ")"
  109 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 94
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 44

   99 Range: "[" . Term ".." Term "]"
  100 List: "[" . "]"
  101     | "[" . Terms "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "]"            shift, and go to state 95
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 96
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 97
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 45

   69 RuleReference: "@" . IdentifierPath

    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 98


State 46

   64 BitNumber: "binary" .

    $default  reduce using rule 64 (BitNumber)


State 47

   65 BitNumber: "hexadecimal" .

    $default  reduce using rule 65 (BitNumber)


State 48

   66 IntegerNumber: "integer" .

    $default  reduce using rule 66 (IntegerNumber)


State 49

   68 RationalNumber: "rational" .

    $default  reduce using rule 68 (RationalNumber)


State 50

   67 FloatingNumber: "floating" .

    $default  reduce using rule 67 (FloatingNumber)


State 51

   63 String: "string" .

    $default  reduce using rule 63 (String)


State 52

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 53

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 99

    $default  reduce using rule 27 (MaybeInitializers)


State 54

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 100


State 55

  107 DirectCallExpression: IdentifierPath .
  108                     | IdentifierPath . Arguments

    "("  shift, and go to state 101

    $default  reduce using rule 107 (DirectCallExpression)

    Arguments  go to state 102


State 56

   78 Term: Atom .

    $default  reduce using rule 78 (Term)


State 57

   58 Atom: Undefined .

    $default  reduce using rule 58 (Atom)


State 58

   59 Atom: Boolean .

    $default  reduce using rule 59 (Atom)


State 59

   57 Atom: String .

    $default  reduce using rule 57 (Atom)


State 60

   53 Atom: BitNumber .

    $default  reduce using rule 53 (Atom)


State 61

   54 Atom: IntegerNumber .

    $default  reduce using rule 54 (Atom)


State 62

   55 Atom: FloatingNumber .

    $default  reduce using rule 55 (Atom)


State 63

   56 Atom: RationalNumber .

    $default  reduce using rule 56 (Atom)


State 64

   52 Atom: RuleReference .

    $default  reduce using rule 52 (Atom)


State 65

   22 Initializer: Term .
   23            | Term . "->" Term
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "->"       shift, and go to state 116
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 22 (Initializer)


State 66

   75 Term: Expression .

    $default  reduce using rule 75 (Term)


State 67

   77 Term: Range .

    $default  reduce using rule 77 (Term)


State 68

   76 Term: List .

    $default  reduce using rule 76 (Term)


State 69

   24 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 120


State 70

   70 Term: DirectCallExpression .

    $default  reduce using rule 70 (Term)


State 71

   71 Term: IndirectCallExpression .

    $default  reduce using rule 71 (Term)


State 72

   72 Term: ConditionalExpression .

    $default  reduce using rule 72 (Term)


State 73

   73 Term: UniversalQuantifierExpression .

    $default  reduce using rule 73 (Term)


State 74

   74 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 74 (Term)


State 75

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 37 (IdentifierPath)


State 76

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 121


State 77

   42 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 122
    Parameters  go to state 123


State 78

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 124


State 79

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 125


State 80

  113 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  114               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 126
    "->"  shift, and go to state 127


State 81

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 20

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 128
    MaybeFunctionParameters  go to state 129
    Identifier               go to state 130
    Type                     go to state 131
    BasicType                go to state 132
    ComposedType             go to state 133
    FixedSizedType           go to state 134


State 82

   79 Expression: "(" . Term ")"
  109 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "*"            shift, and go to state 93
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 135
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 83

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  153 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 153 (ExpressionAttribute)


State 84

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 136
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 85

  150 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 20

    Identifier           go to state 28
    Attribute            go to state 137
    BasicAttribute       go to state 31
    ExpressionAttribute  go to state 32


State 86

   38 Variable: Identifier . ":" Type
   39         | Identifier .

    ":"  shift, and go to state 138

    $default  reduce using rule 39 (Variable)


State 87

  111 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 139


State 88

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  110 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 140
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 89

  112 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 141


State 90

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
   98           | "not" Term .

    $default  reduce using rule 98 (Expression)


State 91

   80 Expression: "+" Term .
   82           | Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    $default  reduce using rule 80 (Expression)


State 92

   81 Expression: "-" Term .
   82           | Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    $default  reduce using rule 81 (Expression)


State 93

  109 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 142
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 94

   79 Expression: "(" Term . ")"
   82           | Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  106 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 143
    ","        shift, and go to state 144
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 95

  100 List: "[" "]" .

    $default  reduce using rule 100 (List)


State 96

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
   99 Range: "[" Term . ".." Term "]"
  103 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    ".."       shift, and go to state 145
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 103 (Terms)


State 97

  101 List: "[" Terms . "]"
  102 Terms: Terms . "," Term

    "]"  shift, and go to state 146
    ","  shift, and go to state 147


State 98

   69 RuleReference: "@" IdentifierPath .

    $default  reduce using rule 69 (RuleReference)


State 99

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Initializer                      go to state 148
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 100

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 101

  104 Arguments: "(" . Terms ")"
  105          | "(" . ")"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    ")"            shift, and go to state 149
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 150
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 151
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 102

  108 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 108 (DirectCallExpression)


State 103

   96 Expression: Term "and" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 152
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 104

   94 Expression: Term "or" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 153
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 105

   95 Expression: Term "xor" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 154
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 106

   97 Expression: Term "implies" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 155
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 107

   82 Expression: Term "+" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 156
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 108

   83 Expression: Term "-" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 157
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 109

   89 Expression: Term "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 158
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 110

   90 Expression: Term "<" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 159
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 111

   91 Expression: Term ">" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 160
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 112

   84 Expression: Term "*" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 161
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 113

   85 Expression: Term "/" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 162
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 114

   86 Expression: Term "%" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 163
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 115

   87 Expression: Term "^" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 164
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 116

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 165
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 117

   88 Expression: Term "!=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 166
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 118

   92 Expression: Term "<=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 167
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 119

   93 Expression: Term ">=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 168
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 120

   24 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 169
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 121

   34 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 34 (DotSeparatedIdentifiers)


State 122

   41 Parameters: Variable .

    $default  reduce using rule 41 (Parameters)


State 123

   40 Parameters: Parameters . "," Variable
   42 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 170
    ","  shift, and go to state 171


State 124

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 172
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 125

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 20

    Identifier   go to state 173
    Identifiers  go to state 174


State 126

  113 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 189
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 127

  114 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 200
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 128

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 201

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 129

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 202


State 130

   47 BasicType: Identifier .
   48 ComposedType: Identifier . "<" Types ">"
   49 FixedSizedType: Identifier . "'" Term

    "<"  shift, and go to state 203
    "'"  shift, and go to state 204

    $default  reduce using rule 47 (BasicType)


State 131

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 132

   44 Type: BasicType .

    $default  reduce using rule 44 (Type)


State 133

   45 Type: ComposedType .

    $default  reduce using rule 45 (Type)


State 134

   46 Type: FixedSizedType .

    $default  reduce using rule 46 (Type)


State 135

   79 Expression: "(" Term . ")"
   82           | Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 143
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 136

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 137

  150 Attributes: Attributes "," Attribute .

    $default  reduce using rule 150 (Attributes)


State 138

   38 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 205
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 139

  111 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 206
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 140

  110 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 207
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 141

  112 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 208
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 142

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  109 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ")"        shift, and go to state 209
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 143

   79 Expression: "(" Term ")" .

    $default  reduce using rule 79 (Expression)


State 144

  106 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 150
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    Terms                            go to state 210
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 145

   99 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 211
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 146

  101 List: "[" Terms "]" .

    $default  reduce using rule 101 (List)


State 147

  102 Terms: Terms "," . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 212
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 148

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 149

  105 Arguments: "(" ")" .

    $default  reduce using rule 105 (Arguments)


State 150

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  103 Terms: Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 103 (Terms)


State 151

  102 Terms: Terms . "," Term
  104 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 213
    ","  shift, and go to state 147


State 152

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   96           | Term "and" Term .
   97           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "="   shift, and go to state 109
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "!="  shift, and go to state 117
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 96 (Expression)


State 153

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   94           | Term "or" Term .
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"  shift, and go to state 103
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 94 (Expression)


State 154

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   95           | Term "xor" Term .
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"  shift, and go to state 103
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 95 (Expression)


State 155

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
   97           | Term "implies" Term .

    "and"  shift, and go to state 103
    "or"   shift, and go to state 104
    "xor"  shift, and go to state 105
    "+"    shift, and go to state 107
    "-"    shift, and go to state 108
    "="    shift, and go to state 109
    "<"    shift, and go to state 110
    ">"    shift, and go to state 111
    "*"    shift, and go to state 112
    "/"    shift, and go to state 113
    "%"    shift, and go to state 114
    "^"    shift, and go to state 115
    "!="   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119

    $default  reduce using rule 97 (Expression)


State 156

   82 Expression: Term . "+" Term
   82           | Term "+" Term .
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 82 (Expression)


State 157

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   83           | Term "-" Term .
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 83 (Expression)


State 158

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   89           | Term "=" Term .
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 89 (Expression)


State 159

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   90           | Term "<" Term .
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 90 (Expression)


State 160

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   91           | Term ">" Term .
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 91 (Expression)


State 161

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   84           | Term "*" Term .
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 84 (Expression)


State 162

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   85           | Term "/" Term .
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 85 (Expression)


State 163

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   86           | Term "%" Term .
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "^"  shift, and go to state 115

    $default  reduce using rule 86 (Expression)


State 164

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   87           | Term "^" Term .
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    $default  reduce using rule 87 (Expression)


State 165

   23 Initializer: Term "->" Term .
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 23 (Initializer)


State 166

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   88           | Term "!=" Term .
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"   shift, and go to state 107
    "-"   shift, and go to state 108
    "<"   shift, and go to state 110
    ">"   shift, and go to state 111
    "*"   shift, and go to state 112
    "/"   shift, and go to state 113
    "%"   shift, and go to state 114
    "^"   shift, and go to state 115
    "<="  shift, and go to state 118
    ">="  shift, and go to state 119

    $default  reduce using rule 88 (Expression)


State 167

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   92           | Term "<=" Term .
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 92 (Expression)


State 168

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   93           | Term ">=" Term .
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "+"  shift, and go to state 107
    "-"  shift, and go to state 108
    "*"  shift, and go to state 112
    "/"  shift, and go to state 113
    "%"  shift, and go to state 114
    "^"  shift, and go to state 115

    $default  reduce using rule 93 (Expression)


State 169

   24 Initializer: TwoOrMoreArguments "->" Term .
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 24 (Initializer)


State 170

   42 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 42 (MaybeParameters)


State 171

   40 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 214


State 172

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 215


State 173

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 174

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 216
    ","  shift, and go to state 217


State 175

  142 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 218
    Rules                    go to state 219
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 176

  140 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 218
    Rules                    go to state 220
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 177

  127 SkipRule: "skip" .

    $default  reduce using rule 127 (SkipRule)


State 178

  136 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 221


State 179

  137 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 20

    Identifier  go to state 86
    Variable    go to state 222


State 180

  138 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 223
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 181

  144 CallRule: "call" . DirectCallExpression
  146         | "call" . IndirectCallExpression

    "("           shift, and go to state 184
    "."           shift, and go to state 19
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 224
    IndirectCallExpression   go to state 225


State 182

  128 ConditionalRule: "if" . Term "then" Rule
  129                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 226
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 183

  130 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 227
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 184

  109 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 93


State 185

  139 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 218
    Rules                    go to state 228
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 186

  141 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 218
    Rules                    go to state 229
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 187

  143 UpdateRule: DirectCallExpression . ":=" Term
  145 CallRule: DirectCallExpression .

    ":="  shift, and go to state 230

    $default  reduce using rule 145 (CallRule)


State 188

  147 CallRule: IndirectCallExpression .

    $default  reduce using rule 147 (CallRule)


State 189

  113 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 113 (RuleDefinition)


State 190

  115 Rule: SkipRule .

    $default  reduce using rule 115 (Rule)


State 191

  116 Rule: ConditionalRule .

    $default  reduce using rule 116 (Rule)


State 192

  117 Rule: CaseRule .

    $default  reduce using rule 117 (Rule)


State 193

  118 Rule: LetRule .

    $default  reduce using rule 118 (Rule)


State 194

  119 Rule: ForallRule .

    $default  reduce using rule 119 (Rule)


State 195

  120 Rule: IterateRule .

    $default  reduce using rule 120 (Rule)


State 196

  121 Rule: BlockRule .

    $default  reduce using rule 121 (Rule)


State 197

  122 Rule: SequenceRule .

    $default  reduce using rule 122 (Rule)


State 198

  123 Rule: UpdateRule .

    $default  reduce using rule 123 (Rule)


State 199

  124 Rule: CallRule .

    $default  reduce using rule 124 (Rule)


State 200

  114 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 231


State 201

   16 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 232
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 202

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 233
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 203

   48 ComposedType: Identifier "<" . Types ">"

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 234
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134
    Types           go to state 235


State 204

   49 FixedSizedType: Identifier "'" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 236
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 205

   38 Variable: Identifier ":" Type .

    $default  reduce using rule 38 (Variable)


State 206

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  111 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 237
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 207

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  110 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 238
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 208

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  112 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 239
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 209

  109 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 101

    Arguments  go to state 240


State 210

  102 Terms: Terms . "," Term
  106 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 241
    ","  shift, and go to state 147


State 211

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
   99 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "]"        shift, and go to state 242
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 212

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  102 Terms: Terms "," Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 102 (Terms)


State 213

  104 Arguments: "(" Terms ")" .

    $default  reduce using rule 104 (Arguments)


State 214

   40 Parameters: Parameters "," Variable .

    $default  reduce using rule 40 (Parameters)


State 215

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 243
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 216

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 217

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 20

    Identifier  go to state 244


State 218

  126 Rules: Rule .

    $default  reduce using rule 126 (Rules)


State 219

  125 Rules: Rules . Rule
  142 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 175
    "endseq"      shift, and go to state 245
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 246
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 220

  125 Rules: Rules . Rule
  140 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "endpar"      shift, and go to state 247
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 246
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 221

  136 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 248


State 222

  137 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 249


State 223

  138 IterateRule: "iterate" Rule .

    $default  reduce using rule 138 (IterateRule)


State 224

  144 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 144 (CallRule)


State 225

  146 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 146 (CallRule)


State 226

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  128 ConditionalRule: "if" Term . "then" Rule
  129                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 250
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 227

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  130 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 251
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 228

  125 Rules: Rules . Rule
  139 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "}"           shift, and go to state 252
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 246
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 229

  125 Rules: Rules . Rule
  141 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "|}"          shift, and go to state 253
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 246
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 230

  143 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 254
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 231

  114 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 255
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 232

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 233

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 256

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 257


State 234

   51 Types: Type .

    $default  reduce using rule 51 (Types)


State 235

   48 ComposedType: Identifier "<" Types . ">"
   50 Types: Types . "," Type

    ","  shift, and go to state 258
    ">"  shift, and go to state 259


State 236

   49 FixedSizedType: Identifier "'" Term .
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "<"        shift, and go to state 110
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 49 (FixedSizedType)


State 237

  111 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 260
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 238

  110 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 261
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 239

  112 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 262
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 240

  109 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 109 (IndirectCallExpression)


State 241

  106 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 106 (TwoOrMoreArguments)


State 242

   99 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 99 (Range)


State 243

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 29 (DerivedDefinition)


State 244

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 245

  142 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 142 (SequenceRule)


State 246

  125 Rules: Rules Rule .

    $default  reduce using rule 125 (Rules)


State 247

  140 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 140 (BlockRule)


State 248

  136 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 263
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 249

  137 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 264
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 250

  128 ConditionalRule: "if" Term "then" . Rule
  129                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 265
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 251

  130 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 266


State 252

  139 BlockRule: "{" Rules "}" .

    $default  reduce using rule 139 (BlockRule)


State 253

  141 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 141 (SequenceRule)


State 254

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  143 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 143 (UpdateRule)


State 255

  114 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 114 (RuleDefinition)


State 256

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 267


State 257

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 268

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 269


State 258

   50 Types: Types "," . Type

    "identifier"  shift, and go to state 20

    Identifier      go to state 130
    Type            go to state 270
    BasicType       go to state 132
    ComposedType    go to state 133
    FixedSizedType  go to state 134


State 259

   48 ComposedType: Identifier "<" Types ">" .

    $default  reduce using rule 48 (ComposedType)


State 260

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  111 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 111 (UniversalQuantifierExpression)


State 261

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  110 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119

    $default  reduce using rule 110 (ConditionalExpression)


State 262

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  112 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 112 (ExistentialQuantifierExpression)


State 263

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  136 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 271
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 264

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  137 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 272
    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 265

  128 ConditionalRule: "if" Term "then" Rule .
  129                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 273

    $default  reduce using rule 128 (ConditionalRule)


State 266

  130 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 274
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 275
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 276
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 277
    CaseLabels                       go to state 278


State 267

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 279
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 268

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 280


State 269

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 270

   50 Types: Types "," Type .

    $default  reduce using rule 50 (Types)


State 271

  136 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 281
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 272

  137 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 282
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 273

  129 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 283
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 274

  131 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 284


State 275

  132 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 285


State 276

   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term
  133 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    ":"        shift, and go to state 286
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 277

  134 CaseLabels: CaseLabel . CaseLabels
  135           | CaseLabel .

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "default"      shift, and go to state 274
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 82
    "["            shift, and go to state 44
    "_"            shift, and go to state 275
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 135 (CaseLabels)

    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 276
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74
    CaseLabel                        go to state 277
    CaseLabels                       go to state 287


State 278

  130 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 288


State 279

   14 MaybeDefined: "defined" "{" Term . "}"
   82 Expression: Term . "+" Term
   83           | Term . "-" Term
   84           | Term . "*" Term
   85           | Term . "/" Term
   86           | Term . "%" Term
   87           | Term . "^" Term
   88           | Term . "!=" Term
   89           | Term . "=" Term
   90           | Term . "<" Term
   91           | Term . ">" Term
   92           | Term . "<=" Term
   93           | Term . ">=" Term
   94           | Term . "or" Term
   95           | Term . "xor" Term
   96           | Term . "and" Term
   97           | Term . "implies" Term

    "and"      shift, and go to state 103
    "or"       shift, and go to state 104
    "xor"      shift, and go to state 105
    "implies"  shift, and go to state 106
    "+"        shift, and go to state 107
    "-"        shift, and go to state 108
    "="        shift, and go to state 109
    "}"        shift, and go to state 289
    "<"        shift, and go to state 110
    ">"        shift, and go to state 111
    "*"        shift, and go to state 112
    "/"        shift, and go to state 113
    "%"        shift, and go to state 114
    "^"        shift, and go to state 115
    "!="       shift, and go to state 117
    "<="       shift, and go to state 118
    ">="       shift, and go to state 119


State 280

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 34
    "if"           shift, and go to state 35
    "exists"       shift, and go to state 36
    "undef"        shift, and go to state 37
    "false"        shift, and go to state 38
    "true"         shift, and go to state 39
    "not"          shift, and go to state 40
    "+"            shift, and go to state 41
    "-"            shift, and go to state 42
    "("            shift, and go to state 43
    "["            shift, and go to state 44
    "@"            shift, and go to state 45
    "."            shift, and go to state 19
    "binary"       shift, and go to state 46
    "hexadecimal"  shift, and go to state 47
    "integer"      shift, and go to state 48
    "rational"     shift, and go to state 49
    "floating"     shift, and go to state 50
    "string"       shift, and go to state 51
    "identifier"   shift, and go to state 20

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 52
    Initializers                     go to state 53
    MaybeInitializers                go to state 290
    Identifier                       go to state 21
    DotSeparatedIdentifiers          go to state 22
    IdentifierPath                   go to state 55
    Atom                             go to state 56
    Undefined                        go to state 57
    Boolean                          go to state 58
    String                           go to state 59
    BitNumber                        go to state 60
    IntegerNumber                    go to state 61
    FloatingNumber                   go to state 62
    RationalNumber                   go to state 63
    RuleReference                    go to state 64
    Term                             go to state 65
    Expression                       go to state 66
    Range                            go to state 67
    List                             go to state 68
    TwoOrMoreArguments               go to state 69
    DirectCallExpression             go to state 70
    IndirectCallExpression           go to state 71
    ConditionalExpression            go to state 72
    UniversalQuantifierExpression    go to state 73
    ExistentialQuantifierExpression  go to state 74


State 281

  136 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 136 (LetRule)


State 282

  137 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 137 (ForallRule)


State 283

  129 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 129 (ConditionalRule)


State 284

  131 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 291
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 285

  132 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 292
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 286

  133 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 175
    "par"         shift, and go to state 176
    "skip"        shift, and go to state 177
    "let"         shift, and go to state 178
    "forall"      shift, and go to state 179
    "iterate"     shift, and go to state 180
    "call"        shift, and go to state 181
    "if"          shift, and go to state 182
    "case"        shift, and go to state 183
    "("           shift, and go to state 184
    "{"           shift, and go to state 185
    "."           shift, and go to state 19
    "{|"          shift, and go to state 186
    "identifier"  shift, and go to state 20

    Identifier               go to state 21
    DotSeparatedIdentifiers  go to state 22
    IdentifierPath           go to state 55
    DirectCallExpression     go to state 187
    IndirectCallExpression   go to state 188
    Rule                     go to state 293
    SkipRule                 go to state 190
    ConditionalRule          go to state 191
    CaseRule                 go to state 192
    LetRule                  go to state 193
    ForallRule               go to state 194
    IterateRule              go to state 195
    BlockRule                go to state 196
    SequenceRule             go to state 197
    UpdateRule               go to state 198
    CallRule                 go to state 199


State 287

  134 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 134 (CaseLabels)


State 288

  130 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 130 (CaseRule)


State 289

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 290

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 294


State 291

  131 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 131 (CaseLabel)


State 292

  132 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 132 (CaseLabel)


State 293

  133 CaseLabel: Term ":" Rule .

    $default  reduce using rule 133 (CaseLabel)


State 294

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
