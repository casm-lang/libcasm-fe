Terminals unused in grammar

   "option"
   "dumps"


State 52 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 255 conflicts: 1 shift/reduce
State 279 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | Arguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 Variable: Identifier ":" Type
   35         | Identifier

   36 Parameters: Parameters "," Variable
   37           | Variable

   38 MaybeParameters: "(" Parameters ")"
   39                | %empty

   40 Type: BasicType
   41     | ComposedType
   42     | FixedSizedType
   43     | RangedType

   44 BasicType: Identifier

   45 ComposedType: Identifier "(" Types ")"

   46 FixedSizedType: Identifier "<" Term ">"

   47 RangedType: Identifier "<" Term ".." Term ">"

   48 Types: Types "," Type
   49      | Type

   50 Atom: RuleReference
   51     | BitNumber
   52     | IntegerNumber
   53     | FloatingNumber
   54     | RationalNumber
   55     | String
   56     | Undefined
   57     | Boolean

   58 Undefined: "undef"

   59 Boolean: "true"
   60        | "false"

   61 String: "string"

   62 BitNumber: "binary"
   63          | "hexadecimal"

   64 IntegerNumber: "integer"

   65 FloatingNumber: "floating"

   66 RationalNumber: "rational"

   67 RuleReference: "@" "identifier"

   68 Term: DirectCallExpression
   69     | IndirectCallExpression
   70     | ConditionalExpression
   71     | UniversalQuantifierExpression
   72     | ExistentialQuantifierExpression
   73     | Expression
   74     | List
   75     | Range
   76     | Atom

   77 Expression: "(" Expression ")"
   78           | "+" Term
   79           | "(" Term ")"
   80           | "-" Term
   81           | Term "+" Term
   82           | Term "-" Term
   83           | Term "*" Term
   84           | Term "/" Term
   85           | Term "%" Term
   86           | Term "^" Term
   87           | Term "!=" Term
   88           | Term "=" Term
   89           | Term "<" Term
   90           | Term ">" Term
   91           | Term "<=" Term
   92           | Term ">=" Term
   93           | Term "or" Term
   94           | Term "xor" Term
   95           | Term "and" Term
   96           | Term "implies" Term
   97           | "not" Term

   98 Range: "[" Term ".." Term "]"

   99 List: "[" "]"
  100     | "[" Term "]"
  101     | "[" Terms "]"

  102 Terms: Terms "," Term
  103      | Term

  104 Arguments: "(" Terms ")"
  105          | "(" ")"

  106 DirectCallExpression: Identifier
  107                     | Identifier Arguments

  108 IndirectCallExpression: "(" "*" Term ")" Arguments

  109 ConditionalExpression: "if" Term "then" Term "else" Term

  110 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  111 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  112 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  113               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  114 Rule: SkipRule
  115     | ConditionalRule
  116     | CaseRule
  117     | LetRule
  118     | ForallRule
  119     | IterateRule
  120     | BlockRule
  121     | SequenceRule
  122     | UpdateRule
  123     | CallRule

  124 Rules: Rules Rule
  125      | Rule

  126 SkipRule: "skip"

  127 ConditionalRule: "if" Term "then" Rule
  128                | "if" Term "then" Rule "else" Rule

  129 CaseRule: "case" Term "of" "{" CaseLabels "}"

  130 CaseLabel: "default" ":" Rule
  131          | "_" ":" Rule
  132          | Term ":" Rule

  133 CaseLabels: CaseLabel CaseLabels
  134           | CaseLabel

  135 LetRule: "let" Variable "=" Term "in" Rule

  136 ForallRule: "forall" Variable "in" Term "do" Rule

  137 IterateRule: "iterate" Rule

  138 BlockRule: "{" Rules "}"
  139          | "par" Rules "endpar"

  140 SequenceRule: "{|" Rules "|}"
  141             | "seq" Rules "endseq"

  142 UpdateRule: DirectCallExpression ":=" Term

  143 CallRule: "call" DirectCallExpression
  144         | DirectCallExpression
  145         | "call" IndirectCallExpression
  146         | IndirectCallExpression

  147 Attribute: BasicAttribute
  148          | ExpressionAttribute

  149 Attributes: Attributes "," Attribute
  150           | Attribute

  151 BasicAttribute: Identifier

  152 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"option" (260)
"derived" (261) 29
"enum" (262) 30
"rule" (263) 112 113
"dumps" (264)
"function" (265) 10
"initially" (266) 12
"defined" (267) 14
"seq" (268) 141
"endseq" (269) 141
"par" (270) 139
"endpar" (271) 139
"skip" (272) 126
"let" (273) 135
"in" (274) 110 111 135 136
"forall" (275) 110 136
"iterate" (276) 137
"do" (277) 136
"call" (278) 143 145
"if" (279) 109 127 128
"then" (280) 109 127 128
"else" (281) 109 128
"case" (282) 129
"of" (283) 129
"default" (284) 130
"holds" (285) 110
"exists" (286) 111
"with" (287) 111
"undef" (288) 58
"false" (289) 60
"true" (290) 59
"and" (291) 95
"or" (292) 93
"xor" (293) 94
"implies" (294) 96
"not" (295) 97
"+" (296) 78 81
"-" (297) 80 82
"=" (298) 29 30 88 112 113 135
"(" (299) 38 45 77 79 104 105 108
")" (300) 38 45 77 79 104 105 108
"[" (301) 6 98 99 100 101
"]" (302) 6 98 99 100 101
"{" (303) 12 14 21 30 129 138
"}" (304) 12 14 21 30 129 138
":" (305) 10 34 130 131 132
"_" (306) 131
"@" (307) 67
"," (308) 25 32 36 48 102 149
"<" (309) 46 47 89
">" (310) 46 47 90
"*" (311) 16 83 108
"/" (312) 84
"%" (313) 85
"^" (314) 86
".." (315) 47 98
"->" (316) 10 23 24 29 113
":=" (317) 142
"!=" (318) 87
"<=" (319) 91
">=" (320) 92
"{|" (321) 140
"|}" (322) 140
"binary" (323) 62
"hexadecimal" (324) 63
"integer" (325) 64
"rational" (326) 66
"floating" (327) 65
"string" (328) 61
"identifier" (329) 31 67
UPLUS (330)
UMINUS (331)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
Specification (78)
    on left: 1, on right: 0
Definition (79)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (80)
    on left: 6 7, on right: 8 9
Definitions (81)
    on left: 8 9, on right: 1 8
FunctionDefinition (82)
    on left: 10 11, on right: 2
MaybeInitially (83)
    on left: 12 13, on right: 10
MaybeDefined (84)
    on left: 14 15, on right: 10
FunctionParameters (85)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (86)
    on left: 18 19, on right: 10
ProgramFunctionDefinition (87)
    on left: 20 21, on right: 11
Initializer (88)
    on left: 22 23 24, on right: 25 26
Initializers (89)
    on left: 25 26, on right: 25 27
MaybeInitializers (90)
    on left: 27 28, on right: 12 21
DerivedDefinition (91)
    on left: 29, on right: 3
EnumerationDefinition (92)
    on left: 30, on right: 5
Identifier (93)
    on left: 31, on right: 10 20 29 30 32 33 34 35 44 45 46 47 106
    107 112 113 151 152
Identifiers (94)
    on left: 32 33, on right: 30 32
Variable (95)
    on left: 34 35, on right: 36 37 110 111 135 136
Parameters (96)
    on left: 36 37, on right: 36 38
MaybeParameters (97)
    on left: 38 39, on right: 29 112 113
Type (98)
    on left: 40 41 42 43, on right: 10 16 17 29 34 48 49 113
BasicType (99)
    on left: 44, on right: 40
ComposedType (100)
    on left: 45, on right: 41
FixedSizedType (101)
    on left: 46, on right: 42
RangedType (102)
    on left: 47, on right: 43
Types (103)
    on left: 48 49, on right: 45 48
Atom (104)
    on left: 50 51 52 53 54 55 56 57, on right: 76
Undefined (105)
    on left: 58, on right: 56
Boolean (106)
    on left: 59 60, on right: 57
String (107)
    on left: 61, on right: 55
BitNumber (108)
    on left: 62 63, on right: 51
IntegerNumber (109)
    on left: 64, on right: 52
FloatingNumber (110)
    on left: 65, on right: 53
RationalNumber (111)
    on left: 66, on right: 54
RuleReference (112)
    on left: 67, on right: 50
Term (113)
    on left: 68 69 70 71 72 73 74 75 76, on right: 14 22 23 24 29 46
    47 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 100 102 103 108 109 110 111 127 128 129 132 135 136 142 152
Expression (114)
    on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94
    95 96 97, on right: 73 77
Range (115)
    on left: 98, on right: 75
List (116)
    on left: 99 100 101, on right: 74
Terms (117)
    on left: 102 103, on right: 101 102 104
Arguments (118)
    on left: 104 105, on right: 24 107 108
DirectCallExpression (119)
    on left: 106 107, on right: 68 142 143 144
IndirectCallExpression (120)
    on left: 108, on right: 69 145 146
ConditionalExpression (121)
    on left: 109, on right: 70
UniversalQuantifierExpression (122)
    on left: 110, on right: 71
ExistentialQuantifierExpression (123)
    on left: 111, on right: 72
RuleDefinition (124)
    on left: 112 113, on right: 4
Rule (125)
    on left: 114 115 116 117 118 119 120 121 122 123, on right: 112
    113 124 125 127 128 130 131 132 135 136 137
Rules (126)
    on left: 124 125, on right: 124 138 139 140 141
SkipRule (127)
    on left: 126, on right: 114
ConditionalRule (128)
    on left: 127 128, on right: 115
CaseRule (129)
    on left: 129, on right: 116
CaseLabel (130)
    on left: 130 131 132, on right: 133 134
CaseLabels (131)
    on left: 133 134, on right: 129 133
LetRule (132)
    on left: 135, on right: 117
ForallRule (133)
    on left: 136, on right: 118
IterateRule (134)
    on left: 137, on right: 119
BlockRule (135)
    on left: 138 139, on right: 120
SequenceRule (136)
    on left: 140 141, on right: 121
UpdateRule (137)
    on left: 142, on right: 122
CallRule (138)
    on left: 143 144 145 146, on right: 123
Attribute (139)
    on left: 147 148, on right: 149 150
Attributes (140)
    on left: 149 150, on right: 6 149
BasicAttribute (141)
    on left: 151, on right: 147
ExpressionAttribute (142)
    on left: 152, on right: 148


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "identifier"  shift, and go to state 19

    Identifier  go to state 20


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 21


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier  go to state 22


State 6

  112 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  113               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 23


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier  go to state 24


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 26
    Attributes           go to state 27
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 30
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 51
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Arguments                        go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 19

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 20

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 21

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 73


State 22

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 74


State 23

  112 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  113               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 75


State 24

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 76


State 25

  151 BasicAttribute: Identifier .
  152 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 151 (BasicAttribute)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 78
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 26

  150 Attributes: Attribute .

    $default  reduce using rule 150 (Attributes)


State 27

    6 AttributedDefinition: "[" Attributes . "]" Definition
  149 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 28

  147 Attribute: BasicAttribute .

    $default  reduce using rule 147 (Attribute)


State 29

  148 Attribute: ExpressionAttribute .

    $default  reduce using rule 148 (Attribute)


State 30

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 31

  110 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 82


State 32

  109 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 83
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 33

  111 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 84


State 34

   58 Undefined: "undef" .

    $default  reduce using rule 58 (Undefined)


State 35

   60 Boolean: "false" .

    $default  reduce using rule 60 (Boolean)


State 36

   59 Boolean: "true" .

    $default  reduce using rule 59 (Boolean)


State 37

   97 Expression: "not" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 85
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 38

   78 Expression: "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 86
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 39

   80 Expression: "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 87
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 40

   77 Expression: "(" . Expression ")"
   79           | "(" . Term ")"
  104 Arguments: "(" . Terms ")"
  105          | "(" . ")"
  108 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    ")"            shift, and go to state 88
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 89
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 90
    Expression                       go to state 91
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 92
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 41

   98 Range: "[" . Term ".." Term "]"
   99 List: "[" . "]"
  100     | "[" . Term "]"
  101     | "[" . Terms "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "]"            shift, and go to state 93
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 94
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 95
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 42

   67 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 96


State 43

   62 BitNumber: "binary" .

    $default  reduce using rule 62 (BitNumber)


State 44

   63 BitNumber: "hexadecimal" .

    $default  reduce using rule 63 (BitNumber)


State 45

   64 IntegerNumber: "integer" .

    $default  reduce using rule 64 (IntegerNumber)


State 46

   66 RationalNumber: "rational" .

    $default  reduce using rule 66 (RationalNumber)


State 47

   65 FloatingNumber: "floating" .

    $default  reduce using rule 65 (FloatingNumber)


State 48

   61 String: "string" .

    $default  reduce using rule 61 (String)


State 49

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 50

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 97

    $default  reduce using rule 27 (MaybeInitializers)


State 51

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 98


State 52

  106 DirectCallExpression: Identifier .
  107                     | Identifier . Arguments

    "("  shift, and go to state 99

    "("       [reduce using rule 106 (DirectCallExpression)]
    $default  reduce using rule 106 (DirectCallExpression)

    Arguments  go to state 100


State 53

   76 Term: Atom .

    $default  reduce using rule 76 (Term)


State 54

   56 Atom: Undefined .

    $default  reduce using rule 56 (Atom)


State 55

   57 Atom: Boolean .

    $default  reduce using rule 57 (Atom)


State 56

   55 Atom: String .

    $default  reduce using rule 55 (Atom)


State 57

   51 Atom: BitNumber .

    $default  reduce using rule 51 (Atom)


State 58

   52 Atom: IntegerNumber .

    $default  reduce using rule 52 (Atom)


State 59

   53 Atom: FloatingNumber .

    $default  reduce using rule 53 (Atom)


State 60

   54 Atom: RationalNumber .

    $default  reduce using rule 54 (Atom)


State 61

   50 Atom: RuleReference .

    $default  reduce using rule 50 (Atom)


State 62

   22 Initializer: Term .
   23            | Term . "->" Term
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "->"       shift, and go to state 114
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 22 (Initializer)


State 63

   73 Term: Expression .

    $default  reduce using rule 73 (Term)


State 64

   75 Term: Range .

    $default  reduce using rule 75 (Term)


State 65

   74 Term: List .

    $default  reduce using rule 74 (Term)


State 66

   24 Initializer: Arguments . "->" Term

    "->"  shift, and go to state 118


State 67

   68 Term: DirectCallExpression .

    $default  reduce using rule 68 (Term)


State 68

   69 Term: IndirectCallExpression .

    $default  reduce using rule 69 (Term)


State 69

   70 Term: ConditionalExpression .

    $default  reduce using rule 70 (Term)


State 70

   71 Term: UniversalQuantifierExpression .

    $default  reduce using rule 71 (Term)


State 71

   72 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 72 (Term)


State 72

   38 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 119
    Parameters  go to state 120


State 73

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 121


State 74

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 122


State 75

  112 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  113               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 123
    "->"  shift, and go to state 124


State 76

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 125
    MaybeFunctionParameters  go to state 126
    Identifier               go to state 127
    Type                     go to state 128
    BasicType                go to state 129
    ComposedType             go to state 130
    FixedSizedType           go to state 131
    RangedType               go to state 132


State 77

   77 Expression: "(" . Expression ")"
   79           | "(" . Term ")"
  108 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 89
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 133
    Expression                       go to state 91
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 78

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  152 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 152 (ExpressionAttribute)


State 79

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 134
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 80

  149 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 135
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 81

   34 Variable: Identifier . ":" Type
   35         | Identifier .

    ":"  shift, and go to state 136

    $default  reduce using rule 35 (Variable)


State 82

  110 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 137


State 83

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  109 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 138
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 84

  111 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 139


State 85

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
   97           | "not" Term .

    $default  reduce using rule 97 (Expression)


State 86

   78 Expression: "+" Term .
   81           | Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    $default  reduce using rule 78 (Expression)


State 87

   80 Expression: "-" Term .
   81           | Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    $default  reduce using rule 80 (Expression)


State 88

  105 Arguments: "(" ")" .

    $default  reduce using rule 105 (Arguments)


State 89

  108 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 140
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 90

   79 Expression: "(" Term . ")"
   81           | Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  103 Terms: Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    ")"        shift, and go to state 141
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    ")"       [reduce using rule 103 (Terms)]
    $default  reduce using rule 103 (Terms)


State 91

   73 Term: Expression .
   77 Expression: "(" Expression . ")"

    ")"  shift, and go to state 142

    ")"       [reduce using rule 73 (Term)]
    $default  reduce using rule 73 (Term)


State 92

  102 Terms: Terms . "," Term
  104 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 143
    ","  shift, and go to state 144


State 93

   99 List: "[" "]" .

    $default  reduce using rule 99 (List)


State 94

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
   98 Range: "[" Term . ".." Term "]"
  100 List: "[" Term . "]"
  103 Terms: Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "]"        shift, and go to state 145
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    ".."       shift, and go to state 146
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    "]"       [reduce using rule 103 (Terms)]
    $default  reduce using rule 103 (Terms)


State 95

  101 List: "[" Terms . "]"
  102 Terms: Terms . "," Term

    "]"  shift, and go to state 147
    ","  shift, and go to state 144


State 96

   67 RuleReference: "@" "identifier" .

    $default  reduce using rule 67 (RuleReference)


State 97

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Initializer                      go to state 148
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Arguments                        go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 98

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 99

  104 Arguments: "(" . Terms ")"
  105          | "(" . ")"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    ")"            shift, and go to state 88
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 149
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 92
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 100

  107 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 107 (DirectCallExpression)


State 101

   95 Expression: Term "and" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 150
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 102

   93 Expression: Term "or" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 151
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 103

   94 Expression: Term "xor" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 152
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 104

   96 Expression: Term "implies" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 153
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 105

   81 Expression: Term "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 154
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 106

   82 Expression: Term "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 155
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 107

   88 Expression: Term "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 156
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 108

   89 Expression: Term "<" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 157
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 109

   90 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 158
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 110

   83 Expression: Term "*" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 159
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 111

   84 Expression: Term "/" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 160
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 112

   85 Expression: Term "%" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 161
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 113

   86 Expression: Term "^" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 162
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 114

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 163
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 115

   87 Expression: Term "!=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 164
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 116

   91 Expression: Term "<=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 165
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 117

   92 Expression: Term ">=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 166
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 118

   24 Initializer: Arguments "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 167
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 119

   37 Parameters: Variable .

    $default  reduce using rule 37 (Parameters)


State 120

   36 Parameters: Parameters . "," Variable
   38 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 168
    ","  shift, and go to state 169


State 121

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 170
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 122

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier   go to state 171
    Identifiers  go to state 172


State 123

  112 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 187
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 124

  113 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 198
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 125

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 199

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 126

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 200


State 127

   44 BasicType: Identifier .
   45 ComposedType: Identifier . "(" Types ")"
   46 FixedSizedType: Identifier . "<" Term ">"
   47 RangedType: Identifier . "<" Term ".." Term ">"

    "("  shift, and go to state 201
    "<"  shift, and go to state 202

    $default  reduce using rule 44 (BasicType)


State 128

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 129

   40 Type: BasicType .

    $default  reduce using rule 40 (Type)


State 130

   41 Type: ComposedType .

    $default  reduce using rule 41 (Type)


State 131

   42 Type: FixedSizedType .

    $default  reduce using rule 42 (Type)


State 132

   43 Type: RangedType .

    $default  reduce using rule 43 (Type)


State 133

   79 Expression: "(" Term . ")"
   81           | Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    ")"        shift, and go to state 141
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 134

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 135

  149 Attributes: Attributes "," Attribute .

    $default  reduce using rule 149 (Attributes)


State 136

   34 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 203
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 137

  110 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 204
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 138

  109 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 205
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 139

  111 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 206
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 140

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  108 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    ")"        shift, and go to state 207
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 141

   79 Expression: "(" Term ")" .

    $default  reduce using rule 79 (Expression)


State 142

   77 Expression: "(" Expression ")" .

    $default  reduce using rule 77 (Expression)


State 143

  104 Arguments: "(" Terms ")" .

    $default  reduce using rule 104 (Arguments)


State 144

  102 Terms: Terms "," . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 208
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 145

  100 List: "[" Term "]" .

    $default  reduce using rule 100 (List)


State 146

   98 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 209
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 147

  101 List: "[" Terms "]" .

    $default  reduce using rule 101 (List)


State 148

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 149

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  103 Terms: Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 103 (Terms)


State 150

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   95           | Term "and" Term .
   96           | Term . "implies" Term

    "+"   shift, and go to state 105
    "-"   shift, and go to state 106
    "="   shift, and go to state 107
    "<"   shift, and go to state 108
    ">"   shift, and go to state 109
    "*"   shift, and go to state 110
    "/"   shift, and go to state 111
    "%"   shift, and go to state 112
    "^"   shift, and go to state 113
    "!="  shift, and go to state 115
    "<="  shift, and go to state 116
    ">="  shift, and go to state 117

    $default  reduce using rule 95 (Expression)


State 151

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   93           | Term "or" Term .
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"  shift, and go to state 101
    "xor"  shift, and go to state 103
    "+"    shift, and go to state 105
    "-"    shift, and go to state 106
    "="    shift, and go to state 107
    "<"    shift, and go to state 108
    ">"    shift, and go to state 109
    "*"    shift, and go to state 110
    "/"    shift, and go to state 111
    "%"    shift, and go to state 112
    "^"    shift, and go to state 113
    "!="   shift, and go to state 115
    "<="   shift, and go to state 116
    ">="   shift, and go to state 117

    $default  reduce using rule 93 (Expression)


State 152

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   94           | Term "xor" Term .
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"  shift, and go to state 101
    "+"    shift, and go to state 105
    "-"    shift, and go to state 106
    "="    shift, and go to state 107
    "<"    shift, and go to state 108
    ">"    shift, and go to state 109
    "*"    shift, and go to state 110
    "/"    shift, and go to state 111
    "%"    shift, and go to state 112
    "^"    shift, and go to state 113
    "!="   shift, and go to state 115
    "<="   shift, and go to state 116
    ">="   shift, and go to state 117

    $default  reduce using rule 94 (Expression)


State 153

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
   96           | Term "implies" Term .

    "and"  shift, and go to state 101
    "or"   shift, and go to state 102
    "xor"  shift, and go to state 103
    "+"    shift, and go to state 105
    "-"    shift, and go to state 106
    "="    shift, and go to state 107
    "<"    shift, and go to state 108
    ">"    shift, and go to state 109
    "*"    shift, and go to state 110
    "/"    shift, and go to state 111
    "%"    shift, and go to state 112
    "^"    shift, and go to state 113
    "!="   shift, and go to state 115
    "<="   shift, and go to state 116
    ">="   shift, and go to state 117

    $default  reduce using rule 96 (Expression)


State 154

   81 Expression: Term . "+" Term
   81           | Term "+" Term .
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 81 (Expression)


State 155

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   82           | Term "-" Term .
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 82 (Expression)


State 156

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   88           | Term "=" Term .
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"   shift, and go to state 105
    "-"   shift, and go to state 106
    "<"   shift, and go to state 108
    ">"   shift, and go to state 109
    "*"   shift, and go to state 110
    "/"   shift, and go to state 111
    "%"   shift, and go to state 112
    "^"   shift, and go to state 113
    "<="  shift, and go to state 116
    ">="  shift, and go to state 117

    $default  reduce using rule 88 (Expression)


State 157

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   89           | Term "<" Term .
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"  shift, and go to state 105
    "-"  shift, and go to state 106
    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 89 (Expression)


State 158

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   90           | Term ">" Term .
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"  shift, and go to state 105
    "-"  shift, and go to state 106
    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 90 (Expression)


State 159

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   83           | Term "*" Term .
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "^"  shift, and go to state 113

    $default  reduce using rule 83 (Expression)


State 160

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   84           | Term "/" Term .
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "^"  shift, and go to state 113

    $default  reduce using rule 84 (Expression)


State 161

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   85           | Term "%" Term .
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "^"  shift, and go to state 113

    $default  reduce using rule 85 (Expression)


State 162

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   86           | Term "^" Term .
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    $default  reduce using rule 86 (Expression)


State 163

   23 Initializer: Term "->" Term .
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 23 (Initializer)


State 164

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   87           | Term "!=" Term .
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"   shift, and go to state 105
    "-"   shift, and go to state 106
    "<"   shift, and go to state 108
    ">"   shift, and go to state 109
    "*"   shift, and go to state 110
    "/"   shift, and go to state 111
    "%"   shift, and go to state 112
    "^"   shift, and go to state 113
    "<="  shift, and go to state 116
    ">="  shift, and go to state 117

    $default  reduce using rule 87 (Expression)


State 165

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   91           | Term "<=" Term .
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"  shift, and go to state 105
    "-"  shift, and go to state 106
    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 91 (Expression)


State 166

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   92           | Term ">=" Term .
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "+"  shift, and go to state 105
    "-"  shift, and go to state 106
    "*"  shift, and go to state 110
    "/"  shift, and go to state 111
    "%"  shift, and go to state 112
    "^"  shift, and go to state 113

    $default  reduce using rule 92 (Expression)


State 167

   24 Initializer: Arguments "->" Term .
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 24 (Initializer)


State 168

   38 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 38 (MaybeParameters)


State 169

   36 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 210


State 170

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 211


State 171

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 172

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 212
    ","  shift, and go to state 213


State 173

  141 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 214
    Rules                   go to state 215
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 174

  139 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 214
    Rules                   go to state 216
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 175

  126 SkipRule: "skip" .

    $default  reduce using rule 126 (SkipRule)


State 176

  135 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 217


State 177

  136 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 218


State 178

  137 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 219
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 179

  143 CallRule: "call" . DirectCallExpression
  145         | "call" . IndirectCallExpression

    "("           shift, and go to state 182
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 220
    IndirectCallExpression  go to state 221


State 180

  127 ConditionalRule: "if" . Term "then" Rule
  128                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 222
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 181

  129 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 223
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 182

  108 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 89


State 183

  138 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 214
    Rules                   go to state 224
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 184

  140 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 214
    Rules                   go to state 225
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 185

  142 UpdateRule: DirectCallExpression . ":=" Term
  144 CallRule: DirectCallExpression .

    ":="  shift, and go to state 226

    $default  reduce using rule 144 (CallRule)


State 186

  146 CallRule: IndirectCallExpression .

    $default  reduce using rule 146 (CallRule)


State 187

  112 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 112 (RuleDefinition)


State 188

  114 Rule: SkipRule .

    $default  reduce using rule 114 (Rule)


State 189

  115 Rule: ConditionalRule .

    $default  reduce using rule 115 (Rule)


State 190

  116 Rule: CaseRule .

    $default  reduce using rule 116 (Rule)


State 191

  117 Rule: LetRule .

    $default  reduce using rule 117 (Rule)


State 192

  118 Rule: ForallRule .

    $default  reduce using rule 118 (Rule)


State 193

  119 Rule: IterateRule .

    $default  reduce using rule 119 (Rule)


State 194

  120 Rule: BlockRule .

    $default  reduce using rule 120 (Rule)


State 195

  121 Rule: SequenceRule .

    $default  reduce using rule 121 (Rule)


State 196

  122 Rule: UpdateRule .

    $default  reduce using rule 122 (Rule)


State 197

  123 Rule: CallRule .

    $default  reduce using rule 123 (Rule)


State 198

  113 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 227


State 199

   16 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 228
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 200

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 229
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 201

   45 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 230
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132
    Types           go to state 231


State 202

   46 FixedSizedType: Identifier "<" . Term ">"
   47 RangedType: Identifier "<" . Term ".." Term ">"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 232
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 203

   34 Variable: Identifier ":" Type .

    $default  reduce using rule 34 (Variable)


State 204

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  110 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 233
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 205

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  109 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 234
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 206

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  111 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 235
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 207

  108 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 99

    Arguments  go to state 236


State 208

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  102 Terms: Terms "," Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 102 (Terms)


State 209

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
   98 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "]"        shift, and go to state 237
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 210

   36 Parameters: Parameters "," Variable .

    $default  reduce using rule 36 (Parameters)


State 211

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 238
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 212

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 213

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 19

    Identifier  go to state 239


State 214

  125 Rules: Rule .

    $default  reduce using rule 125 (Rules)


State 215

  124 Rules: Rules . Rule
  141 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 173
    "endseq"      shift, and go to state 240
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 241
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 216

  124 Rules: Rules . Rule
  139 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "endpar"      shift, and go to state 242
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 241
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 217

  135 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 243


State 218

  136 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 244


State 219

  137 IterateRule: "iterate" Rule .

    $default  reduce using rule 137 (IterateRule)


State 220

  143 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 143 (CallRule)


State 221

  145 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 145 (CallRule)


State 222

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  127 ConditionalRule: "if" Term . "then" Rule
  128                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 245
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 223

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  129 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 246
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 224

  124 Rules: Rules . Rule
  138 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "}"           shift, and go to state 247
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 241
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 225

  124 Rules: Rules . Rule
  140 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "|}"          shift, and go to state 248
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 241
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 226

  142 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 249
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 227

  113 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 250
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 228

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 229

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 251

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 252


State 230

   49 Types: Type .

    $default  reduce using rule 49 (Types)


State 231

   45 ComposedType: Identifier "(" Types . ")"
   48 Types: Types . "," Type

    ")"  shift, and go to state 253
    ","  shift, and go to state 254


State 232

   46 FixedSizedType: Identifier "<" Term . ">"
   47 RangedType: Identifier "<" Term . ".." Term ">"
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 255
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    ".."       shift, and go to state 256
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 233

  110 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 257
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 234

  109 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 258
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 235

  111 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 259
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 236

  108 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 108 (IndirectCallExpression)


State 237

   98 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 98 (Range)


State 238

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 29 (DerivedDefinition)


State 239

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 240

  141 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 141 (SequenceRule)


State 241

  124 Rules: Rules Rule .

    $default  reduce using rule 124 (Rules)


State 242

  139 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 139 (BlockRule)


State 243

  135 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 260
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 244

  136 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 261
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 245

  127 ConditionalRule: "if" Term "then" . Rule
  128                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 262
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 246

  129 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 263


State 247

  138 BlockRule: "{" Rules "}" .

    $default  reduce using rule 138 (BlockRule)


State 248

  140 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 140 (SequenceRule)


State 249

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  142 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 142 (UpdateRule)


State 250

  113 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 113 (RuleDefinition)


State 251

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 264


State 252

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 265

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 266


State 253

   45 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 45 (ComposedType)


State 254

   48 Types: Types "," . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 127
    Type            go to state 267
    BasicType       go to state 129
    ComposedType    go to state 130
    FixedSizedType  go to state 131
    RangedType      go to state 132


State 255

   46 FixedSizedType: Identifier "<" Term ">" .
   90 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 46 (FixedSizedType)]
    $default  reduce using rule 46 (FixedSizedType)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 158
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 256

   47 RangedType: Identifier "<" Term ".." . Term ">"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 268
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 257

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  110 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 110 (UniversalQuantifierExpression)


State 258

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  109 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117

    $default  reduce using rule 109 (ConditionalExpression)


State 259

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  111 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 111 (ExistentialQuantifierExpression)


State 260

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  135 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 269
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 261

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  136 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 270
    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 262

  127 ConditionalRule: "if" Term "then" Rule .
  128                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 271

    $default  reduce using rule 127 (ConditionalRule)


State 263

  129 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 272
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 273
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 274
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 275
    CaseLabels                       go to state 276


State 264

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 277
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 265

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 278


State 266

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 267

   48 Types: Types "," Type .

    $default  reduce using rule 48 (Types)


State 268

   47 RangedType: Identifier "<" Term ".." Term . ">"
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "<"        shift, and go to state 108
    ">"        shift, and go to state 279
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 269

  135 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 280
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 270

  136 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 281
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 271

  128 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 282
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 272

  130 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 283


State 273

  131 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 284


State 274

   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term
  132 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    ":"        shift, and go to state 285
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 275

  133 CaseLabels: CaseLabel . CaseLabels
  134           | CaseLabel .

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 272
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 273
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 134 (CaseLabels)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 274
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 275
    CaseLabels                       go to state 286


State 276

  129 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 287


State 277

   14 MaybeDefined: "defined" "{" Term . "}"
   81 Expression: Term . "+" Term
   82           | Term . "-" Term
   83           | Term . "*" Term
   84           | Term . "/" Term
   85           | Term . "%" Term
   86           | Term . "^" Term
   87           | Term . "!=" Term
   88           | Term . "=" Term
   89           | Term . "<" Term
   90           | Term . ">" Term
   91           | Term . "<=" Term
   92           | Term . ">=" Term
   93           | Term . "or" Term
   94           | Term . "xor" Term
   95           | Term . "and" Term
   96           | Term . "implies" Term

    "and"      shift, and go to state 101
    "or"       shift, and go to state 102
    "xor"      shift, and go to state 103
    "implies"  shift, and go to state 104
    "+"        shift, and go to state 105
    "-"        shift, and go to state 106
    "="        shift, and go to state 107
    "}"        shift, and go to state 288
    "<"        shift, and go to state 108
    ">"        shift, and go to state 109
    "*"        shift, and go to state 110
    "/"        shift, and go to state 111
    "%"        shift, and go to state 112
    "^"        shift, and go to state 113
    "!="       shift, and go to state 115
    "<="       shift, and go to state 116
    ">="       shift, and go to state 117


State 278

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 289
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Arguments                        go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 279

   47 RangedType: Identifier "<" Term ".." Term ">" .
   90 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 47 (RangedType)]
    $default  reduce using rule 47 (RangedType)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 158
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 280

  135 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 135 (LetRule)


State 281

  136 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 136 (ForallRule)


State 282

  128 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 128 (ConditionalRule)


State 283

  130 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 290
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 284

  131 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 291
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 285

  132 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 173
    "par"         shift, and go to state 174
    "skip"        shift, and go to state 175
    "let"         shift, and go to state 176
    "forall"      shift, and go to state 177
    "iterate"     shift, and go to state 178
    "call"        shift, and go to state 179
    "if"          shift, and go to state 180
    "case"        shift, and go to state 181
    "("           shift, and go to state 182
    "{"           shift, and go to state 183
    "{|"          shift, and go to state 184
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 185
    IndirectCallExpression  go to state 186
    Rule                    go to state 292
    SkipRule                go to state 188
    ConditionalRule         go to state 189
    CaseRule                go to state 190
    LetRule                 go to state 191
    ForallRule              go to state 192
    IterateRule             go to state 193
    BlockRule               go to state 194
    SequenceRule            go to state 195
    UpdateRule              go to state 196
    CallRule                go to state 197


State 286

  133 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 133 (CaseLabels)


State 287

  129 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 129 (CaseRule)


State 288

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 289

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 293


State 290

  130 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 130 (CaseLabel)


State 291

  131 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 131 (CaseLabel)


State 292

  132 CaseLabel: Term ":" Rule .

    $default  reduce using rule 132 (CaseLabel)


State 293

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
