Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | error

    7 AttributedDefinition: "[" Attributes "]" Definition
    8                     | Definition

    9 Definitions: Definitions AttributedDefinition
   10            | AttributedDefinition

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   12                   | ProgramFunctionDefinition

   13 MaybeInitially: "initially" "{" MaybeInitializers "}"
   14               | %empty

   15 MaybeDefined: "defined" "{" Term "}"
   16             | %empty

   17 FunctionParameters: FunctionParameters "*" Type
   18                   | Type

   19 MaybeFunctionParameters: FunctionParameters
   20                        | %empty

   21 ProgramFunctionDefinition: "init" IdentifierPath
   22                          | "init" "{" MaybeInitializers "}"

   23 Initializer: Term
   24            | Term "->" Term
   25            | TwoOrMoreArguments "->" Term

   26 Initializers: Initializers "," Initializer
   27             | Initializer

   28 MaybeInitializers: Initializers
   29                  | %empty

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   32 Identifier: "identifier"
   33           | "in"

   34 Identifiers: Identifiers "," Identifier
   35            | Identifier

   36 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   37                        | Identifier

   38 IdentifierPath: DotSeparatedIdentifiers
   39               | "." DotSeparatedIdentifiers

   40 Variable: Identifier ":" Type
   41         | Identifier

   42 Parameters: Parameters "," Variable
   43           | Variable

   44 MaybeParameters: "(" Parameters ")"
   45                | "(" error ")"
   46                | %empty

   47 Type: BasicType
   48     | ComposedType
   49     | RelationType
   50     | FixedSizedType

   51 BasicType: IdentifierPath

   52 ComposedType: IdentifierPath "<" Types ">"

   53 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   54 FixedSizedType: IdentifierPath "'" Term

   55 Types: Types "," Type
   56      | Type

   57 Atom: Reference
   58     | BitNumber
   59     | IntegerNumber
   60     | FloatingNumber
   61     | RationalNumber
   62     | String
   63     | Undefined
   64     | Boolean

   65 Undefined: "undef"

   66 Boolean: "true"
   67        | "false"

   68 String: "string"

   69 BitNumber: "binary"
   70          | "hexadecimal"

   71 IntegerNumber: "integer"

   72 FloatingNumber: "floating"

   73 RationalNumber: "rational"

   74 Reference: "@" IdentifierPath

   75 Term: DirectCallExpression
   76     | IndirectCallExpression
   77     | ConditionalExpression
   78     | UniversalQuantifierExpression
   79     | ExistentialQuantifierExpression
   80     | Expression
   81     | List
   82     | Range
   83     | Atom

   84 Expression: "(" Term ")"
   85           | "(" error ")"
   86           | "+" Term
   87           | "-" Term
   88           | Term "+" Term
   89           | Term "-" Term
   90           | Term "*" Term
   91           | Term "/" Term
   92           | Term "%" Term
   93           | Term "^" Term
   94           | Term "!=" Term
   95           | Term "=" Term
   96           | Term "<" Term
   97           | Term ">" Term
   98           | Term "<=" Term
   99           | Term ">=" Term
  100           | Term "or" Term
  101           | Term "xor" Term
  102           | Term "and" Term
  103           | Term "=>" Term
  104           | Term "implies" Term
  105           | "not" Term

  106 Range: "[" Term ".." Term "]"

  107 List: "[" "]"
  108     | "[" Terms "]"
  109     | "[" error "]"

  110 Terms: Terms "," Term
  111      | Term

  112 Arguments: "(" Terms ")"
  113          | "(" error ")"
  114          | "(" ")"

  115 TwoOrMoreArguments: "(" Term "," Terms ")"

  116 DirectCallExpression: IdentifierPath
  117                     | IdentifierPath Arguments

  118 IndirectCallExpression: "(" "*" Term ")" Arguments

  119 ConditionalExpression: "if" Term "then" Term "else" Term

  120 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  121 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  122 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  123               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  124 Rule: SkipRule
  125     | ConditionalRule
  126     | CaseRule
  127     | LetRule
  128     | ForallRule
  129     | ChooseRule
  130     | IterateRule
  131     | BlockRule
  132     | SequenceRule
  133     | UpdateRule
  134     | CallRule

  135 Rules: Rules Rule
  136      | Rule

  137 SkipRule: "skip"

  138 ConditionalRule: "if" Term "then" Rule
  139                | "if" Term "then" Rule "else" Rule

  140 CaseRule: "case" Term "of" "{" CaseLabels "}"
  141         | "case" Term "of" "{" error "}"

  142 CaseLabel: "default" ":" Rule
  143          | "_" ":" Rule
  144          | Term ":" Rule

  145 CaseLabels: CaseLabel CaseLabels
  146           | CaseLabel

  147 LetRule: "let" Variable "=" Term "in" Rule

  148 ForallRule: "forall" Variable "in" Term "do" Rule

  149 ChooseRule: "choose" Variable "in" Term "do" Rule

  150 IterateRule: "iterate" Rule

  151 BlockRule: "{" Rules "}"
  152          | "par" Rules "endpar"
  153          | "{" error "}"
  154          | "par" error "endpar"

  155 SequenceRule: "{|" Rules "|}"
  156             | "seq" Rules "endseq"
  157             | "{|" error "|}"
  158             | "seq" error "endseq"

  159 UpdateRule: DirectCallExpression ":=" Term

  160 CallRule: "call" DirectCallExpression
  161         | DirectCallExpression
  162         | "call" IndirectCallExpression
  163         | IndirectCallExpression

  164 Attribute: BasicAttribute
  165          | ExpressionAttribute

  166 Attributes: Attributes "," Attribute
  167           | Attribute

  168 BasicAttribute: Identifier

  169 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 6 45 85 109 113 141 153 154 157 158
"CASM" (258) 1
"init" (259) 21 22
"derived" (260) 30
"enum" (261) 31
"rule" (262) 122 123
"function" (263) 11
"initially" (264) 13
"defined" (265) 15
"seq" (266) 156 158
"endseq" (267) 156 158
"par" (268) 152 154
"endpar" (269) 152 154
"skip" (270) 137
"let" (271) 147
"in" (272) 33 120 121 147 148 149
"forall" (273) 120 148
"choose" (274) 149
"iterate" (275) 150
"do" (276) 148 149
"call" (277) 160 162
"if" (278) 119 138 139
"then" (279) 119 138 139
"else" (280) 119 139
"case" (281) 140 141
"of" (282) 140 141
"default" (283) 142
"holds" (284) 120
"exists" (285) 121
"with" (286) 121
"undef" (287) 65
"false" (288) 67
"true" (289) 66
"and" (290) 102
"or" (291) 100
"xor" (292) 101
"implies" (293) 104
"not" (294) 105
"+" (295) 86 88
"-" (296) 87 89
"=" (297) 30 31 95 122 123 147
"(" (298) 44 45 84 85 112 113 114 115 118
")" (299) 44 45 84 85 112 113 114 115 118
"[" (300) 7 106 107 108 109
"]" (301) 7 106 107 108 109
"{" (302) 13 15 22 31 140 141 151 153
"}" (303) 13 15 22 31 140 141 151 153
":" (304) 11 40 142 143 144
"_" (305) 143
"@" (306) 74
"," (307) 26 34 42 55 110 115 166
"<" (308) 52 53 96
">" (309) 52 53 97
"*" (310) 17 90 118
"/" (311) 91
"%" (312) 92
"^" (313) 93
"'" (314) 54
".." (315) 106
"." (316) 36 39
"->" (317) 11 24 25 30 53 123
"=>" (318) 103
":=" (319) 159
"!=" (320) 94
"<=" (321) 98
">=" (322) 99
"{|" (323) 155 157
"|}" (324) 155 157
"binary" (325) 69
"hexadecimal" (326) 70
"integer" (327) 71
"rational" (328) 73
"floating" (329) 72
"string" (330) 68
"identifier" (331) 32
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5 6, on right: 7 8
AttributedDefinition (84)
    on left: 7 8, on right: 9 10
Definitions (85)
    on left: 9 10, on right: 1 9
FunctionDefinition (86)
    on left: 11 12, on right: 2
MaybeInitially (87)
    on left: 13 14, on right: 11
MaybeDefined (88)
    on left: 15 16, on right: 11
FunctionParameters (89)
    on left: 17 18, on right: 17 19
MaybeFunctionParameters (90)
    on left: 19 20, on right: 11 53
ProgramFunctionDefinition (91)
    on left: 21 22, on right: 12
Initializer (92)
    on left: 23 24 25, on right: 26 27
Initializers (93)
    on left: 26 27, on right: 26 28
MaybeInitializers (94)
    on left: 28 29, on right: 13 22
DerivedDefinition (95)
    on left: 30, on right: 3
EnumerationDefinition (96)
    on left: 31, on right: 5
Identifier (97)
    on left: 32 33, on right: 11 30 31 34 35 36 37 40 41 122 123 168
    169
Identifiers (98)
    on left: 34 35, on right: 31 34
DotSeparatedIdentifiers (99)
    on left: 36 37, on right: 36 38 39
IdentifierPath (100)
    on left: 38 39, on right: 21 51 52 53 54 74 116 117
Variable (101)
    on left: 40 41, on right: 42 43 120 121 147 148 149
Parameters (102)
    on left: 42 43, on right: 42 44
MaybeParameters (103)
    on left: 44 45 46, on right: 30 122 123
Type (104)
    on left: 47 48 49 50, on right: 11 17 18 30 40 53 55 56 123
BasicType (105)
    on left: 51, on right: 47
ComposedType (106)
    on left: 52, on right: 48
RelationType (107)
    on left: 53, on right: 49
FixedSizedType (108)
    on left: 54, on right: 50
Types (109)
    on left: 55 56, on right: 52 55
Atom (110)
    on left: 57 58 59 60 61 62 63 64, on right: 83
Undefined (111)
    on left: 65, on right: 63
Boolean (112)
    on left: 66 67, on right: 64
String (113)
    on left: 68, on right: 62
BitNumber (114)
    on left: 69 70, on right: 58
IntegerNumber (115)
    on left: 71, on right: 59
FloatingNumber (116)
    on left: 72, on right: 60
RationalNumber (117)
    on left: 73, on right: 61
Reference (118)
    on left: 74, on right: 57
Term (119)
    on left: 75 76 77 78 79 80 81 82 83, on right: 15 23 24 25 30 54
    84 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
    105 106 110 111 115 118 119 120 121 138 139 140 141 144 147 148
    149 159 169
Expression (120)
    on left: 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 103 104 105, on right: 80
Range (121)
    on left: 106, on right: 82
List (122)
    on left: 107 108 109, on right: 81
Terms (123)
    on left: 110 111, on right: 108 110 112 115
Arguments (124)
    on left: 112 113 114, on right: 117 118
TwoOrMoreArguments (125)
    on left: 115, on right: 25
DirectCallExpression (126)
    on left: 116 117, on right: 75 159 160 161
IndirectCallExpression (127)
    on left: 118, on right: 76 162 163
ConditionalExpression (128)
    on left: 119, on right: 77
UniversalQuantifierExpression (129)
    on left: 120, on right: 78
ExistentialQuantifierExpression (130)
    on left: 121, on right: 79
RuleDefinition (131)
    on left: 122 123, on right: 4
Rule (132)
    on left: 124 125 126 127 128 129 130 131 132 133 134, on right:
    122 123 135 136 138 139 142 143 144 147 148 149 150
Rules (133)
    on left: 135 136, on right: 135 151 152 155 156
SkipRule (134)
    on left: 137, on right: 124
ConditionalRule (135)
    on left: 138 139, on right: 125
CaseRule (136)
    on left: 140 141, on right: 126
CaseLabel (137)
    on left: 142 143 144, on right: 145 146
CaseLabels (138)
    on left: 145 146, on right: 140 145
LetRule (139)
    on left: 147, on right: 127
ForallRule (140)
    on left: 148, on right: 128
ChooseRule (141)
    on left: 149, on right: 129
IterateRule (142)
    on left: 150, on right: 130
BlockRule (143)
    on left: 151 152 153 154, on right: 131
SequenceRule (144)
    on left: 155 156 157 158, on right: 132
UpdateRule (145)
    on left: 159, on right: 133
CallRule (146)
    on left: 160 161 162 163, on right: 134
Attribute (147)
    on left: 164 165, on right: 166 167
Attributes (148)
    on left: 166 167, on right: 7 166
BasicAttribute (149)
    on left: 168, on right: 164
ExpressionAttribute (150)
    on left: 169, on right: 165


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    Definition                 go to state 10
    AttributedDefinition       go to state 11
    Definitions                go to state 12
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 18


State 3

    6 Definition: error .

    $default  reduce using rule 6 (Definition)


State 4

   21 ProgramFunctionDefinition: "init" . IdentifierPath
   22                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 19
    "{"           shift, and go to state 20
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 25


State 5

   30 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 26


State 6

   31 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 27


State 7

  122 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  123               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 28


State 8

   11 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 29


State 9

    7 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier           go to state 30
    Attribute            go to state 31
    Attributes           go to state 32
    BasicAttribute       go to state 33
    ExpressionAttribute  go to state 34


State 10

    8 AttributedDefinition: Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 11

   10 Definitions: AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 12

    1 Specification: "CASM" Definitions .
    9 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 10
    AttributedDefinition       go to state 35
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 13

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 14

   12 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 12 (FunctionDefinition)


State 15

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 16

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 17

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 18

    0 $accept: Specification "end of file" .

    $default  accept


State 19

   33 Identifier: "in" .

    $default  reduce using rule 33 (Identifier)


State 20

   22 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 45
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 54
    Initializers                     go to state 55
    MaybeInitializers                go to state 56
    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 67
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    TwoOrMoreArguments               go to state 71
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 21

   39 IdentifierPath: "." . DotSeparatedIdentifiers

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 77


State 22

   32 Identifier: "identifier" .

    $default  reduce using rule 32 (Identifier)


State 23

   37 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 37 (DotSeparatedIdentifiers)


State 24

   36 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   38 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 78

    $default  reduce using rule 38 (IdentifierPath)


State 25

   21 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 26

   30 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 79

    $default  reduce using rule 46 (MaybeParameters)

    MaybeParameters  go to state 80


State 27

   31 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 81


State 28

  122 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  123               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 79

    $default  reduce using rule 46 (MaybeParameters)

    MaybeParameters  go to state 82


State 29

   11 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 83


State 30

  168 BasicAttribute: Identifier .
  169 ExpressionAttribute: Identifier . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    $default  reduce using rule 168 (BasicAttribute)

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 85
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 31

  167 Attributes: Attribute .

    $default  reduce using rule 167 (Attributes)


State 32

    7 AttributedDefinition: "[" Attributes . "]" Definition
  166 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 86
    ","  shift, and go to state 87


State 33

  164 Attribute: BasicAttribute .

    $default  reduce using rule 164 (Attribute)


State 34

  165 Attribute: ExpressionAttribute .

    $default  reduce using rule 165 (Attribute)


State 35

    9 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 36

  120 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 89


State 37

  119 ConditionalExpression: "if" . Term "then" Term "else" Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 90
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 38

  121 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 91


State 39

   65 Undefined: "undef" .

    $default  reduce using rule 65 (Undefined)


State 40

   67 Boolean: "false" .

    $default  reduce using rule 67 (Boolean)


State 41

   66 Boolean: "true" .

    $default  reduce using rule 66 (Boolean)


State 42

  105 Expression: "not" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 92
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 43

   86 Expression: "+" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 93
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 44

   87 Expression: "-" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 94
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 45

   84 Expression: "(" . Term ")"
   85           | "(" . error ")"
  115 TwoOrMoreArguments: "(" . Term "," Terms ")"
  118 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 95
    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "*"            shift, and go to state 96
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 97
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 46

  106 Range: "[" . Term ".." Term "]"
  107 List: "[" . "]"
  108     | "[" . Terms "]"
  109     | "[" . error "]"

    error          shift, and go to state 98
    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "]"            shift, and go to state 99
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 100
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    Terms                            go to state 101
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 47

   74 Reference: "@" . IdentifierPath

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 102


State 48

   69 BitNumber: "binary" .

    $default  reduce using rule 69 (BitNumber)


State 49

   70 BitNumber: "hexadecimal" .

    $default  reduce using rule 70 (BitNumber)


State 50

   71 IntegerNumber: "integer" .

    $default  reduce using rule 71 (IntegerNumber)


State 51

   73 RationalNumber: "rational" .

    $default  reduce using rule 73 (RationalNumber)


State 52

   72 FloatingNumber: "floating" .

    $default  reduce using rule 72 (FloatingNumber)


State 53

   68 String: "string" .

    $default  reduce using rule 68 (String)


State 54

   27 Initializers: Initializer .

    $default  reduce using rule 27 (Initializers)


State 55

   26 Initializers: Initializers . "," Initializer
   28 MaybeInitializers: Initializers .

    ","  shift, and go to state 103

    $default  reduce using rule 28 (MaybeInitializers)


State 56

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 104


State 57

  116 DirectCallExpression: IdentifierPath .
  117                     | IdentifierPath . Arguments

    "("  shift, and go to state 105

    $default  reduce using rule 116 (DirectCallExpression)

    Arguments  go to state 106


State 58

   83 Term: Atom .

    $default  reduce using rule 83 (Term)


State 59

   63 Atom: Undefined .

    $default  reduce using rule 63 (Atom)


State 60

   64 Atom: Boolean .

    $default  reduce using rule 64 (Atom)


State 61

   62 Atom: String .

    $default  reduce using rule 62 (Atom)


State 62

   58 Atom: BitNumber .

    $default  reduce using rule 58 (Atom)


State 63

   59 Atom: IntegerNumber .

    $default  reduce using rule 59 (Atom)


State 64

   60 Atom: FloatingNumber .

    $default  reduce using rule 60 (Atom)


State 65

   61 Atom: RationalNumber .

    $default  reduce using rule 61 (Atom)


State 66

   57 Atom: Reference .

    $default  reduce using rule 57 (Atom)


State 67

   23 Initializer: Term .
   24            | Term . "->" Term
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "->"       shift, and go to state 120
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 23 (Initializer)


State 68

   80 Term: Expression .

    $default  reduce using rule 80 (Term)


State 69

   82 Term: Range .

    $default  reduce using rule 82 (Term)


State 70

   81 Term: List .

    $default  reduce using rule 81 (Term)


State 71

   25 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 125


State 72

   75 Term: DirectCallExpression .

    $default  reduce using rule 75 (Term)


State 73

   76 Term: IndirectCallExpression .

    $default  reduce using rule 76 (Term)


State 74

   77 Term: ConditionalExpression .

    $default  reduce using rule 77 (Term)


State 75

   78 Term: UniversalQuantifierExpression .

    $default  reduce using rule 78 (Term)


State 76

   79 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 77

   36 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   39 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 39 (IdentifierPath)


State 78

   36 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 126


State 79

   44 MaybeParameters: "(" . Parameters ")"
   45                | "(" . error ")"

    error         shift, and go to state 127
    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 128
    Parameters  go to state 129


State 80

   30 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 130


State 81

   31 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 131


State 82

  122 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  123               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 132
    "->"  shift, and go to state 133


State 83

   11 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 134
    MaybeFunctionParameters  go to state 135
    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 137
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 84

   84 Expression: "(" . Term ")"
   85           | "(" . error ")"
  118 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 95
    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "*"            shift, and go to state 96
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 142
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 85

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  169 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 169 (ExpressionAttribute)


State 86

    7 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8

    Definition                 go to state 143
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 87

  166 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier           go to state 30
    Attribute            go to state 144
    BasicAttribute       go to state 33
    ExpressionAttribute  go to state 34


State 88

   40 Variable: Identifier . ":" Type
   41         | Identifier .

    ":"  shift, and go to state 145

    $default  reduce using rule 41 (Variable)


State 89

  120 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 146


State 90

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  119 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 147
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 91

  121 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 148


State 92

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  105           | "not" Term .

    $default  reduce using rule 105 (Expression)


State 93

   86 Expression: "+" Term .
   88           | Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    $default  reduce using rule 86 (Expression)


State 94

   87 Expression: "-" Term .
   88           | Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    $default  reduce using rule 87 (Expression)


State 95

   85 Expression: "(" error . ")"

    ")"  shift, and go to state 149


State 96

  118 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 150
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 97

   84 Expression: "(" Term . ")"
   88           | Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  115 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    ")"        shift, and go to state 151
    ","        shift, and go to state 152
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 98

  109 List: "[" error . "]"

    "]"  shift, and go to state 153


State 99

  107 List: "[" "]" .

    $default  reduce using rule 107 (List)


State 100

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  106 Range: "[" Term . ".." Term "]"
  111 Terms: Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    ".."       shift, and go to state 154
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 111 (Terms)


State 101

  108 List: "[" Terms . "]"
  110 Terms: Terms . "," Term

    "]"  shift, and go to state 155
    ","  shift, and go to state 156


State 102

   74 Reference: "@" IdentifierPath .

    $default  reduce using rule 74 (Reference)


State 103

   26 Initializers: Initializers "," . Initializer

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 45
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Initializer                      go to state 157
    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 67
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    TwoOrMoreArguments               go to state 71
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 104

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 105

  112 Arguments: "(" . Terms ")"
  113          | "(" . error ")"
  114          | "(" . ")"

    error          shift, and go to state 158
    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    ")"            shift, and go to state 159
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 160
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    Terms                            go to state 161
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 106

  117 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 117 (DirectCallExpression)


State 107

  102 Expression: Term "and" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 162
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 108

  100 Expression: Term "or" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 163
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 109

  101 Expression: Term "xor" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 164
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 110

  104 Expression: Term "implies" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 165
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 111

   88 Expression: Term "+" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 166
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 112

   89 Expression: Term "-" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 167
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 113

   95 Expression: Term "=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 168
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 114

   96 Expression: Term "<" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 169
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 115

   97 Expression: Term ">" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 170
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 116

   90 Expression: Term "*" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 171
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 117

   91 Expression: Term "/" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 172
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 118

   92 Expression: Term "%" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 173
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 119

   93 Expression: Term "^" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 174
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 120

   24 Initializer: Term "->" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 175
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 121

  103 Expression: Term "=>" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 176
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 122

   94 Expression: Term "!=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 177
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 123

   98 Expression: Term "<=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 178
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 124

   99 Expression: Term ">=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 179
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 125

   25 Initializer: TwoOrMoreArguments "->" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 180
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 126

   36 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 36 (DotSeparatedIdentifiers)


State 127

   45 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 181


State 128

   43 Parameters: Variable .

    $default  reduce using rule 43 (Parameters)


State 129

   42 Parameters: Parameters . "," Variable
   44 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 182
    ","  shift, and go to state 183


State 130

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 184
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 131

   31 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier   go to state 185
    Identifiers  go to state 186


State 132

  122 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 202
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 133

  123 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 214
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 134

   17 FunctionParameters: FunctionParameters . "*" Type
   19 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 215

    $default  reduce using rule 19 (MaybeFunctionParameters)


State 135

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 216


State 136

   51 BasicType: IdentifierPath .
   52 ComposedType: IdentifierPath . "<" Types ">"
   53 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   54 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 217
    "'"  shift, and go to state 218

    $default  reduce using rule 51 (BasicType)


State 137

   18 FunctionParameters: Type .

    $default  reduce using rule 18 (FunctionParameters)


State 138

   47 Type: BasicType .

    $default  reduce using rule 47 (Type)


State 139

   48 Type: ComposedType .

    $default  reduce using rule 48 (Type)


State 140

   49 Type: RelationType .

    $default  reduce using rule 49 (Type)


State 141

   50 Type: FixedSizedType .

    $default  reduce using rule 50 (Type)


State 142

   84 Expression: "(" Term . ")"
   88           | Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    ")"        shift, and go to state 151
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 143

    7 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 144

  166 Attributes: Attributes "," Attribute .

    $default  reduce using rule 166 (Attributes)


State 145

   40 Variable: Identifier ":" . Type

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 219
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 146

  120 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 220
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 147

  119 ConditionalExpression: "if" Term "then" . Term "else" Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 221
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 148

  121 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 222
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 149

   85 Expression: "(" error ")" .

    $default  reduce using rule 85 (Expression)


State 150

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  118 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    ")"        shift, and go to state 223
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 151

   84 Expression: "(" Term ")" .

    $default  reduce using rule 84 (Expression)


State 152

  115 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 160
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    Terms                            go to state 224
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 153

  109 List: "[" error "]" .

    $default  reduce using rule 109 (List)


State 154

  106 Range: "[" Term ".." . Term "]"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 225
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 155

  108 List: "[" Terms "]" .

    $default  reduce using rule 108 (List)


State 156

  110 Terms: Terms "," . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 226
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 157

   26 Initializers: Initializers "," Initializer .

    $default  reduce using rule 26 (Initializers)


State 158

  113 Arguments: "(" error . ")"

    ")"  shift, and go to state 227


State 159

  114 Arguments: "(" ")" .

    $default  reduce using rule 114 (Arguments)


State 160

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  111 Terms: Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 111 (Terms)


State 161

  110 Terms: Terms . "," Term
  112 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 228
    ","  shift, and go to state 156


State 162

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  102           | Term "and" Term .
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"   shift, and go to state 111
    "-"   shift, and go to state 112
    "="   shift, and go to state 113
    "<"   shift, and go to state 114
    ">"   shift, and go to state 115
    "*"   shift, and go to state 116
    "/"   shift, and go to state 117
    "%"   shift, and go to state 118
    "^"   shift, and go to state 119
    "!="  shift, and go to state 122
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 102 (Expression)


State 163

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  100           | Term "or" Term .
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"  shift, and go to state 107
    "xor"  shift, and go to state 109
    "+"    shift, and go to state 111
    "-"    shift, and go to state 112
    "="    shift, and go to state 113
    "<"    shift, and go to state 114
    ">"    shift, and go to state 115
    "*"    shift, and go to state 116
    "/"    shift, and go to state 117
    "%"    shift, and go to state 118
    "^"    shift, and go to state 119
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 100 (Expression)


State 164

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  101           | Term "xor" Term .
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"  shift, and go to state 107
    "+"    shift, and go to state 111
    "-"    shift, and go to state 112
    "="    shift, and go to state 113
    "<"    shift, and go to state 114
    ">"    shift, and go to state 115
    "*"    shift, and go to state 116
    "/"    shift, and go to state 117
    "%"    shift, and go to state 118
    "^"    shift, and go to state 119
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 101 (Expression)


State 165

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  104           | Term "implies" Term .

    "and"  shift, and go to state 107
    "or"   shift, and go to state 108
    "xor"  shift, and go to state 109
    "+"    shift, and go to state 111
    "-"    shift, and go to state 112
    "="    shift, and go to state 113
    "<"    shift, and go to state 114
    ">"    shift, and go to state 115
    "*"    shift, and go to state 116
    "/"    shift, and go to state 117
    "%"    shift, and go to state 118
    "^"    shift, and go to state 119
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 104 (Expression)


State 166

   88 Expression: Term . "+" Term
   88           | Term "+" Term .
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 88 (Expression)


State 167

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   89           | Term "-" Term .
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 89 (Expression)


State 168

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   95           | Term "=" Term .
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"   shift, and go to state 111
    "-"   shift, and go to state 112
    "<"   shift, and go to state 114
    ">"   shift, and go to state 115
    "*"   shift, and go to state 116
    "/"   shift, and go to state 117
    "%"   shift, and go to state 118
    "^"   shift, and go to state 119
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 95 (Expression)


State 169

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   96           | Term "<" Term .
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 96 (Expression)


State 170

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   97           | Term ">" Term .
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 97 (Expression)


State 171

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   90           | Term "*" Term .
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "^"  shift, and go to state 119

    $default  reduce using rule 90 (Expression)


State 172

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   91           | Term "/" Term .
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "^"  shift, and go to state 119

    $default  reduce using rule 91 (Expression)


State 173

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   92           | Term "%" Term .
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "^"  shift, and go to state 119

    $default  reduce using rule 92 (Expression)


State 174

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   93           | Term "^" Term .
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    $default  reduce using rule 93 (Expression)


State 175

   24 Initializer: Term "->" Term .
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 24 (Initializer)


State 176

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  103           | Term "=>" Term .
  104           | Term . "implies" Term

    "and"  shift, and go to state 107
    "or"   shift, and go to state 108
    "xor"  shift, and go to state 109
    "+"    shift, and go to state 111
    "-"    shift, and go to state 112
    "="    shift, and go to state 113
    "<"    shift, and go to state 114
    ">"    shift, and go to state 115
    "*"    shift, and go to state 116
    "/"    shift, and go to state 117
    "%"    shift, and go to state 118
    "^"    shift, and go to state 119
    "!="   shift, and go to state 122
    "<="   shift, and go to state 123
    ">="   shift, and go to state 124

    $default  reduce using rule 103 (Expression)


State 177

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   94           | Term "!=" Term .
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"   shift, and go to state 111
    "-"   shift, and go to state 112
    "<"   shift, and go to state 114
    ">"   shift, and go to state 115
    "*"   shift, and go to state 116
    "/"   shift, and go to state 117
    "%"   shift, and go to state 118
    "^"   shift, and go to state 119
    "<="  shift, and go to state 123
    ">="  shift, and go to state 124

    $default  reduce using rule 94 (Expression)


State 178

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   98           | Term "<=" Term .
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 98 (Expression)


State 179

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
   99           | Term ">=" Term .
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "+"  shift, and go to state 111
    "-"  shift, and go to state 112
    "*"  shift, and go to state 116
    "/"  shift, and go to state 117
    "%"  shift, and go to state 118
    "^"  shift, and go to state 119

    $default  reduce using rule 99 (Expression)


State 180

   25 Initializer: TwoOrMoreArguments "->" Term .
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 25 (Initializer)


State 181

   45 MaybeParameters: "(" error ")" .

    $default  reduce using rule 45 (MaybeParameters)


State 182

   44 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 44 (MaybeParameters)


State 183

   42 Parameters: Parameters "," . Variable

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 229


State 184

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 230


State 185

   35 Identifiers: Identifier .

    $default  reduce using rule 35 (Identifiers)


State 186

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   34 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 231
    ","  shift, and go to state 232


State 187

  156 SequenceRule: "seq" . Rules "endseq"
  158             | "seq" . error "endseq"

    error         shift, and go to state 233
    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 234
    Rules                    go to state 235
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 188

  152 BlockRule: "par" . Rules "endpar"
  154          | "par" . error "endpar"

    error         shift, and go to state 236
    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 234
    Rules                    go to state 237
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 189

  137 SkipRule: "skip" .

    $default  reduce using rule 137 (SkipRule)


State 190

  147 LetRule: "let" . Variable "=" Term "in" Rule

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 238


State 191

  148 ForallRule: "forall" . Variable "in" Term "do" Rule

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 239


State 192

  149 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 88
    Variable    go to state 240


State 193

  150 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 241
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 194

  160 CallRule: "call" . DirectCallExpression
  162         | "call" . IndirectCallExpression

    "in"          shift, and go to state 19
    "("           shift, and go to state 197
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 242
    IndirectCallExpression   go to state 243


State 195

  138 ConditionalRule: "if" . Term "then" Rule
  139                | "if" . Term "then" Rule "else" Rule

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 244
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 196

  140 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  141         | "case" . Term "of" "{" error "}"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 245
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 197

  118 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 96


State 198

  151 BlockRule: "{" . Rules "}"
  153          | "{" . error "}"

    error         shift, and go to state 246
    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 234
    Rules                    go to state 247
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 199

  155 SequenceRule: "{|" . Rules "|}"
  157             | "{|" . error "|}"

    error         shift, and go to state 248
    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 234
    Rules                    go to state 249
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 200

  159 UpdateRule: DirectCallExpression . ":=" Term
  161 CallRule: DirectCallExpression .

    ":="  shift, and go to state 250

    $default  reduce using rule 161 (CallRule)


State 201

  163 CallRule: IndirectCallExpression .

    $default  reduce using rule 163 (CallRule)


State 202

  122 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 122 (RuleDefinition)


State 203

  124 Rule: SkipRule .

    $default  reduce using rule 124 (Rule)


State 204

  125 Rule: ConditionalRule .

    $default  reduce using rule 125 (Rule)


State 205

  126 Rule: CaseRule .

    $default  reduce using rule 126 (Rule)


State 206

  127 Rule: LetRule .

    $default  reduce using rule 127 (Rule)


State 207

  128 Rule: ForallRule .

    $default  reduce using rule 128 (Rule)


State 208

  129 Rule: ChooseRule .

    $default  reduce using rule 129 (Rule)


State 209

  130 Rule: IterateRule .

    $default  reduce using rule 130 (Rule)


State 210

  131 Rule: BlockRule .

    $default  reduce using rule 131 (Rule)


State 211

  132 Rule: SequenceRule .

    $default  reduce using rule 132 (Rule)


State 212

  133 Rule: UpdateRule .

    $default  reduce using rule 133 (Rule)


State 213

  134 Rule: CallRule .

    $default  reduce using rule 134 (Rule)


State 214

  123 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 251


State 215

   17 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 252
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 216

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 253
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 217

   52 ComposedType: IdentifierPath "<" . Types ">"
   53 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 134
    MaybeFunctionParameters  go to state 254
    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 255
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141
    Types                    go to state 256


State 218

   54 FixedSizedType: IdentifierPath "'" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 257
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 219

   40 Variable: Identifier ":" Type .

    $default  reduce using rule 40 (Variable)


State 220

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  120 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 258
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 221

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  119 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 259
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 222

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  121 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 260
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 223

  118 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 105

    Arguments  go to state 261


State 224

  110 Terms: Terms . "," Term
  115 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 262
    ","  shift, and go to state 156


State 225

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  106 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "]"        shift, and go to state 263
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 226

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  110 Terms: Terms "," Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 110 (Terms)


State 227

  113 Arguments: "(" error ")" .

    $default  reduce using rule 113 (Arguments)


State 228

  112 Arguments: "(" Terms ")" .

    $default  reduce using rule 112 (Arguments)


State 229

   42 Parameters: Parameters "," Variable .

    $default  reduce using rule 42 (Parameters)


State 230

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 264
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 231

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 31 (EnumerationDefinition)


State 232

   34 Identifiers: Identifiers "," . Identifier

    "in"          shift, and go to state 19
    "identifier"  shift, and go to state 22

    Identifier  go to state 265


State 233

  158 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 266


State 234

  136 Rules: Rule .

    $default  reduce using rule 136 (Rules)


State 235

  135 Rules: Rules . Rule
  156 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 187
    "endseq"      shift, and go to state 267
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 268
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 236

  154 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 269


State 237

  135 Rules: Rules . Rule
  152 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "endpar"      shift, and go to state 270
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 268
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 238

  147 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 271


State 239

  148 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 272


State 240

  149 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 273


State 241

  150 IterateRule: "iterate" Rule .

    $default  reduce using rule 150 (IterateRule)


State 242

  160 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 160 (CallRule)


State 243

  162 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 162 (CallRule)


State 244

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  138 ConditionalRule: "if" Term . "then" Rule
  139                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 274
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 245

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  140 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  141         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 275
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 246

  153 BlockRule: "{" error . "}"

    "}"  shift, and go to state 276


State 247

  135 Rules: Rules . Rule
  151 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "}"           shift, and go to state 277
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 268
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 248

  157 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 278


State 249

  135 Rules: Rules . Rule
  155 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "|}"          shift, and go to state 279
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 268
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 250

  159 UpdateRule: DirectCallExpression ":=" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 280
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 251

  123 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 281
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 252

   17 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 17 (FunctionParameters)


State 253

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 282

    $default  reduce using rule 16 (MaybeDefined)

    MaybeDefined  go to state 283


State 254

   53 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 284


State 255

   18 FunctionParameters: Type .
   56 Types: Type .

    ","       reduce using rule 56 (Types)
    ">"       reduce using rule 56 (Types)
    $default  reduce using rule 18 (FunctionParameters)


State 256

   52 ComposedType: IdentifierPath "<" Types . ">"
   55 Types: Types . "," Type

    ","  shift, and go to state 285
    ">"  shift, and go to state 286


State 257

   54 FixedSizedType: IdentifierPath "'" Term .
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "<"        shift, and go to state 114
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 54 (FixedSizedType)


State 258

  120 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 287
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 259

  119 ConditionalExpression: "if" Term "then" Term "else" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 288
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 260

  121 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 289
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 261

  118 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 118 (IndirectCallExpression)


State 262

  115 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 115 (TwoOrMoreArguments)


State 263

  106 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 106 (Range)


State 264

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 30 (DerivedDefinition)


State 265

   34 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 34 (Identifiers)


State 266

  158 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 158 (SequenceRule)


State 267

  156 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 156 (SequenceRule)


State 268

  135 Rules: Rules Rule .

    $default  reduce using rule 135 (Rules)


State 269

  154 BlockRule: "par" error "endpar" .

    $default  reduce using rule 154 (BlockRule)


State 270

  152 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 152 (BlockRule)


State 271

  147 LetRule: "let" Variable "=" . Term "in" Rule

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 290
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 272

  148 ForallRule: "forall" Variable "in" . Term "do" Rule

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 291
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 273

  149 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 292
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 274

  138 ConditionalRule: "if" Term "then" . Rule
  139                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 293
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 275

  140 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  141         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 294


State 276

  153 BlockRule: "{" error "}" .

    $default  reduce using rule 153 (BlockRule)


State 277

  151 BlockRule: "{" Rules "}" .

    $default  reduce using rule 151 (BlockRule)


State 278

  157 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 157 (SequenceRule)


State 279

  155 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 155 (SequenceRule)


State 280

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  159 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 159 (UpdateRule)


State 281

  123 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 123 (RuleDefinition)


State 282

   15 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 295


State 283

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 296

    $default  reduce using rule 14 (MaybeInitially)

    MaybeInitially  go to state 297


State 284

   53 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 298
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 285

   55 Types: Types "," . Type

    "in"          shift, and go to state 19
    "."           shift, and go to state 21
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 136
    Type                     go to state 299
    BasicType                go to state 138
    ComposedType             go to state 139
    RelationType             go to state 140
    FixedSizedType           go to state 141


State 286

   52 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 52 (ComposedType)


State 287

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  120 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 120 (UniversalQuantifierExpression)


State 288

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  119 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124

    $default  reduce using rule 119 (ConditionalExpression)


State 289

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  121 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 121 (ExistentialQuantifierExpression)


State 290

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  147 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 300
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 291

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  148 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 301
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 292

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  149 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 302
    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 293

  138 ConditionalRule: "if" Term "then" Rule .
  139                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 303

    $default  reduce using rule 138 (ConditionalRule)


State 294

  140 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  141         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 304
    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "default"      shift, and go to state 305
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "_"            shift, and go to state 306
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 307
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76
    CaseLabel                        go to state 308
    CaseLabels                       go to state 309


State 295

   15 MaybeDefined: "defined" "{" . Term "}"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 310
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 296

   13 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 311


State 297

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 11 (FunctionDefinition)


State 298

   53 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 312


State 299

   55 Types: Types "," Type .

    $default  reduce using rule 55 (Types)


State 300

  147 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 313
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 301

  148 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 314
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 302

  149 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 315
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 303

  139 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 316
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 304

  141 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 317


State 305

  142 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 318


State 306

  143 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 319


State 307

   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term
  144 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    ":"        shift, and go to state 320
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 308

  145 CaseLabels: CaseLabel . CaseLabels
  146           | CaseLabel .

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "default"      shift, and go to state 305
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 84
    "["            shift, and go to state 46
    "_"            shift, and go to state 306
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    $default  reduce using rule 146 (CaseLabels)

    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 307
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76
    CaseLabel                        go to state 308
    CaseLabels                       go to state 321


State 309

  140 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 322


State 310

   15 MaybeDefined: "defined" "{" Term . "}"
   88 Expression: Term . "+" Term
   89           | Term . "-" Term
   90           | Term . "*" Term
   91           | Term . "/" Term
   92           | Term . "%" Term
   93           | Term . "^" Term
   94           | Term . "!=" Term
   95           | Term . "=" Term
   96           | Term . "<" Term
   97           | Term . ">" Term
   98           | Term . "<=" Term
   99           | Term . ">=" Term
  100           | Term . "or" Term
  101           | Term . "xor" Term
  102           | Term . "and" Term
  103           | Term . "=>" Term
  104           | Term . "implies" Term

    "and"      shift, and go to state 107
    "or"       shift, and go to state 108
    "xor"      shift, and go to state 109
    "implies"  shift, and go to state 110
    "+"        shift, and go to state 111
    "-"        shift, and go to state 112
    "="        shift, and go to state 113
    "}"        shift, and go to state 323
    "<"        shift, and go to state 114
    ">"        shift, and go to state 115
    "*"        shift, and go to state 116
    "/"        shift, and go to state 117
    "%"        shift, and go to state 118
    "^"        shift, and go to state 119
    "=>"       shift, and go to state 121
    "!="       shift, and go to state 122
    "<="       shift, and go to state 123
    ">="       shift, and go to state 124


State 311

   13 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "in"           shift, and go to state 19
    "forall"       shift, and go to state 36
    "if"           shift, and go to state 37
    "exists"       shift, and go to state 38
    "undef"        shift, and go to state 39
    "false"        shift, and go to state 40
    "true"         shift, and go to state 41
    "not"          shift, and go to state 42
    "+"            shift, and go to state 43
    "-"            shift, and go to state 44
    "("            shift, and go to state 45
    "["            shift, and go to state 46
    "@"            shift, and go to state 47
    "."            shift, and go to state 21
    "binary"       shift, and go to state 48
    "hexadecimal"  shift, and go to state 49
    "integer"      shift, and go to state 50
    "rational"     shift, and go to state 51
    "floating"     shift, and go to state 52
    "string"       shift, and go to state 53
    "identifier"   shift, and go to state 22

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 54
    Initializers                     go to state 55
    MaybeInitializers                go to state 324
    Identifier                       go to state 23
    DotSeparatedIdentifiers          go to state 24
    IdentifierPath                   go to state 57
    Atom                             go to state 58
    Undefined                        go to state 59
    Boolean                          go to state 60
    String                           go to state 61
    BitNumber                        go to state 62
    IntegerNumber                    go to state 63
    FloatingNumber                   go to state 64
    RationalNumber                   go to state 65
    Reference                        go to state 66
    Term                             go to state 67
    Expression                       go to state 68
    Range                            go to state 69
    List                             go to state 70
    TwoOrMoreArguments               go to state 71
    DirectCallExpression             go to state 72
    IndirectCallExpression           go to state 73
    ConditionalExpression            go to state 74
    UniversalQuantifierExpression    go to state 75
    ExistentialQuantifierExpression  go to state 76


State 312

   53 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 53 (RelationType)


State 313

  147 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 147 (LetRule)


State 314

  148 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 148 (ForallRule)


State 315

  149 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 149 (ChooseRule)


State 316

  139 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 139 (ConditionalRule)


State 317

  141 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 141 (CaseRule)


State 318

  142 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 325
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 319

  143 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 326
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 320

  144 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 187
    "par"         shift, and go to state 188
    "skip"        shift, and go to state 189
    "let"         shift, and go to state 190
    "in"          shift, and go to state 19
    "forall"      shift, and go to state 191
    "choose"      shift, and go to state 192
    "iterate"     shift, and go to state 193
    "call"        shift, and go to state 194
    "if"          shift, and go to state 195
    "case"        shift, and go to state 196
    "("           shift, and go to state 197
    "{"           shift, and go to state 198
    "."           shift, and go to state 21
    "{|"          shift, and go to state 199
    "identifier"  shift, and go to state 22

    Identifier               go to state 23
    DotSeparatedIdentifiers  go to state 24
    IdentifierPath           go to state 57
    DirectCallExpression     go to state 200
    IndirectCallExpression   go to state 201
    Rule                     go to state 327
    SkipRule                 go to state 203
    ConditionalRule          go to state 204
    CaseRule                 go to state 205
    LetRule                  go to state 206
    ForallRule               go to state 207
    ChooseRule               go to state 208
    IterateRule              go to state 209
    BlockRule                go to state 210
    SequenceRule             go to state 211
    UpdateRule               go to state 212
    CallRule                 go to state 213


State 321

  145 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 145 (CaseLabels)


State 322

  140 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 140 (CaseRule)


State 323

   15 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 15 (MaybeDefined)


State 324

   13 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 328


State 325

  142 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 142 (CaseLabel)


State 326

  143 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 143 (CaseLabel)


State 327

  144 CaseLabel: Term ":" Rule .

    $default  reduce using rule 144 (CaseLabel)


State 328

   13 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 13 (MaybeInitially)
