Terminals unused in grammar

   "."


State 158 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   16               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   18                   | ProgramFunctionDefinition

   19 ProgramFunctionDefinition: "init" IdentifierPath
   20                          | "init" "{" MaybeInitializers "}"

   21 EnumeratorDefinition: Identifier
   22                     | "[" Attributes "]" Identifier
   23                     | error

   24 Enumerators: Enumerators "," EnumeratorDefinition
   25            | EnumeratorDefinition

   26 Rule: SkipRule
   27     | ConditionalRule
   28     | CaseRule
   29     | LetRule
   30     | ForallRule
   31     | ChooseRule
   32     | IterateRule
   33     | BlockRule
   34     | SequenceRule
   35     | UpdateRule
   36     | CallRule

   37 Rules: Rules Rule
   38      | Rule

   39 SkipRule: "skip"

   40 ConditionalRule: "if" Term "then" Rule
   41                | "if" Term "then" Rule "else" Rule

   42 CaseRule: "case" Term "of" "{" CaseLabels "}"
   43         | "case" Term "of" "{" error "}"

   44 CaseLabel: "default" ":" Rule
   45          | "_" ":" Rule
   46          | Term ":" Rule

   47 CaseLabels: CaseLabels CaseLabel
   48           | CaseLabel

   49 LetRule: "let" AttributedVariable "=" Term "in" Rule

   50 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   51           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   52 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   53 IterateRule: "iterate" Rule

   54 BlockRule: "{" Rules "}"
   55          | "par" Rules "endpar"
   56          | "{" error "}"
   57          | "par" error "endpar"

   58 SequenceRule: "{|" Rules "|}"
   59             | "seq" Rules "endseq"
   60             | "{|" error "|}"
   61             | "seq" error "endseq"

   62 UpdateRule: DirectCallExpression ":=" Term

   63 CallRule: "call" DirectCallExpression
   64         | DirectCallExpression
   65         | "call" IndirectCallExpression
   66         | IndirectCallExpression

   67 Terms: Terms "," Term
   68      | Term

   69 Term: Expression
   70     | TypeCastingExpression
   71     | DirectCallExpression
   72     | IndirectCallExpression
   73     | LetExpression
   74     | ConditionalExpression
   75     | ChooseExpression
   76     | UniversalQuantifierExpression
   77     | ExistentialQuantifierExpression
   78     | List
   79     | Range
   80     | Literal

   81 Expression: "(" Term ")"
   82           | "(" error ")"
   83           | "+" Term
   84           | "-" Term
   85           | Term "+" Term
   86           | Term "-" Term
   87           | Term "*" Term
   88           | Term "/" Term
   89           | Term "%" Term
   90           | Term "^" Term
   91           | Term "!=" Term
   92           | Term "=" Term
   93           | Term "<" Term
   94           | Term ">" Term
   95           | Term "<=" Term
   96           | Term ">=" Term
   97           | Term "or" Term
   98           | Term "xor" Term
   99           | Term "and" Term
  100           | Term "=>" Term
  101           | Term "implies" Term
  102           | "not" Term

  103 TypeCastingExpression: Term "as" Type

  104 DirectCallExpression: IdentifierPath
  105                     | IdentifierPath Arguments

  106 IndirectCallExpression: "(" "*" Term ")" Arguments

  107 LetExpression: "let" AttributedVariable "=" Term "in" Term

  108 ConditionalExpression: "if" Term "then" Term "else" Term

  109 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  110 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  111 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  112 List: "[" "]"
  113     | "[" Terms "]"
  114     | "[" error "]"

  115 Range: "[" Term ".." Term "]"

  116 Literal: UndefinedLiteral
  117        | BooleanLiteral
  118        | IntegerLiteral
  119        | RationalLiteral
  120        | DecimalLiteral
  121        | BinaryLiteral
  122        | StringLiteral
  123        | ReferenceLiteral

  124 UndefinedLiteral: "undef"

  125 BooleanLiteral: "true"
  126               | "false"

  127 IntegerLiteral: "integer"

  128 RationalLiteral: "rational"

  129 DecimalLiteral: "decimal"

  130 BinaryLiteral: "binary"
  131              | "hexadecimal"

  132 StringLiteral: "string"

  133 ReferenceLiteral: "@" IdentifierPath

  134 Types: Types "," Type
  135      | Type

  136 Type: BasicType
  137     | ComposedType
  138     | RelationType
  139     | FixedSizedType

  140 BasicType: IdentifierPath

  141 ComposedType: IdentifierPath "<" Types ">"

  142 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  143 FixedSizedType: IdentifierPath "'" Term

  144 Arguments: "(" Terms ")"
  145          | "(" error ")"
  146          | "(" ")"

  147 TwoOrMoreArguments: "(" Terms "," Term ")"

  148 FunctionParameters: FunctionParameters "*" Type
  149                   | Type

  150 MaybeFunctionParameters: FunctionParameters
  151                        | %empty

  152 Parameters: Parameters "," TypedAttributedVariable
  153           | TypedAttributedVariable

  154 MaybeParameters: "(" Parameters ")"
  155                | "(" error ")"
  156                | %empty

  157 MaybeDefined: "defined" "{" Term "}"
  158             | %empty

  159 MaybeInitially: "initially" "{" MaybeInitializers "}"
  160               | %empty

  161 Initializers: Initializers "," Initializer
  162             | Initializer

  163 Initializer: Term
  164            | Term "->" Term
  165            | TwoOrMoreArguments "->" Term

  166 MaybeInitializers: Initializers
  167                  | %empty

  168 Identifier: "identifier"
  169           | "in"

  170 IdentifierPath: DotSeparatedIdentifiers
  171               | "::" Identifier

  172 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier
  173                        | Identifier

  174 Variable: TypedVariable
  175         | Identifier

  176 TypedVariable: Identifier ":" Type

  177 AttributedVariable: "[" Attributes "]" Variable
  178                   | Variable

  179 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  180                        | TypedVariable

  181 Attributes: Attributes "," Attribute
  182           | Attribute

  183 Attribute: BasicAttribute
  184          | ExpressionAttribute

  185 BasicAttribute: Identifier

  186 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 23 43 56 57 60 61 82 114 145 155
"CASM" (258) 2 3
"init" (259) 19 20
"derived" (260) 14
"enumeration" (261) 13
"rule" (262) 15 16
"function" (263) 17
"initially" (264) 159
"defined" (265) 157
"seq" (266) 59 61
"endseq" (267) 59 61
"par" (268) 55 57
"endpar" (269) 55 57
"skip" (270) 39
"let" (271) 49 107
"in" (272) 49 50 51 52 107 109 110 111 169
"forall" (273) 50 51 110
"choose" (274) 52 109
"iterate" (275) 53
"do" (276) 50 51 52 109
"call" (277) 63 65
"if" (278) 40 41 108
"then" (279) 40 41 108
"else" (280) 41 108
"case" (281) 42 43
"of" (282) 42 43
"default" (283) 44
"holds" (284) 110
"exists" (285) 111
"with" (286) 51 111
"as" (287) 103
"undef" (288) 124
"false" (289) 126
"true" (290) 125
"and" (291) 99
"or" (292) 97
"xor" (293) 98
"implies" (294) 101
"not" (295) 102
"+" (296) 83 85
"-" (297) 84 86
"=" (298) 13 14 15 16 49 92 107
"(" (299) 81 82 106 144 145 146 147 154 155
")" (300) 81 82 106 144 145 146 147 154 155
"[" (301) 2 6 22 112 113 114 115 177 179
"]" (302) 2 6 22 112 113 114 115 177 179
"{" (303) 13 20 42 43 54 56 157 159
"}" (304) 13 20 42 43 54 56 157 159
":" (305) 17 44 45 46 176
"::" (306) 171 172
"_" (307) 45
"@" (308) 133
"," (309) 24 67 134 147 152 161 181
"<" (310) 93 141 142
">" (311) 94 141 142
"*" (312) 87 106 148
"/" (313) 88
"%" (314) 89
"^" (315) 90
"'" (316) 143
".." (317) 115
"." (318)
"->" (319) 14 16 17 142 164 165
"=>" (320) 100
":=" (321) 62
"!=" (322) 91
"<=" (323) 95
">=" (324) 96
"{|" (325) 58 60
"|}" (326) 58 60
"binary" (327) 130
"hexadecimal" (328) 131
"integer" (329) 127
"rational" (330) 128
"decimal" (331) 129
"string" (332) 132
"identifier" (333) 168
ABSOLUTE_PATH (334)
UPLUS (335)
UMINUS (336)
CALL_WITHOUT_ARGS (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
Specification (84)
    on left: 1, on right: 0
Header (85)
    on left: 2 3, on right: 1
Definitions (86)
    on left: 4 5, on right: 1 4
AttributedDefinition (87)
    on left: 6 7 8, on right: 4 5
Definition (88)
    on left: 9 10 11 12, on right: 6 7
EnumerationDefinition (89)
    on left: 13, on right: 9
DerivedDefinition (90)
    on left: 14, on right: 10
RuleDefinition (91)
    on left: 15 16, on right: 11
FunctionDefinition (92)
    on left: 17 18, on right: 12
ProgramFunctionDefinition (93)
    on left: 19 20, on right: 18
EnumeratorDefinition (94)
    on left: 21 22 23, on right: 24 25
Enumerators (95)
    on left: 24 25, on right: 13 24
Rule (96)
    on left: 26 27 28 29 30 31 32 33 34 35 36, on right: 15 16 37 38
    40 41 44 45 46 49 50 51 52 53
Rules (97)
    on left: 37 38, on right: 37 54 55 58 59
SkipRule (98)
    on left: 39, on right: 26
ConditionalRule (99)
    on left: 40 41, on right: 27
CaseRule (100)
    on left: 42 43, on right: 28
CaseLabel (101)
    on left: 44 45 46, on right: 47 48
CaseLabels (102)
    on left: 47 48, on right: 42 47
LetRule (103)
    on left: 49, on right: 29
ForallRule (104)
    on left: 50 51, on right: 30
ChooseRule (105)
    on left: 52, on right: 31
IterateRule (106)
    on left: 53, on right: 32
BlockRule (107)
    on left: 54 55 56 57, on right: 33
SequenceRule (108)
    on left: 58 59 60 61, on right: 34
UpdateRule (109)
    on left: 62, on right: 35
CallRule (110)
    on left: 63 64 65 66, on right: 36
Terms (111)
    on left: 67 68, on right: 67 113 144 147
Term (112)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80, on right: 14 40 41
    42 43 46 49 50 51 52 62 67 68 81 83 84 85 86 87 88 89 90 91 92
    93 94 95 96 97 98 99 100 101 102 103 106 107 108 109 110 111 115
    143 147 157 163 164 165 186
Expression (113)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101 102, on right: 69
TypeCastingExpression (114)
    on left: 103, on right: 70
DirectCallExpression (115)
    on left: 104 105, on right: 62 63 64 71
IndirectCallExpression (116)
    on left: 106, on right: 65 66 72
LetExpression (117)
    on left: 107, on right: 73
ConditionalExpression (118)
    on left: 108, on right: 74
ChooseExpression (119)
    on left: 109, on right: 75
UniversalQuantifierExpression (120)
    on left: 110, on right: 76
ExistentialQuantifierExpression (121)
    on left: 111, on right: 77
List (122)
    on left: 112 113 114, on right: 78
Range (123)
    on left: 115, on right: 79
Literal (124)
    on left: 116 117 118 119 120 121 122 123, on right: 80
UndefinedLiteral (125)
    on left: 124, on right: 116
BooleanLiteral (126)
    on left: 125 126, on right: 117
IntegerLiteral (127)
    on left: 127, on right: 118
RationalLiteral (128)
    on left: 128, on right: 119
DecimalLiteral (129)
    on left: 129, on right: 120
BinaryLiteral (130)
    on left: 130 131, on right: 121
StringLiteral (131)
    on left: 132, on right: 122
ReferenceLiteral (132)
    on left: 133, on right: 123
Types (133)
    on left: 134 135, on right: 134 141
Type (134)
    on left: 136 137 138 139, on right: 14 16 17 103 134 135 142 148
    149 176
BasicType (135)
    on left: 140, on right: 136
ComposedType (136)
    on left: 141, on right: 137
RelationType (137)
    on left: 142, on right: 138
FixedSizedType (138)
    on left: 143, on right: 139
Arguments (139)
    on left: 144 145 146, on right: 105 106
TwoOrMoreArguments (140)
    on left: 147, on right: 165
FunctionParameters (141)
    on left: 148 149, on right: 148 150
MaybeFunctionParameters (142)
    on left: 150 151, on right: 17 142
Parameters (143)
    on left: 152 153, on right: 152 154
MaybeParameters (144)
    on left: 154 155 156, on right: 14 15 16
MaybeDefined (145)
    on left: 157 158, on right: 17
MaybeInitially (146)
    on left: 159 160, on right: 17
Initializers (147)
    on left: 161 162, on right: 161 166
Initializer (148)
    on left: 163 164 165, on right: 161 162
MaybeInitializers (149)
    on left: 166 167, on right: 20 159
Identifier (150)
    on left: 168 169, on right: 13 14 15 16 17 21 22 171 172 173 175
    176 185 186
IdentifierPath (151)
    on left: 170 171, on right: 19 104 105 133 140 141 142 143
DotSeparatedIdentifiers (152)
    on left: 172 173, on right: 170 172
Variable (153)
    on left: 174 175, on right: 177 178
TypedVariable (154)
    on left: 176, on right: 174 179 180
AttributedVariable (155)
    on left: 177 178, on right: 49 50 51 52 107 109 110 111
TypedAttributedVariable (156)
    on left: 179 180, on right: 152 153
Attributes (157)
    on left: 181 182, on right: 2 6 22 177 179 181
Attribute (158)
    on left: 183 184, on right: 181 182
BasicAttribute (159)
    on left: 185, on right: 183
ExpressionAttribute (160)
    on left: 186, on right: 184


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18
    "["            shift, and go to state 19

    Definitions                go to state 20
    AttributedDefinition       go to state 21
    Definition                 go to state 22
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 5

  169 Identifier: "in" .

    $default  reduce using rule 169 (Identifier)


State 6

  168 Identifier: "identifier" .

    $default  reduce using rule 168 (Identifier)


State 7

  185 BasicAttribute: Identifier .
  186 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 185 (BasicAttribute)

    Term                             go to state 49
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 8

    2 Header: "[" Attributes . "]" "CASM"
  181 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 73
    ","  shift, and go to state 74


State 9

  182 Attributes: Attribute .

    $default  reduce using rule 182 (Attributes)


State 10

  183 Attribute: BasicAttribute .

    $default  reduce using rule 183 (Attribute)


State 11

  184 Attribute: ExpressionAttribute .

    $default  reduce using rule 184 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   19 ProgramFunctionDefinition: "init" . IdentifierPath
   20                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 75
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Identifier               go to state 70
    IdentifierPath           go to state 76
    DotSeparatedIdentifiers  go to state 72


State 15

   14 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 77


State 16

   13 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 78


State 17

   15 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   16               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 79


State 18

   17 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 80


State 19

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 81
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 20

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18
    "["            shift, and go to state 19

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 82
    Definition                 go to state 22
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 21

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 22

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 23

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 24

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 25

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 26

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 27

   18 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 18 (FunctionDefinition)


State 28

  107 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 87


State 29

  110 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 88


State 30

  109 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 89


State 31

  108 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 90
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 32

  111 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 91


State 33

  124 UndefinedLiteral: "undef" .

    $default  reduce using rule 124 (UndefinedLiteral)


State 34

  126 BooleanLiteral: "false" .

    $default  reduce using rule 126 (BooleanLiteral)


State 35

  125 BooleanLiteral: "true" .

    $default  reduce using rule 125 (BooleanLiteral)


State 36

  102 Expression: "not" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 92
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 37

   83 Expression: "+" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 93
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 38

   84 Expression: "-" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 94
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 39

   81 Expression: "(" . Term ")"
   82           | "(" . error ")"
  106 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 95
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 96
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 97
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 40

  112 List: "[" . "]"
  113     | "[" . Terms "]"
  114     | "[" . error "]"
  115 Range: "[" . Term ".." Term "]"

    error          shift, and go to state 98
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "]"            shift, and go to state 99
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 100
    Term                             go to state 101
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 41

  171 IdentifierPath: "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 102


State 42

  133 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Identifier               go to state 70
    IdentifierPath           go to state 103
    DotSeparatedIdentifiers  go to state 72


State 43

  130 BinaryLiteral: "binary" .

    $default  reduce using rule 130 (BinaryLiteral)


State 44

  131 BinaryLiteral: "hexadecimal" .

    $default  reduce using rule 131 (BinaryLiteral)


State 45

  127 IntegerLiteral: "integer" .

    $default  reduce using rule 127 (IntegerLiteral)


State 46

  128 RationalLiteral: "rational" .

    $default  reduce using rule 128 (RationalLiteral)


State 47

  129 DecimalLiteral: "decimal" .

    $default  reduce using rule 129 (DecimalLiteral)


State 48

  132 StringLiteral: "string" .

    $default  reduce using rule 132 (StringLiteral)


State 49

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  186 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 186 (ExpressionAttribute)


State 50

   69 Term: Expression .

    $default  reduce using rule 69 (Term)


State 51

   70 Term: TypeCastingExpression .

    $default  reduce using rule 70 (Term)


State 52

   71 Term: DirectCallExpression .

    $default  reduce using rule 71 (Term)


State 53

   72 Term: IndirectCallExpression .

    $default  reduce using rule 72 (Term)


State 54

   73 Term: LetExpression .

    $default  reduce using rule 73 (Term)


State 55

   74 Term: ConditionalExpression .

    $default  reduce using rule 74 (Term)


State 56

   75 Term: ChooseExpression .

    $default  reduce using rule 75 (Term)


State 57

   76 Term: UniversalQuantifierExpression .

    $default  reduce using rule 76 (Term)


State 58

   77 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 77 (Term)


State 59

   78 Term: List .

    $default  reduce using rule 78 (Term)


State 60

   79 Term: Range .

    $default  reduce using rule 79 (Term)


State 61

   80 Term: Literal .

    $default  reduce using rule 80 (Term)


State 62

  116 Literal: UndefinedLiteral .

    $default  reduce using rule 116 (Literal)


State 63

  117 Literal: BooleanLiteral .

    $default  reduce using rule 117 (Literal)


State 64

  118 Literal: IntegerLiteral .

    $default  reduce using rule 118 (Literal)


State 65

  119 Literal: RationalLiteral .

    $default  reduce using rule 119 (Literal)


State 66

  120 Literal: DecimalLiteral .

    $default  reduce using rule 120 (Literal)


State 67

  121 Literal: BinaryLiteral .

    $default  reduce using rule 121 (Literal)


State 68

  122 Literal: StringLiteral .

    $default  reduce using rule 122 (Literal)


State 69

  123 Literal: ReferenceLiteral .

    $default  reduce using rule 123 (Literal)


State 70

  173 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 173 (DotSeparatedIdentifiers)


State 71

  104 DirectCallExpression: IdentifierPath .
  105                     | IdentifierPath . Arguments

    "("  shift, and go to state 122

    $default  reduce using rule 104 (DirectCallExpression)

    Arguments  go to state 123


State 72

  170 IdentifierPath: DotSeparatedIdentifiers .
  172 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "::" Identifier

    "::"  shift, and go to state 124

    $default  reduce using rule 170 (IdentifierPath)


State 73

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 125


State 74

  181 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 126
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 75

   20 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 127
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 167 (MaybeInitializers)

    Term                             go to state 128
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    TwoOrMoreArguments               go to state 129
    Initializers                     go to state 130
    Initializer                      go to state 131
    MaybeInitializers                go to state 132
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 76

   19 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 19 (ProgramFunctionDefinition)


State 77

   14 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 133

    $default  reduce using rule 156 (MaybeParameters)

    MaybeParameters  go to state 134


State 78

   13 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 135


State 79

   15 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   16               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 133

    $default  reduce using rule 156 (MaybeParameters)

    MaybeParameters  go to state 136


State 80

   17 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 137


State 81

    6 AttributedDefinition: "[" Attributes . "]" Definition
  181 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 138
    ","  shift, and go to state 74


State 82

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 83

  177 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 139
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 84

  175 Variable: Identifier .
  176 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 140

    $default  reduce using rule 175 (Variable)


State 85

  178 AttributedVariable: Variable .

    $default  reduce using rule 178 (AttributedVariable)


State 86

  174 Variable: TypedVariable .

    $default  reduce using rule 174 (Variable)


State 87

  107 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 141


State 88

  110 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 142


State 89

  109 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 143


State 90

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  108 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 144
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 91

  111 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 145


State 92

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  102           | "not" Term .
  103 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 102 (Expression)


State 93

   83 Expression: "+" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 83 (Expression)


State 94

   84 Expression: "-" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 84 (Expression)


State 95

   82 Expression: "(" error . ")"

    ")"  shift, and go to state 146


State 96

  106 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 147
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 97

   81 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 148
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 98

  114 List: "[" error . "]"

    "]"  shift, and go to state 149


State 99

  112 List: "[" "]" .

    $default  reduce using rule 112 (List)


State 100

   67 Terms: Terms . "," Term
  113 List: "[" Terms . "]"

    "]"  shift, and go to state 150
    ","  shift, and go to state 151


State 101

   68 Terms: Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  115 Range: "[" Term . ".." Term "]"

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    ".."       shift, and go to state 152
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 68 (Terms)


State 102

  171 IdentifierPath: "::" Identifier .

    $default  reduce using rule 171 (IdentifierPath)


State 103

  133 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 133 (ReferenceLiteral)


State 104

  103 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 153
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 105

   99 Expression: Term "and" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 159
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 106

   97 Expression: Term "or" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 160
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 107

   98 Expression: Term "xor" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 161
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 108

  101 Expression: Term "implies" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 162
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 109

   85 Expression: Term "+" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 163
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 110

   86 Expression: Term "-" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 164
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 111

   92 Expression: Term "=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 165
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 112

   93 Expression: Term "<" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 166
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 113

   94 Expression: Term ">" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 167
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 114

   87 Expression: Term "*" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 168
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 115

   88 Expression: Term "/" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 169
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 116

   89 Expression: Term "%" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 170
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 117

   90 Expression: Term "^" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 171
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 118

  100 Expression: Term "=>" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 172
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 119

   91 Expression: Term "!=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 173
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 120

   95 Expression: Term "<=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 174
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 121

   96 Expression: Term ">=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 175
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 122

  144 Arguments: "(" . Terms ")"
  145          | "(" . error ")"
  146          | "(" . ")"

    error          shift, and go to state 176
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    ")"            shift, and go to state 177
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 178
    Term                             go to state 179
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 123

  105 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 105 (DirectCallExpression)


State 124

  172 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 180


State 125

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 126

  181 Attributes: Attributes "," Attribute .

    $default  reduce using rule 181 (Attributes)


State 127

   81 Expression: "(" . Term ")"
   82           | "(" . error ")"
  106 IndirectCallExpression: "(" . "*" Term ")" Arguments
  147 TwoOrMoreArguments: "(" . Terms "," Term ")"

    error          shift, and go to state 95
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 96
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Terms                            go to state 181
    Term                             go to state 182
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 128

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  163 Initializer: Term .
  164            | Term . "->" Term

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "->"       shift, and go to state 183
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 163 (Initializer)


State 129

  165 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 184


State 130

  161 Initializers: Initializers . "," Initializer
  166 MaybeInitializers: Initializers .

    ","  shift, and go to state 185

    $default  reduce using rule 166 (MaybeInitializers)


State 131

  162 Initializers: Initializer .

    $default  reduce using rule 162 (Initializers)


State 132

   20 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 186


State 133

  154 MaybeParameters: "(" . Parameters ")"
  155                | "(" . error ")"

    error         shift, and go to state 187
    "in"          shift, and go to state 5
    "["           shift, and go to state 188
    "identifier"  shift, and go to state 6

    Parameters               go to state 189
    Identifier               go to state 190
    TypedVariable            go to state 191
    TypedAttributedVariable  go to state 192


State 134

   14 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 193


State 135

   13 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 194


State 136

   15 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   16               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 195
    "->"  shift, and go to state 196


State 137

   17 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    $default  reduce using rule 151 (MaybeFunctionParameters)

    Type                     go to state 197
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    FunctionParameters       go to state 198
    MaybeFunctionParameters  go to state 199
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 138

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "function"     shift, and go to state 18

    Definition                 go to state 200
    EnumerationDefinition      go to state 23
    DerivedDefinition          go to state 24
    RuleDefinition             go to state 25
    FunctionDefinition         go to state 26
    ProgramFunctionDefinition  go to state 27


State 139

  177 AttributedVariable: "[" Attributes . "]" Variable
  181 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 201
    ","  shift, and go to state 74


State 140

  176 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 202
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 141

  107 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 203
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 142

  110 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 204
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 143

  109 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 205
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 144

  108 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 206
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 145

  111 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 207
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 146

   82 Expression: "(" error ")" .

    $default  reduce using rule 82 (Expression)


State 147

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  106 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 208
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 148

   81 Expression: "(" Term ")" .

    $default  reduce using rule 81 (Expression)


State 149

  114 List: "[" error "]" .

    $default  reduce using rule 114 (List)


State 150

  113 List: "[" Terms "]" .

    $default  reduce using rule 113 (List)


State 151

   67 Terms: Terms "," . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 209
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 152

  115 Range: "[" Term ".." . Term "]"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 210
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 153

  103 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 103 (TypeCastingExpression)


State 154

  136 Type: BasicType .

    $default  reduce using rule 136 (Type)


State 155

  137 Type: ComposedType .

    $default  reduce using rule 137 (Type)


State 156

  138 Type: RelationType .

    $default  reduce using rule 138 (Type)


State 157

  139 Type: FixedSizedType .

    $default  reduce using rule 139 (Type)


State 158

  140 BasicType: IdentifierPath .
  141 ComposedType: IdentifierPath . "<" Types ">"
  142 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  143 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 211
    "'"  shift, and go to state 212

    "<"       [reduce using rule 140 (BasicType)]
    $default  reduce using rule 140 (BasicType)


State 159

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
   99           | Term "and" Term .
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "="   shift, and go to state 111
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "!="  shift, and go to state 119
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 99 (Expression)


State 160

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   97           | Term "or" Term .
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 105
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 97 (Expression)


State 161

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   98           | Term "xor" Term .
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 105
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 98 (Expression)


State 162

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  101           | Term "implies" Term .
  103 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 105
    "or"   shift, and go to state 106
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 101 (Expression)


State 163

   85 Expression: Term . "+" Term
   85           | Term "+" Term .
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 85 (Expression)


State 164

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   86           | Term "-" Term .
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 86 (Expression)


State 165

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   92           | Term "=" Term .
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 92 (Expression)


State 166

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   93           | Term "<" Term .
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 93 (Expression)


State 167

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   94           | Term ">" Term .
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 94 (Expression)


State 168

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   87           | Term "*" Term .
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 117

    $default  reduce using rule 87 (Expression)


State 169

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   88           | Term "/" Term .
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 117

    $default  reduce using rule 88 (Expression)


State 170

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   89           | Term "%" Term .
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 117

    $default  reduce using rule 89 (Expression)


State 171

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   90           | Term "^" Term .
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 90 (Expression)


State 172

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  100           | Term "=>" Term .
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 105
    "or"   shift, and go to state 106
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 100 (Expression)


State 173

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   91           | Term "!=" Term .
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 91 (Expression)


State 174

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   95           | Term "<=" Term .
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 95 (Expression)


State 175

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   96           | Term ">=" Term .
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 96 (Expression)


State 176

  145 Arguments: "(" error . ")"

    ")"  shift, and go to state 213


State 177

  146 Arguments: "(" ")" .

    $default  reduce using rule 146 (Arguments)


State 178

   67 Terms: Terms . "," Term
  144 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 214
    ","  shift, and go to state 151


State 179

   68 Terms: Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 68 (Terms)


State 180

  172 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier .

    $default  reduce using rule 172 (DotSeparatedIdentifiers)


State 181

   67 Terms: Terms . "," Term
  147 TwoOrMoreArguments: "(" Terms . "," Term ")"

    ","  shift, and go to state 215


State 182

   68 Terms: Term .
   81 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 148
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 68 (Terms)


State 183

  164 Initializer: Term "->" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 216
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 184

  165 Initializer: TwoOrMoreArguments "->" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 217
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 185

  161 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 127
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 128
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    TwoOrMoreArguments               go to state 129
    Initializer                      go to state 218
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 186

   20 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 187

  155 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 219


State 188

  179 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 220
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 189

  152 Parameters: Parameters . "," TypedAttributedVariable
  154 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 221
    ","  shift, and go to state 222


State 190

  176 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 140


State 191

  180 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 180 (TypedAttributedVariable)


State 192

  153 Parameters: TypedAttributedVariable .

    $default  reduce using rule 153 (Parameters)


State 193

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 223
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 194

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 224
    "in"          shift, and go to state 5
    "["           shift, and go to state 225
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 226
    Enumerators           go to state 227
    Identifier            go to state 228


State 195

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 242
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 196

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 256
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 197

  149 FunctionParameters: Type .

    $default  reduce using rule 149 (FunctionParameters)


State 198

  148 FunctionParameters: FunctionParameters . "*" Type
  150 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 257

    $default  reduce using rule 150 (MaybeFunctionParameters)


State 199

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 258


State 200

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 201

  177 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 84
    Variable       go to state 259
    TypedVariable  go to state 86


State 202

  176 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 176 (TypedVariable)


State 203

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  107 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 260
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 204

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  110 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 261
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 205

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  109 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 262
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 206

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  108 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 263
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 207

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  111 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 264
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 208

  106 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 122

    Arguments  go to state 265


State 209

   67 Terms: Terms "," Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 67 (Terms)


State 210

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  115 Range: "[" Term ".." Term . "]"

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "]"        shift, and go to state 266
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 211

  141 ComposedType: IdentifierPath "<" . Types ">"
  142 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    $default  reduce using rule 151 (MaybeFunctionParameters)

    Types                    go to state 267
    Type                     go to state 268
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    FunctionParameters       go to state 198
    MaybeFunctionParameters  go to state 269
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 212

  143 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 270
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 213

  145 Arguments: "(" error ")" .

    $default  reduce using rule 145 (Arguments)


State 214

  144 Arguments: "(" Terms ")" .

    $default  reduce using rule 144 (Arguments)


State 215

   67 Terms: Terms "," . Term
  147 TwoOrMoreArguments: "(" Terms "," . Term ")"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 271
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 216

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  164 Initializer: Term "->" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 164 (Initializer)


State 217

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  165 Initializer: TwoOrMoreArguments "->" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 165 (Initializer)


State 218

  161 Initializers: Initializers "," Initializer .

    $default  reduce using rule 161 (Initializers)


State 219

  155 MaybeParameters: "(" error ")" .

    $default  reduce using rule 155 (MaybeParameters)


State 220

  179 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  181 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 272
    ","  shift, and go to state 74


State 221

  154 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 154 (MaybeParameters)


State 222

  152 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 188
    "identifier"  shift, and go to state 6

    Identifier               go to state 190
    TypedVariable            go to state 191
    TypedAttributedVariable  go to state 273


State 223

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 274


State 224

   23 EnumeratorDefinition: error .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 225

   22 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 275
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 226

   25 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 227

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   24 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 276
    ","  shift, and go to state 277


State 228

   21 EnumeratorDefinition: Identifier .

    $default  reduce using rule 21 (EnumeratorDefinition)


State 229

   59 SequenceRule: "seq" . Rules "endseq"
   61             | "seq" . error "endseq"

    error         shift, and go to state 278
    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 279
    Rules                    go to state 280
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 230

   55 BlockRule: "par" . Rules "endpar"
   57          | "par" . error "endpar"

    error         shift, and go to state 281
    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 279
    Rules                    go to state 282
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 231

   39 SkipRule: "skip" .

    $default  reduce using rule 39 (SkipRule)


State 232

   49 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 283


State 233

   50 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   51           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 284


State 234

   52 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 83
    "identifier"  shift, and go to state 6

    Identifier          go to state 84
    Variable            go to state 85
    TypedVariable       go to state 86
    AttributedVariable  go to state 285


State 235

   53 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 286
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 236

   63 CallRule: "call" . DirectCallExpression
   65         | "call" . IndirectCallExpression

    "in"          shift, and go to state 5
    "("           shift, and go to state 239
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    DirectCallExpression     go to state 287
    IndirectCallExpression   go to state 288
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 237

   40 ConditionalRule: "if" . Term "then" Rule
   41                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 289
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 238

   42 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   43         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 290
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 239

  106 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 96


State 240

   54 BlockRule: "{" . Rules "}"
   56          | "{" . error "}"

    error         shift, and go to state 291
    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 279
    Rules                    go to state 292
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 241

   58 SequenceRule: "{|" . Rules "|}"
   60             | "{|" . error "|}"

    error         shift, and go to state 293
    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 279
    Rules                    go to state 294
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 242

   15 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 15 (RuleDefinition)


State 243

   26 Rule: SkipRule .

    $default  reduce using rule 26 (Rule)


State 244

   27 Rule: ConditionalRule .

    $default  reduce using rule 27 (Rule)


State 245

   28 Rule: CaseRule .

    $default  reduce using rule 28 (Rule)


State 246

   29 Rule: LetRule .

    $default  reduce using rule 29 (Rule)


State 247

   30 Rule: ForallRule .

    $default  reduce using rule 30 (Rule)


State 248

   31 Rule: ChooseRule .

    $default  reduce using rule 31 (Rule)


State 249

   32 Rule: IterateRule .

    $default  reduce using rule 32 (Rule)


State 250

   33 Rule: BlockRule .

    $default  reduce using rule 33 (Rule)


State 251

   34 Rule: SequenceRule .

    $default  reduce using rule 34 (Rule)


State 252

   35 Rule: UpdateRule .

    $default  reduce using rule 35 (Rule)


State 253

   36 Rule: CallRule .

    $default  reduce using rule 36 (Rule)


State 254

   62 UpdateRule: DirectCallExpression . ":=" Term
   64 CallRule: DirectCallExpression .

    ":="  shift, and go to state 295

    $default  reduce using rule 64 (CallRule)


State 255

   66 CallRule: IndirectCallExpression .

    $default  reduce using rule 66 (CallRule)


State 256

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 296


State 257

  148 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 297
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 258

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 298
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 259

  177 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 177 (AttributedVariable)


State 260

  107 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 299
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 261

  110 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 300
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 262

  109 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 301
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 263

  108 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 302
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 264

  111 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 303
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 265

  106 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 106 (IndirectCallExpression)


State 266

  115 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 115 (Range)


State 267

  134 Types: Types . "," Type
  141 ComposedType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 304
    ">"  shift, and go to state 305


State 268

  135 Types: Type .
  149 FunctionParameters: Type .

    "*"       reduce using rule 149 (FunctionParameters)
    "->"      reduce using rule 149 (FunctionParameters)
    $default  reduce using rule 135 (Types)


State 269

  142 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 306


State 270

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  143 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 143 (FixedSizedType)


State 271

   67 Terms: Terms "," Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  147 TwoOrMoreArguments: "(" Terms "," Term . ")"

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 307
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 67 (Terms)


State 272

  179 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 190
    TypedVariable  go to state 308


State 273

  152 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 152 (Parameters)


State 274

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 309
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 275

   22 EnumeratorDefinition: "[" Attributes . "]" Identifier
  181 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 310
    ","  shift, and go to state 74


State 276

   13 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 13 (EnumerationDefinition)


State 277

   24 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 224
    "in"          shift, and go to state 5
    "["           shift, and go to state 225
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 311
    Identifier            go to state 228


State 278

   61 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 312


State 279

   38 Rules: Rule .

    $default  reduce using rule 38 (Rules)


State 280

   37 Rules: Rules . Rule
   59 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 229
    "endseq"      shift, and go to state 313
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 314
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 281

   57 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 315


State 282

   37 Rules: Rules . Rule
   55 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "endpar"      shift, and go to state 316
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 314
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 283

   49 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 317


State 284

   50 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   51           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 318


State 285

   52 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 319


State 286

   53 IterateRule: "iterate" Rule .

    $default  reduce using rule 53 (IterateRule)


State 287

   63 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 63 (CallRule)


State 288

   65 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 65 (CallRule)


State 289

   40 ConditionalRule: "if" Term . "then" Rule
   41                | "if" Term . "then" Rule "else" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 320
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 290

   42 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   43         | "case" Term . "of" "{" error "}"
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 321
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 291

   56 BlockRule: "{" error . "}"

    "}"  shift, and go to state 322


State 292

   37 Rules: Rules . Rule
   54 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "}"           shift, and go to state 323
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 314
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 293

   60 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 324


State 294

   37 Rules: Rules . Rule
   58 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "|}"          shift, and go to state 325
    "identifier"  shift, and go to state 6

    Rule                     go to state 314
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 295

   62 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 326
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 296

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 327
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 297

  148 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 148 (FunctionParameters)


State 298

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 328

    $default  reduce using rule 158 (MaybeDefined)

    MaybeDefined  go to state 329


State 299

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  107 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 107 (LetExpression)


State 300

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  110 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 110 (UniversalQuantifierExpression)


State 301

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  109 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 109 (ChooseExpression)


State 302

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  108 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 108 (ConditionalExpression)


State 303

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  111 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 111 (ExistentialQuantifierExpression)


State 304

  134 Types: Types "," . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 330
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 305

  141 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 141 (ComposedType)


State 306

  142 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 41
    "identifier"  shift, and go to state 6

    Type                     go to state 331
    BasicType                go to state 154
    ComposedType             go to state 155
    RelationType             go to state 156
    FixedSizedType           go to state 157
    Identifier               go to state 70
    IdentifierPath           go to state 158
    DotSeparatedIdentifiers  go to state 72


State 307

  147 TwoOrMoreArguments: "(" Terms "," Term ")" .

    $default  reduce using rule 147 (TwoOrMoreArguments)


State 308

  179 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 179 (TypedAttributedVariable)


State 309

   14 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 14 (DerivedDefinition)


State 310

   22 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 332


State 311

   24 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 24 (Enumerators)


State 312

   61 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 313

   59 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 59 (SequenceRule)


State 314

   37 Rules: Rules Rule .

    $default  reduce using rule 37 (Rules)


State 315

   57 BlockRule: "par" error "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 316

   55 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 55 (BlockRule)


State 317

   49 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 333
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 318

   50 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   51           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 334
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 319

   52 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 335
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 320

   40 ConditionalRule: "if" Term "then" . Rule
   41                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 336
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 321

   42 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   43         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 337


State 322

   56 BlockRule: "{" error "}" .

    $default  reduce using rule 56 (BlockRule)


State 323

   54 BlockRule: "{" Rules "}" .

    $default  reduce using rule 54 (BlockRule)


State 324

   60 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 325

   58 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 58 (SequenceRule)


State 326

   62 UpdateRule: DirectCallExpression ":=" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 62 (UpdateRule)


State 327

   16 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 328

  157 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 338


State 329

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 339

    $default  reduce using rule 160 (MaybeInitially)

    MaybeInitially  go to state 340


State 330

  134 Types: Types "," Type .

    $default  reduce using rule 134 (Types)


State 331

  142 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 341


State 332

   22 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 333

   49 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 342
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 334

   50 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   51           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 343
    "with"     shift, and go to state 344
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 335

   52 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 345
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 336

   40 ConditionalRule: "if" Term "then" Rule .
   41                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 346

    $default  reduce using rule 40 (ConditionalRule)


State 337

   42 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   43         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 347
    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "default"      shift, and go to state 348
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "_"            shift, and go to state 349
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 350
    CaseLabels                       go to state 351
    Term                             go to state 352
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 338

  157 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 353
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 339

  159 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 354


State 340

   17 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 17 (FunctionDefinition)


State 341

  142 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 142 (RelationType)


State 342

   49 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 355
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 343

   50 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 356
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 344

   51 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    Term                             go to state 357
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 345

   52 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 358
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 346

   41 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 359
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 347

   43 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 360


State 348

   44 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 361


State 349

   45 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 362


State 350

   48 CaseLabels: CaseLabel .

    $default  reduce using rule 48 (CaseLabels)


State 351

   42 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   47 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "default"      shift, and go to state 348
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 39
    "["            shift, and go to state 40
    "}"            shift, and go to state 363
    "::"           shift, and go to state 41
    "_"            shift, and go to state 349
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 364
    Term                             go to state 352
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 352

   46 CaseLabel: Term . ":" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ":"        shift, and go to state 365
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 353

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type
  157 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "}"        shift, and go to state 366
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 354

  159 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 28
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 29
    "choose"       shift, and go to state 30
    "if"           shift, and go to state 31
    "exists"       shift, and go to state 32
    "undef"        shift, and go to state 33
    "false"        shift, and go to state 34
    "true"         shift, and go to state 35
    "not"          shift, and go to state 36
    "+"            shift, and go to state 37
    "-"            shift, and go to state 38
    "("            shift, and go to state 127
    "["            shift, and go to state 40
    "::"           shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "decimal"      shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 6

    $default  reduce using rule 167 (MaybeInitializers)

    Term                             go to state 128
    Expression                       go to state 50
    TypeCastingExpression            go to state 51
    DirectCallExpression             go to state 52
    IndirectCallExpression           go to state 53
    LetExpression                    go to state 54
    ConditionalExpression            go to state 55
    ChooseExpression                 go to state 56
    UniversalQuantifierExpression    go to state 57
    ExistentialQuantifierExpression  go to state 58
    List                             go to state 59
    Range                            go to state 60
    Literal                          go to state 61
    UndefinedLiteral                 go to state 62
    BooleanLiteral                   go to state 63
    IntegerLiteral                   go to state 64
    RationalLiteral                  go to state 65
    DecimalLiteral                   go to state 66
    BinaryLiteral                    go to state 67
    StringLiteral                    go to state 68
    ReferenceLiteral                 go to state 69
    TwoOrMoreArguments               go to state 129
    Initializers                     go to state 130
    Initializer                      go to state 131
    MaybeInitializers                go to state 367
    Identifier                       go to state 70
    IdentifierPath                   go to state 71
    DotSeparatedIdentifiers          go to state 72


State 355

   49 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 49 (LetRule)


State 356

   50 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 50 (ForallRule)


State 357

   51 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "=>" Term
  101           | Term . "implies" Term
  103 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 368
    "as"       shift, and go to state 104
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 358

   52 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ChooseRule)


State 359

   41 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 41 (ConditionalRule)


State 360

   43 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 43 (CaseRule)


State 361

   44 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 369
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 362

   45 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 370
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 363

   42 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 42 (CaseRule)


State 364

   47 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 47 (CaseLabels)


State 365

   46 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 371
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 366

  157 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 157 (MaybeDefined)


State 367

  159 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 372


State 368

   51 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"         shift, and go to state 229
    "par"         shift, and go to state 230
    "skip"        shift, and go to state 231
    "let"         shift, and go to state 232
    "in"          shift, and go to state 5
    "forall"      shift, and go to state 233
    "choose"      shift, and go to state 234
    "iterate"     shift, and go to state 235
    "call"        shift, and go to state 236
    "if"          shift, and go to state 237
    "case"        shift, and go to state 238
    "("           shift, and go to state 239
    "{"           shift, and go to state 240
    "::"          shift, and go to state 41
    "{|"          shift, and go to state 241
    "identifier"  shift, and go to state 6

    Rule                     go to state 373
    SkipRule                 go to state 243
    ConditionalRule          go to state 244
    CaseRule                 go to state 245
    LetRule                  go to state 246
    ForallRule               go to state 247
    ChooseRule               go to state 248
    IterateRule              go to state 249
    BlockRule                go to state 250
    SequenceRule             go to state 251
    UpdateRule               go to state 252
    CallRule                 go to state 253
    DirectCallExpression     go to state 254
    IndirectCallExpression   go to state 255
    Identifier               go to state 70
    IdentifierPath           go to state 71
    DotSeparatedIdentifiers  go to state 72


State 369

   44 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 44 (CaseLabel)


State 370

   45 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 45 (CaseLabel)


State 371

   46 CaseLabel: Term ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 372

  159 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 159 (MaybeInitially)


State 373

   51 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 51 (ForallRule)
