Terminals unused in grammar

   "option"
   "dumps"
   DIRECT_CALL_EXPR_NO_ARG


State 53 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 261 conflicts: 1 shift/reduce
State 282 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 MaybeFunctionAttributes: "(" MaybeIdentifiers ")"
   21                        | %empty

   22 ProgramFunctionDefinition: "init" Identifier
   23                          | "init" "{" MaybeInitializers "}"

   24 Initializer: Term
   25            | Term "->" Term
   26            | Arguments "->" Term

   27 Initializers: Initializers "," Initializer
   28             | Initializer

   29 MaybeInitializers: Initializers
   30                  | %empty

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   33 Identifier: "identifier"

   34 Identifiers: Identifiers "," Identifier
   35            | Identifier

   36 MaybeIdentifiers: Identifiers
   37                 | %empty

   38 Variable: Identifier ":" Type
   39         | Identifier

   40 Parameters: Parameters "," Variable
   41           | Variable

   42 MaybeParameters: "(" Parameters ")"
   43                | %empty

   44 Type: BasicType
   45     | ComposedType
   46     | FixedSizedType
   47     | RangedType

   48 BasicType: Identifier

   49 ComposedType: Identifier "(" Types ")"

   50 FixedSizedType: Identifier "<" Term ">"

   51 RangedType: Identifier "<" Term ".." Term ">"

   52 Types: Types "," Type
   53      | Type

   54 Atom: RuleReference
   55     | BitNumber
   56     | IntegerNumber
   57     | FloatingNumber
   58     | RationalNumber
   59     | String
   60     | Undefined
   61     | Boolean

   62 Undefined: "undef"

   63 Boolean: "true"
   64        | "false"

   65 String: "string"

   66 BitNumber: "binary"
   67          | "hexadecimal"

   68 IntegerNumber: "integer"

   69 FloatingNumber: "floating"

   70 RationalNumber: "rational"

   71 RuleReference: "@" "identifier"

   72 Term: DirectCallExpression
   73     | IndirectCallExpression
   74     | ConditionalExpression
   75     | UniversalQuantifierExpression
   76     | ExistentialQuantifierExpression
   77     | Expression
   78     | List
   79     | Range
   80     | Atom

   81 Expression: "(" Expression ")"
   82           | "+" Term
   83           | "(" Term ")"
   84           | "-" Term
   85           | Term "+" Term
   86           | Term "-" Term
   87           | Term "*" Term
   88           | Term "/" Term
   89           | Term "%" Term
   90           | Term "^" Term
   91           | Term "!=" Term
   92           | Term "=" Term
   93           | Term "<" Term
   94           | Term ">" Term
   95           | Term "<=" Term
   96           | Term ">=" Term
   97           | Term "or" Term
   98           | Term "xor" Term
   99           | Term "and" Term
  100           | Term "implies" Term
  101           | "not" Term

  102 Range: "[" Term ".." Term "]"

  103 List: "[" "]"
  104     | "[" Term "]"
  105     | "[" Terms "]"

  106 Terms: Terms "," Term
  107      | Term

  108 Arguments: "(" Terms ")"
  109          | "(" ")"

  110 DirectCallExpression: Identifier
  111                     | Identifier Arguments

  112 IndirectCallExpression: "(" "*" Term ")" Arguments

  113 ConditionalExpression: "if" Term "then" Term "else" Term

  114 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  115 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  116 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  117               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  118 Rule: SkipRule
  119     | ConditionalRule
  120     | CaseRule
  121     | LetRule
  122     | ForallRule
  123     | IterateRule
  124     | BlockRule
  125     | SequenceRule
  126     | UpdateRule
  127     | CallRule

  128 Rules: Rules Rule
  129      | Rule

  130 SkipRule: "skip"

  131 ConditionalRule: "if" Term "then" Rule
  132                | "if" Term "then" Rule "else" Rule

  133 CaseRule: "case" Term "of" "{" CaseLabels "}"

  134 CaseLabel: "default" ":" Rule
  135          | "_" ":" Rule
  136          | Term ":" Rule

  137 CaseLabels: CaseLabel CaseLabels
  138           | CaseLabel

  139 LetRule: "let" Variable "=" Term "in" Rule

  140 ForallRule: "forall" Variable "in" Term "do" Rule

  141 IterateRule: "iterate" Rule

  142 BlockRule: "{" Rules "}"
  143          | "par" Rules "endpar"

  144 SequenceRule: "{|" Rules "|}"
  145             | "seq" Rules "endseq"

  146 UpdateRule: DirectCallExpression ":=" Term

  147 CallRule: "call" DirectCallExpression
  148         | DirectCallExpression
  149         | "call" IndirectCallExpression
  150         | IndirectCallExpression

  151 Attribute: BasicAttribute
  152          | ExpressionAttribute

  153 Attributes: Attributes "," Attribute
  154           | Attribute

  155 BasicAttribute: Identifier

  156 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 22 23
"option" (260)
"derived" (261) 31
"enum" (262) 32
"rule" (263) 116 117
"dumps" (264)
"function" (265) 10
"initially" (266) 12
"defined" (267) 14
"seq" (268) 145
"endseq" (269) 145
"par" (270) 143
"endpar" (271) 143
"skip" (272) 130
"let" (273) 139
"in" (274) 114 115 139 140
"forall" (275) 114 140
"iterate" (276) 141
"do" (277) 140
"call" (278) 147 149
"if" (279) 113 131 132
"then" (280) 113 131 132
"else" (281) 113 132
"case" (282) 133
"of" (283) 133
"default" (284) 134
"holds" (285) 114
"exists" (286) 115
"with" (287) 115
"undef" (288) 62
"false" (289) 64
"true" (290) 63
"and" (291) 99
"or" (292) 97
"xor" (293) 98
"implies" (294) 100
"not" (295) 101
"+" (296) 82 85
"-" (297) 84 86
"=" (298) 31 32 92 116 117 139
"(" (299) 20 42 49 81 83 108 109 112
")" (300) 20 42 49 81 83 108 109 112
"[" (301) 6 102 103 104 105
"]" (302) 6 102 103 104 105
"{" (303) 12 14 23 32 133 142
"}" (304) 12 14 23 32 133 142
":" (305) 10 38 134 135 136
"_" (306) 135
"@" (307) 71
"," (308) 27 34 40 52 106 153
"<" (309) 50 51 93
">" (310) 50 51 94
"*" (311) 16 87 112
"/" (312) 88
"%" (313) 89
"^" (314) 90
".." (315) 51 102
"->" (316) 10 25 26 31 117
":=" (317) 146
"!=" (318) 91
"<=" (319) 95
">=" (320) 96
"{|" (321) 144
"|}" (322) 144
"binary" (323) 66
"hexadecimal" (324) 67
"integer" (325) 68
"rational" (326) 70
"floating" (327) 69
"string" (328) 65
"identifier" (329) 33 71
UPLUS (330)
UMINUS (331)
DIRECT_CALL_EXPR_NO_ARG (332)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
Specification (79)
    on left: 1, on right: 0
Definition (80)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (81)
    on left: 6 7, on right: 8 9
Definitions (82)
    on left: 8 9, on right: 1 8
FunctionDefinition (83)
    on left: 10 11, on right: 2
MaybeInitially (84)
    on left: 12 13, on right: 10
MaybeDefined (85)
    on left: 14 15, on right: 10
FunctionParameters (86)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (87)
    on left: 18 19, on right: 10
MaybeFunctionAttributes (88)
    on left: 20 21, on right: 10
ProgramFunctionDefinition (89)
    on left: 22 23, on right: 11
Initializer (90)
    on left: 24 25 26, on right: 27 28
Initializers (91)
    on left: 27 28, on right: 27 29
MaybeInitializers (92)
    on left: 29 30, on right: 12 23
DerivedDefinition (93)
    on left: 31, on right: 3
EnumerationDefinition (94)
    on left: 32, on right: 5
Identifier (95)
    on left: 33, on right: 10 22 31 32 34 35 38 39 48 49 50 51 110
    111 116 117 155 156
Identifiers (96)
    on left: 34 35, on right: 32 34 36
MaybeIdentifiers (97)
    on left: 36 37, on right: 20
Variable (98)
    on left: 38 39, on right: 40 41 114 115 139 140
Parameters (99)
    on left: 40 41, on right: 40 42
MaybeParameters (100)
    on left: 42 43, on right: 31 116 117
Type (101)
    on left: 44 45 46 47, on right: 10 16 17 31 38 52 53 117
BasicType (102)
    on left: 48, on right: 44
ComposedType (103)
    on left: 49, on right: 45
FixedSizedType (104)
    on left: 50, on right: 46
RangedType (105)
    on left: 51, on right: 47
Types (106)
    on left: 52 53, on right: 49 52
Atom (107)
    on left: 54 55 56 57 58 59 60 61, on right: 80
Undefined (108)
    on left: 62, on right: 60
Boolean (109)
    on left: 63 64, on right: 61
String (110)
    on left: 65, on right: 59
BitNumber (111)
    on left: 66 67, on right: 55
IntegerNumber (112)
    on left: 68, on right: 56
FloatingNumber (113)
    on left: 69, on right: 57
RationalNumber (114)
    on left: 70, on right: 58
RuleReference (115)
    on left: 71, on right: 54
Term (116)
    on left: 72 73 74 75 76 77 78 79 80, on right: 14 24 25 26 31 50
    51 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 104 106 107 112 113 114 115 131 132 133 136 139 140 146 156
Expression (117)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98
    99 100 101, on right: 77 81
Range (118)
    on left: 102, on right: 79
List (119)
    on left: 103 104 105, on right: 78
Terms (120)
    on left: 106 107, on right: 105 106 108
Arguments (121)
    on left: 108 109, on right: 26 111 112
DirectCallExpression (122)
    on left: 110 111, on right: 72 146 147 148
IndirectCallExpression (123)
    on left: 112, on right: 73 149 150
ConditionalExpression (124)
    on left: 113, on right: 74
UniversalQuantifierExpression (125)
    on left: 114, on right: 75
ExistentialQuantifierExpression (126)
    on left: 115, on right: 76
RuleDefinition (127)
    on left: 116 117, on right: 4
Rule (128)
    on left: 118 119 120 121 122 123 124 125 126 127, on right: 116
    117 128 129 131 132 134 135 136 139 140 141
Rules (129)
    on left: 128 129, on right: 128 142 143 144 145
SkipRule (130)
    on left: 130, on right: 118
ConditionalRule (131)
    on left: 131 132, on right: 119
CaseRule (132)
    on left: 133, on right: 120
CaseLabel (133)
    on left: 134 135 136, on right: 137 138
CaseLabels (134)
    on left: 137 138, on right: 133 137
LetRule (135)
    on left: 139, on right: 121
ForallRule (136)
    on left: 140, on right: 122
IterateRule (137)
    on left: 141, on right: 123
BlockRule (138)
    on left: 142 143, on right: 124
SequenceRule (139)
    on left: 144 145, on right: 125
UpdateRule (140)
    on left: 146, on right: 126
CallRule (141)
    on left: 147 148 149 150, on right: 127
Attribute (142)
    on left: 151 152, on right: 153 154
Attributes (143)
    on left: 153 154, on right: 6 153
BasicAttribute (144)
    on left: 155, on right: 151
ExpressionAttribute (145)
    on left: 156, on right: 152


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   22 ProgramFunctionDefinition: "init" . Identifier
   23                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "identifier"  shift, and go to state 19

    Identifier  go to state 20


State 4

   31 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 21


State 5

   32 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier  go to state 22


State 6

  116 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  117               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 23


State 7

   10 FunctionDefinition: "function" . MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "("  shift, and go to state 24

    $default  reduce using rule 21 (MaybeFunctionAttributes)

    MaybeFunctionAttributes  go to state 25


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 19

    Identifier           go to state 26
    Attribute            go to state 27
    Attributes           go to state 28
    BasicAttribute       go to state 29
    ExpressionAttribute  go to state 30


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 31
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   23 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    $default  reduce using rule 30 (MaybeInitializers)

    Initializer                      go to state 50
    Initializers                     go to state 51
    MaybeInitializers                go to state 52
    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 63
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    Arguments                        go to state 67
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 19

   33 Identifier: "identifier" .

    $default  reduce using rule 33 (Identifier)


State 20

   22 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 21

   31 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 73

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 74


State 22

   32 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 75


State 23

  116 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  117               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 73

    $default  reduce using rule 43 (MaybeParameters)

    MaybeParameters  go to state 76


State 24

   20 MaybeFunctionAttributes: "(" . MaybeIdentifiers ")"

    "identifier"  shift, and go to state 19

    $default  reduce using rule 37 (MaybeIdentifiers)

    Identifier        go to state 77
    Identifiers       go to state 78
    MaybeIdentifiers  go to state 79


State 25

   10 FunctionDefinition: "function" MaybeFunctionAttributes . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier  go to state 80


State 26

  155 BasicAttribute: Identifier .
  156 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    $default  reduce using rule 155 (BasicAttribute)

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 82
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 27

  154 Attributes: Attribute .

    $default  reduce using rule 154 (Attributes)


State 28

    6 AttributedDefinition: "[" Attributes . "]" Definition
  153 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 83
    ","  shift, and go to state 84


State 29

  151 Attribute: BasicAttribute .

    $default  reduce using rule 151 (Attribute)


State 30

  152 Attribute: ExpressionAttribute .

    $default  reduce using rule 152 (Attribute)


State 31

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 32

  114 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 86


State 33

  113 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 87
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 34

  115 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 88


State 35

   62 Undefined: "undef" .

    $default  reduce using rule 62 (Undefined)


State 36

   64 Boolean: "false" .

    $default  reduce using rule 64 (Boolean)


State 37

   63 Boolean: "true" .

    $default  reduce using rule 63 (Boolean)


State 38

  101 Expression: "not" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 89
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 39

   82 Expression: "+" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 90
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 40

   84 Expression: "-" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 91
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 41

   81 Expression: "(" . Expression ")"
   83           | "(" . Term ")"
  108 Arguments: "(" . Terms ")"
  109          | "(" . ")"
  112 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    ")"            shift, and go to state 92
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "*"            shift, and go to state 93
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 94
    Expression                       go to state 95
    Range                            go to state 65
    List                             go to state 66
    Terms                            go to state 96
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 42

  102 Range: "[" . Term ".." Term "]"
  103 List: "[" . "]"
  104     | "[" . Term "]"
  105     | "[" . Terms "]"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "]"            shift, and go to state 97
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 98
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    Terms                            go to state 99
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 43

   71 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 100


State 44

   66 BitNumber: "binary" .

    $default  reduce using rule 66 (BitNumber)


State 45

   67 BitNumber: "hexadecimal" .

    $default  reduce using rule 67 (BitNumber)


State 46

   68 IntegerNumber: "integer" .

    $default  reduce using rule 68 (IntegerNumber)


State 47

   70 RationalNumber: "rational" .

    $default  reduce using rule 70 (RationalNumber)


State 48

   69 FloatingNumber: "floating" .

    $default  reduce using rule 69 (FloatingNumber)


State 49

   65 String: "string" .

    $default  reduce using rule 65 (String)


State 50

   28 Initializers: Initializer .

    $default  reduce using rule 28 (Initializers)


State 51

   27 Initializers: Initializers . "," Initializer
   29 MaybeInitializers: Initializers .

    ","  shift, and go to state 101

    $default  reduce using rule 29 (MaybeInitializers)


State 52

   23 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 102


State 53

  110 DirectCallExpression: Identifier .
  111                     | Identifier . Arguments

    "("  shift, and go to state 103

    "("       [reduce using rule 110 (DirectCallExpression)]
    $default  reduce using rule 110 (DirectCallExpression)

    Arguments  go to state 104


State 54

   80 Term: Atom .

    $default  reduce using rule 80 (Term)


State 55

   60 Atom: Undefined .

    $default  reduce using rule 60 (Atom)


State 56

   61 Atom: Boolean .

    $default  reduce using rule 61 (Atom)


State 57

   59 Atom: String .

    $default  reduce using rule 59 (Atom)


State 58

   55 Atom: BitNumber .

    $default  reduce using rule 55 (Atom)


State 59

   56 Atom: IntegerNumber .

    $default  reduce using rule 56 (Atom)


State 60

   57 Atom: FloatingNumber .

    $default  reduce using rule 57 (Atom)


State 61

   58 Atom: RationalNumber .

    $default  reduce using rule 58 (Atom)


State 62

   54 Atom: RuleReference .

    $default  reduce using rule 54 (Atom)


State 63

   24 Initializer: Term .
   25            | Term . "->" Term
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "->"       shift, and go to state 118
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 24 (Initializer)


State 64

   77 Term: Expression .

    $default  reduce using rule 77 (Term)


State 65

   79 Term: Range .

    $default  reduce using rule 79 (Term)


State 66

   78 Term: List .

    $default  reduce using rule 78 (Term)


State 67

   26 Initializer: Arguments . "->" Term

    "->"  shift, and go to state 122


State 68

   72 Term: DirectCallExpression .

    $default  reduce using rule 72 (Term)


State 69

   73 Term: IndirectCallExpression .

    $default  reduce using rule 73 (Term)


State 70

   74 Term: ConditionalExpression .

    $default  reduce using rule 74 (Term)


State 71

   75 Term: UniversalQuantifierExpression .

    $default  reduce using rule 75 (Term)


State 72

   76 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 76 (Term)


State 73

   42 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 123
    Parameters  go to state 124


State 74

   31 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 125


State 75

   32 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 126


State 76

  116 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  117               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 127
    "->"  shift, and go to state 128


State 77

   35 Identifiers: Identifier .

    $default  reduce using rule 35 (Identifiers)


State 78

   34 Identifiers: Identifiers . "," Identifier
   36 MaybeIdentifiers: Identifiers .

    ","  shift, and go to state 129

    $default  reduce using rule 36 (MaybeIdentifiers)


State 79

   20 MaybeFunctionAttributes: "(" MaybeIdentifiers . ")"

    ")"  shift, and go to state 130


State 80

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 131


State 81

   81 Expression: "(" . Expression ")"
   83           | "(" . Term ")"
  112 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "*"            shift, and go to state 93
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 132
    Expression                       go to state 95
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 82

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  156 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 156 (ExpressionAttribute)


State 83

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 133
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 84

  153 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 19

    Identifier           go to state 26
    Attribute            go to state 134
    BasicAttribute       go to state 29
    ExpressionAttribute  go to state 30


State 85

   38 Variable: Identifier . ":" Type
   39         | Identifier .

    ":"  shift, and go to state 135

    $default  reduce using rule 39 (Variable)


State 86

  114 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 136


State 87

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  113 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 137
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 88

  115 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 138


State 89

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  101           | "not" Term .

    $default  reduce using rule 101 (Expression)


State 90

   82 Expression: "+" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    $default  reduce using rule 82 (Expression)


State 91

   84 Expression: "-" Term .
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    $default  reduce using rule 84 (Expression)


State 92

  109 Arguments: "(" ")" .

    $default  reduce using rule 109 (Arguments)


State 93

  112 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 139
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 94

   83 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  107 Terms: Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 140
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    ")"       [reduce using rule 107 (Terms)]
    $default  reduce using rule 107 (Terms)


State 95

   77 Term: Expression .
   81 Expression: "(" Expression . ")"

    ")"  shift, and go to state 141

    ")"       [reduce using rule 77 (Term)]
    $default  reduce using rule 77 (Term)


State 96

  106 Terms: Terms . "," Term
  108 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 142
    ","  shift, and go to state 143


State 97

  103 List: "[" "]" .

    $default  reduce using rule 103 (List)


State 98

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  102 Range: "[" Term . ".." Term "]"
  104 List: "[" Term . "]"
  107 Terms: Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "]"        shift, and go to state 144
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    ".."       shift, and go to state 145
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    "]"       [reduce using rule 107 (Terms)]
    $default  reduce using rule 107 (Terms)


State 99

  105 List: "[" Terms . "]"
  106 Terms: Terms . "," Term

    "]"  shift, and go to state 146
    ","  shift, and go to state 143


State 100

   71 RuleReference: "@" "identifier" .

    $default  reduce using rule 71 (RuleReference)


State 101

   27 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Initializer                      go to state 147
    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 63
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    Arguments                        go to state 67
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 102

   23 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 23 (ProgramFunctionDefinition)


State 103

  108 Arguments: "(" . Terms ")"
  109          | "(" . ")"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    ")"            shift, and go to state 92
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 148
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    Terms                            go to state 96
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 104

  111 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 111 (DirectCallExpression)


State 105

   99 Expression: Term "and" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 149
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 106

   97 Expression: Term "or" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 150
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 107

   98 Expression: Term "xor" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 151
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 108

  100 Expression: Term "implies" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 152
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 109

   85 Expression: Term "+" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 153
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 110

   86 Expression: Term "-" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 154
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 111

   92 Expression: Term "=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 155
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 112

   93 Expression: Term "<" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 156
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 113

   94 Expression: Term ">" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 157
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 114

   87 Expression: Term "*" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 158
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 115

   88 Expression: Term "/" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 159
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 116

   89 Expression: Term "%" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 160
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 117

   90 Expression: Term "^" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 161
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 118

   25 Initializer: Term "->" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 162
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 119

   91 Expression: Term "!=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 163
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 120

   95 Expression: Term "<=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 164
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 121

   96 Expression: Term ">=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 165
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 122

   26 Initializer: Arguments "->" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 166
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 123

   41 Parameters: Variable .

    $default  reduce using rule 41 (Parameters)


State 124

   40 Parameters: Parameters . "," Variable
   42 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 167
    ","  shift, and go to state 168


State 125

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 170
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 126

   32 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier   go to state 77
    Identifiers  go to state 175


State 127

  116 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 190
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 128

  117 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 201
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 129

   34 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 19

    Identifier  go to state 202


State 130

   20 MaybeFunctionAttributes: "(" MaybeIdentifiers ")" .

    $default  reduce using rule 20 (MaybeFunctionAttributes)


State 131

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 203
    MaybeFunctionParameters  go to state 204
    Identifier               go to state 169
    Type                     go to state 205
    BasicType                go to state 171
    ComposedType             go to state 172
    FixedSizedType           go to state 173
    RangedType               go to state 174


State 132

   83 Expression: "(" Term . ")"
   85           | Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 140
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 133

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 134

  153 Attributes: Attributes "," Attribute .

    $default  reduce using rule 153 (Attributes)


State 135

   38 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 206
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 136

  114 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 207
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 137

  113 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 208
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 138

  115 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 209
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 139

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  112 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 210
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 140

   83 Expression: "(" Term ")" .

    $default  reduce using rule 83 (Expression)


State 141

   81 Expression: "(" Expression ")" .

    $default  reduce using rule 81 (Expression)


State 142

  108 Arguments: "(" Terms ")" .

    $default  reduce using rule 108 (Arguments)


State 143

  106 Terms: Terms "," . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 211
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 144

  104 List: "[" Term "]" .

    $default  reduce using rule 104 (List)


State 145

  102 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 212
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 146

  105 List: "[" Terms "]" .

    $default  reduce using rule 105 (List)


State 147

   27 Initializers: Initializers "," Initializer .

    $default  reduce using rule 27 (Initializers)


State 148

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  107 Terms: Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 107 (Terms)


State 149

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
   99           | Term "and" Term .
  100           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "="   shift, and go to state 111
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "!="  shift, and go to state 119
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 99 (Expression)


State 150

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   97           | Term "or" Term .
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"  shift, and go to state 105
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 97 (Expression)


State 151

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   98           | Term "xor" Term .
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"  shift, and go to state 105
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 98 (Expression)


State 152

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  100           | Term "implies" Term .

    "and"  shift, and go to state 105
    "or"   shift, and go to state 106
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 119
    "<="   shift, and go to state 120
    ">="   shift, and go to state 121

    $default  reduce using rule 100 (Expression)


State 153

   85 Expression: Term . "+" Term
   85           | Term "+" Term .
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 85 (Expression)


State 154

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   86           | Term "-" Term .
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 86 (Expression)


State 155

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   92           | Term "=" Term .
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 92 (Expression)


State 156

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   93           | Term "<" Term .
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 93 (Expression)


State 157

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   94           | Term ">" Term .
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 94 (Expression)


State 158

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   87           | Term "*" Term .
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 87 (Expression)


State 159

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   88           | Term "/" Term .
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 88 (Expression)


State 160

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   89           | Term "%" Term .
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 89 (Expression)


State 161

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   90           | Term "^" Term .
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    $default  reduce using rule 90 (Expression)


State 162

   25 Initializer: Term "->" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 25 (Initializer)


State 163

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   91           | Term "!=" Term .
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 120
    ">="  shift, and go to state 121

    $default  reduce using rule 91 (Expression)


State 164

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   95           | Term "<=" Term .
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 95 (Expression)


State 165

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   96           | Term ">=" Term .
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 96 (Expression)


State 166

   26 Initializer: Arguments "->" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 26 (Initializer)


State 167

   42 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 42 (MaybeParameters)


State 168

   40 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 213


State 169

   48 BasicType: Identifier .
   49 ComposedType: Identifier . "(" Types ")"
   50 FixedSizedType: Identifier . "<" Term ">"
   51 RangedType: Identifier . "<" Term ".." Term ">"

    "("  shift, and go to state 214
    "<"  shift, and go to state 215

    $default  reduce using rule 48 (BasicType)


State 170

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 216


State 171

   44 Type: BasicType .

    $default  reduce using rule 44 (Type)


State 172

   45 Type: ComposedType .

    $default  reduce using rule 45 (Type)


State 173

   46 Type: FixedSizedType .

    $default  reduce using rule 46 (Type)


State 174

   47 Type: RangedType .

    $default  reduce using rule 47 (Type)


State 175

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   34 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 217
    ","  shift, and go to state 129


State 176

  145 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 218
    Rules                   go to state 219
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 177

  143 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 218
    Rules                   go to state 220
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 178

  130 SkipRule: "skip" .

    $default  reduce using rule 130 (SkipRule)


State 179

  139 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 221


State 180

  140 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 85
    Variable    go to state 222


State 181

  141 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 223
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 182

  147 CallRule: "call" . DirectCallExpression
  149         | "call" . IndirectCallExpression

    "("           shift, and go to state 185
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 224
    IndirectCallExpression  go to state 225


State 183

  131 ConditionalRule: "if" . Term "then" Rule
  132                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 226
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 184

  133 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 227
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 185

  112 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 93


State 186

  142 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 218
    Rules                   go to state 228
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 187

  144 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 218
    Rules                   go to state 229
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 188

  146 UpdateRule: DirectCallExpression . ":=" Term
  148 CallRule: DirectCallExpression .

    ":="  shift, and go to state 230

    $default  reduce using rule 148 (CallRule)


State 189

  150 CallRule: IndirectCallExpression .

    $default  reduce using rule 150 (CallRule)


State 190

  116 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 116 (RuleDefinition)


State 191

  118 Rule: SkipRule .

    $default  reduce using rule 118 (Rule)


State 192

  119 Rule: ConditionalRule .

    $default  reduce using rule 119 (Rule)


State 193

  120 Rule: CaseRule .

    $default  reduce using rule 120 (Rule)


State 194

  121 Rule: LetRule .

    $default  reduce using rule 121 (Rule)


State 195

  122 Rule: ForallRule .

    $default  reduce using rule 122 (Rule)


State 196

  123 Rule: IterateRule .

    $default  reduce using rule 123 (Rule)


State 197

  124 Rule: BlockRule .

    $default  reduce using rule 124 (Rule)


State 198

  125 Rule: SequenceRule .

    $default  reduce using rule 125 (Rule)


State 199

  126 Rule: UpdateRule .

    $default  reduce using rule 126 (Rule)


State 200

  127 Rule: CallRule .

    $default  reduce using rule 127 (Rule)


State 201

  117 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 231


State 202

   34 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 34 (Identifiers)


State 203

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 232

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 204

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 233


State 205

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 206

   38 Variable: Identifier ":" Type .

    $default  reduce using rule 38 (Variable)


State 207

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  114 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 234
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 208

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  113 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 235
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 209

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  115 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 236
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 210

  112 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 103

    Arguments  go to state 237


State 211

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  106 Terms: Terms "," Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 106 (Terms)


State 212

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  102 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "]"        shift, and go to state 238
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 213

   40 Parameters: Parameters "," Variable .

    $default  reduce using rule 40 (Parameters)


State 214

   49 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 239
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174
    Types           go to state 240


State 215

   50 FixedSizedType: Identifier "<" . Term ">"
   51 RangedType: Identifier "<" . Term ".." Term ">"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 241
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 216

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 242
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 217

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 32 (EnumerationDefinition)


State 218

  129 Rules: Rule .

    $default  reduce using rule 129 (Rules)


State 219

  128 Rules: Rules . Rule
  145 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 176
    "endseq"      shift, and go to state 243
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 244
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 220

  128 Rules: Rules . Rule
  143 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "endpar"      shift, and go to state 245
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 244
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 221

  139 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 246


State 222

  140 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 247


State 223

  141 IterateRule: "iterate" Rule .

    $default  reduce using rule 141 (IterateRule)


State 224

  147 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 147 (CallRule)


State 225

  149 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 149 (CallRule)


State 226

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  131 ConditionalRule: "if" Term . "then" Rule
  132                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 248
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 227

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  133 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 249
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 228

  128 Rules: Rules . Rule
  142 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "}"           shift, and go to state 250
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 244
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 229

  128 Rules: Rules . Rule
  144 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "|}"          shift, and go to state 251
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 244
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 230

  146 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 252
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 231

  117 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 253
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 232

   16 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 254
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 233

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 255
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 234

  114 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 256
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 235

  113 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 257
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 236

  115 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 258
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 237

  112 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 112 (IndirectCallExpression)


State 238

  102 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 102 (Range)


State 239

   53 Types: Type .

    $default  reduce using rule 53 (Types)


State 240

   49 ComposedType: Identifier "(" Types . ")"
   52 Types: Types . "," Type

    ")"  shift, and go to state 259
    ","  shift, and go to state 260


State 241

   50 FixedSizedType: Identifier "<" Term . ">"
   51 RangedType: Identifier "<" Term . ".." Term ">"
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 261
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    ".."       shift, and go to state 262
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 242

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 31 (DerivedDefinition)


State 243

  145 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 145 (SequenceRule)


State 244

  128 Rules: Rules Rule .

    $default  reduce using rule 128 (Rules)


State 245

  143 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 143 (BlockRule)


State 246

  139 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 263
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 247

  140 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 264
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 248

  131 ConditionalRule: "if" Term "then" . Rule
  132                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 265
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 249

  133 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 266


State 250

  142 BlockRule: "{" Rules "}" .

    $default  reduce using rule 142 (BlockRule)


State 251

  144 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 144 (SequenceRule)


State 252

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  146 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 146 (UpdateRule)


State 253

  117 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 117 (RuleDefinition)


State 254

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 255

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 267

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 268


State 256

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  114 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 114 (UniversalQuantifierExpression)


State 257

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  113 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121

    $default  reduce using rule 113 (ConditionalExpression)


State 258

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  115 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 115 (ExistentialQuantifierExpression)


State 259

   49 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 49 (ComposedType)


State 260

   52 Types: Types "," . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 169
    Type            go to state 269
    BasicType       go to state 171
    ComposedType    go to state 172
    FixedSizedType  go to state 173
    RangedType      go to state 174


State 261

   50 FixedSizedType: Identifier "<" Term ">" .
   94 Expression: Term ">" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 50 (FixedSizedType)]
    $default  reduce using rule 50 (FixedSizedType)

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 157
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 262

   51 RangedType: Identifier "<" Term ".." . Term ">"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 270
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 263

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  139 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 271
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 264

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  140 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 272
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 265

  131 ConditionalRule: "if" Term "then" Rule .
  132                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 273

    $default  reduce using rule 131 (ConditionalRule)


State 266

  133 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 274
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "_"            shift, and go to state 275
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 276
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72
    CaseLabel                        go to state 277
    CaseLabels                       go to state 278


State 267

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 279


State 268

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 280

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 281


State 269

   52 Types: Types "," Type .

    $default  reduce using rule 52 (Types)


State 270

   51 RangedType: Identifier "<" Term ".." Term . ">"
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 282
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 271

  139 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 283
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 272

  140 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 284
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 273

  132 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 285
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 274

  134 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 286


State 275

  135 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 287


State 276

   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term
  136 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ":"        shift, and go to state 288
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 277

  137 CaseLabels: CaseLabel . CaseLabels
  138           | CaseLabel .

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 274
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "_"            shift, and go to state 275
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    $default  reduce using rule 138 (CaseLabels)

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 276
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72
    CaseLabel                        go to state 277
    CaseLabels                       go to state 289


State 278

  133 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 290


State 279

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 291
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 280

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 292


State 281

   10 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 282

   51 RangedType: Identifier "<" Term ".." Term ">" .
   94 Expression: Term ">" . Term

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 81
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    "["       [reduce using rule 51 (RangedType)]
    $default  reduce using rule 51 (RangedType)

    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 157
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 283

  139 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 139 (LetRule)


State 284

  140 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 140 (ForallRule)


State 285

  132 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 132 (ConditionalRule)


State 286

  134 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 293
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 287

  135 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 294
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 288

  136 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 176
    "par"         shift, and go to state 177
    "skip"        shift, and go to state 178
    "let"         shift, and go to state 179
    "forall"      shift, and go to state 180
    "iterate"     shift, and go to state 181
    "call"        shift, and go to state 182
    "if"          shift, and go to state 183
    "case"        shift, and go to state 184
    "("           shift, and go to state 185
    "{"           shift, and go to state 186
    "{|"          shift, and go to state 187
    "identifier"  shift, and go to state 19

    Identifier              go to state 53
    DirectCallExpression    go to state 188
    IndirectCallExpression  go to state 189
    Rule                    go to state 295
    SkipRule                go to state 191
    ConditionalRule         go to state 192
    CaseRule                go to state 193
    LetRule                 go to state 194
    ForallRule              go to state 195
    IterateRule             go to state 196
    BlockRule               go to state 197
    SequenceRule            go to state 198
    UpdateRule              go to state 199
    CallRule                go to state 200


State 289

  137 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 137 (CaseLabels)


State 290

  133 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 133 (CaseRule)


State 291

   14 MaybeDefined: "defined" "{" Term . "}"
   85 Expression: Term . "+" Term
   86           | Term . "-" Term
   87           | Term . "*" Term
   88           | Term . "/" Term
   89           | Term . "%" Term
   90           | Term . "^" Term
   91           | Term . "!=" Term
   92           | Term . "=" Term
   93           | Term . "<" Term
   94           | Term . ">" Term
   95           | Term . "<=" Term
   96           | Term . ">=" Term
   97           | Term . "or" Term
   98           | Term . "xor" Term
   99           | Term . "and" Term
  100           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "}"        shift, and go to state 296
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "!="       shift, and go to state 119
    "<="       shift, and go to state 120
    ">="       shift, and go to state 121


State 292

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "@"            shift, and go to state 43
    "binary"       shift, and go to state 44
    "hexadecimal"  shift, and go to state 45
    "integer"      shift, and go to state 46
    "rational"     shift, and go to state 47
    "floating"     shift, and go to state 48
    "string"       shift, and go to state 49
    "identifier"   shift, and go to state 19

    $default  reduce using rule 30 (MaybeInitializers)

    Initializer                      go to state 50
    Initializers                     go to state 51
    MaybeInitializers                go to state 297
    Identifier                       go to state 53
    Atom                             go to state 54
    Undefined                        go to state 55
    Boolean                          go to state 56
    String                           go to state 57
    BitNumber                        go to state 58
    IntegerNumber                    go to state 59
    FloatingNumber                   go to state 60
    RationalNumber                   go to state 61
    RuleReference                    go to state 62
    Term                             go to state 63
    Expression                       go to state 64
    Range                            go to state 65
    List                             go to state 66
    Arguments                        go to state 67
    DirectCallExpression             go to state 68
    IndirectCallExpression           go to state 69
    ConditionalExpression            go to state 70
    UniversalQuantifierExpression    go to state 71
    ExistentialQuantifierExpression  go to state 72


State 293

  134 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 134 (CaseLabel)


State 294

  135 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 135 (CaseLabel)


State 295

  136 CaseLabel: Term ":" Rule .

    $default  reduce using rule 136 (CaseLabel)


State 296

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 297

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 298


State 298

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
