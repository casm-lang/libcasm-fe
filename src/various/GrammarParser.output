Nonterminals useless in grammar

   ConditionalExpression
   UniversalQuantifierExpression
   ExistentialQuantifierExpression


Terminals unused in grammar

   "option"
   "dumps"
   "holds"
   "exists"
   "with"


Rules useless in grammar

  143 ConditionalExpression: "if" Expression "then" Expression "else" Expression

  144 UniversalQuantifierExpression: "forall" Variable "in" Expression "holds" Expression

  145 ExistentialQuantifierExpression: "exists" Variable "in" Expression "with" Expression


State 69 conflicts: 1 reduce/reduce
State 71 conflicts: 15 shift/reduce
State 76 conflicts: 1 shift/reduce
State 127 conflicts: 1 reduce/reduce
State 128 conflicts: 1 reduce/reduce
State 129 conflicts: 1 reduce/reduce
State 130 conflicts: 1 reduce/reduce
State 131 conflicts: 1 reduce/reduce
State 132 conflicts: 1 reduce/reduce
State 133 conflicts: 1 reduce/reduce
State 134 conflicts: 1 reduce/reduce
State 135 conflicts: 1 reduce/reduce
State 136 conflicts: 1 reduce/reduce
State 137 conflicts: 1 reduce/reduce
State 138 conflicts: 1 reduce/reduce
State 140 conflicts: 1 reduce/reduce
State 141 conflicts: 1 reduce/reduce
State 142 conflicts: 1 reduce/reduce
State 224 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 Definitions: Definitions Definition
    7            | Definition

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
    9                   | ProgramFunctionDefinition

   10 MaybeInitially: "initially" "{" MaybeInitializers "}"
   11               | %empty

   12 MaybeDefined: "defined" "{" Expression "}"
   13             | %empty

   14 FunctionParameters: FunctionParameters "*" Type
   15                   | Type

   16 MaybeFunctionParameters: FunctionParameters
   17                        | %empty

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")"
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Expression
   23            | Expression "->" Expression
   24            | Arguments "->" Expression

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Expression

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 MaybeIdentifiers: Identifiers
   35                 | %empty

   36 Variable: Identifier ":" Type
   37         | Identifier

   38 Parameters: Parameters "," Variable
   39           | Variable

   40 MaybeParameters: "(" Parameters ")"
   41                | %empty

   42 Type: BasicType
   43     | ComposedType
   44     | FixedSizedType
   45     | RangedType

   46 BasicType: Identifier

   47 ComposedType: Identifier "(" Types ")"

   48 FixedSizedType: Identifier "<" Expression ">"

   49 RangedType: Identifier "<" Expression ".." Expression ">"

   50 Types: Types "," Type
   51      | Type

   52 Atom: RuleReference
   53     | BitNumber
   54     | IntegerNumber
   55     | FloatingNumber
   56     | RationalNumber
   57     | String
   58     | Undefined
   59     | Boolean

   60 Undefined: "undef"

   61 Boolean: "true"
   62        | "false"

   63 String: "string"

   64 BitNumber: "binary"
   65          | "hexadecimal"

   66 IntegerNumber: "integer"

   67 FloatingNumber: "floating"

   68 RationalNumber: "rational"

   69 RuleReference: "@" "identifier"

   70 Term: DirectCallExpression
   71     | IndirectCallExpression
   72     | Expression
   73     | List
   74     | Range
   75     | Atom

   76 Expression: "(" Expression ")"
   77           | "+" Term
   78           | "(" Term ")"
   79           | "-" Term
   80           | Term "+" Term
   81           | Expression "-" Expression
   82           | Expression "*" Expression
   83           | Expression "/" Expression
   84           | Expression "%" Expression
   85           | Expression "^" Expression
   86           | Expression "!=" Expression
   87           | Expression "=" Expression
   88           | Expression "<" Expression
   89           | Expression ">" Expression
   90           | Expression "<=" Expression
   91           | Expression ">=" Expression
   92           | Expression "or" Expression
   93           | Expression "xor" Expression
   94           | Expression "and" Expression
   95           | Expression "implies" Expression
   96           | "not" Expression

   97 Range: "[" Term ".." Term "]"

   98 List: "[" "]"
   99     | "[" Term "]"
  100     | "[" TermList "]"

  101 TermList: TermList Term ","
  102         | Term ","

  103 Arguments: "(" TermList ")"
  104          | "(" ")"

  105 DirectCallExpression: Identifier
  106                     | Identifier Arguments

  107 IndirectCallExpression: "(" "*" Term ")" Arguments

  108 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  109               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  110 Rule: SkipRule
  111     | ConditionalRule
  112     | CaseRule
  113     | LetRule
  114     | ForallRule
  115     | IterateRule
  116     | BlockRule
  117     | SequenceRule
  118     | UpdateRule
  119     | CallRule

  120 Rules: Rules Rule
  121      | Rule

  122 SkipRule: "skip"

  123 ConditionalRule: "if" Expression "then" Rule
  124                | "if" Expression "then" Rule "else" Rule

  125 CaseRule: "case" Expression "of" "{" CaseLabels "}"

  126 CaseLabel: "default" ":" Rule
  127          | "_" ":" Rule
  128          | Expression ":" Rule

  129 CaseLabels: CaseLabel CaseLabels
  130           | CaseLabel

  131 LetRule: "let" Variable "=" Expression "in" Rule

  132 ForallRule: "forall" Variable "in" Expression "do" Rule

  133 IterateRule: "iterate" Rule

  134 BlockRule: "{" Rules "}"
  135          | "par" Rules "endpar"

  136 SequenceRule: "{|" Rules "|}"
  137             | "seq" Rules "endseq"

  138 UpdateRule: DirectCallExpression ":=" Expression

  139 CallRule: "call" DirectCallExpression
  140         | DirectCallExpression
  141         | "call" IndirectCallExpression
  142         | IndirectCallExpression


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"option" (260)
"derived" (261) 29
"enum" (262) 30
"rule" (263) 108 109
"dumps" (264)
"function" (265) 8
"initially" (266) 10
"defined" (267) 12
"seq" (268) 137
"endseq" (269) 137
"par" (270) 135
"endpar" (271) 135
"skip" (272) 122
"let" (273) 131
"in" (274) 131 132
"forall" (275) 132
"iterate" (276) 133
"do" (277) 132
"call" (278) 139 141
"if" (279) 123 124
"then" (280) 123 124
"else" (281) 124
"case" (282) 125
"of" (283) 125
"default" (284) 126
"holds" (285)
"exists" (286)
"with" (287)
"undef" (288) 60
"false" (289) 62
"true" (290) 61
"and" (291) 94
"or" (292) 92
"xor" (293) 93
"implies" (294) 95
"not" (295) 96
"+" (296) 77 80
"-" (297) 79 81
"=" (298) 29 30 87 108 109 131
"(" (299) 18 40 47 76 78 103 104 107
")" (300) 18 40 47 76 78 103 104 107
"[" (301) 97 98 99 100
"]" (302) 97 98 99 100
"{" (303) 10 12 21 30 125 134
"}" (304) 10 12 21 30 125 134
":" (305) 8 36 126 127 128
"_" (306) 127
"@" (307) 69
"," (308) 25 32 38 50 101 102
"<" (309) 48 49 88
">" (310) 48 49 89
"*" (311) 14 82 107
"/" (312) 83
"%" (313) 84
"^" (314) 85
".." (315) 49 97
"->" (316) 8 23 24 29 109
":=" (317) 138
"!=" (318) 86
"<=" (319) 90
">=" (320) 91
"{|" (321) 136
"|}" (322) 136
"binary" (323) 64
"hexadecimal" (324) 65
"integer" (325) 66
"rational" (326) 68
"floating" (327) 67
"string" (328) 63
"identifier" (329) 31 69
UPLUS (330)
UMINUS (331)
DIRECT_CALL_EXPR_NO_ARG (332)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
Specification (79)
    on left: 1, on right: 0
Definition (80)
    on left: 2 3 4 5, on right: 6 7
Definitions (81)
    on left: 6 7, on right: 1 6
FunctionDefinition (82)
    on left: 8 9, on right: 2
MaybeInitially (83)
    on left: 10 11, on right: 8
MaybeDefined (84)
    on left: 12 13, on right: 8
FunctionParameters (85)
    on left: 14 15, on right: 14 16
MaybeFunctionParameters (86)
    on left: 16 17, on right: 8
MaybeFunctionAttributes (87)
    on left: 18 19, on right: 8
ProgramFunctionDefinition (88)
    on left: 20 21, on right: 9
Initializer (89)
    on left: 22 23 24, on right: 25 26
Initializers (90)
    on left: 25 26, on right: 25 27
MaybeInitializers (91)
    on left: 27 28, on right: 10 21
DerivedDefinition (92)
    on left: 29, on right: 3
EnumerationDefinition (93)
    on left: 30, on right: 5
Identifier (94)
    on left: 31, on right: 8 20 29 30 32 33 36 37 46 47 48 49 105 106
    108 109
Identifiers (95)
    on left: 32 33, on right: 30 32 34
MaybeIdentifiers (96)
    on left: 34 35, on right: 18
Variable (97)
    on left: 36 37, on right: 38 39 131 132
Parameters (98)
    on left: 38 39, on right: 38 40
MaybeParameters (99)
    on left: 40 41, on right: 29 108 109
Type (100)
    on left: 42 43 44 45, on right: 8 14 15 29 36 50 51 109
BasicType (101)
    on left: 46, on right: 42
ComposedType (102)
    on left: 47, on right: 43
FixedSizedType (103)
    on left: 48, on right: 44
RangedType (104)
    on left: 49, on right: 45
Types (105)
    on left: 50 51, on right: 47 50
Atom (106)
    on left: 52 53 54 55 56 57 58 59, on right: 75
Undefined (107)
    on left: 60, on right: 58
Boolean (108)
    on left: 61 62, on right: 59
String (109)
    on left: 63, on right: 57
BitNumber (110)
    on left: 64 65, on right: 53
IntegerNumber (111)
    on left: 66, on right: 54
FloatingNumber (112)
    on left: 67, on right: 55
RationalNumber (113)
    on left: 68, on right: 56
RuleReference (114)
    on left: 69, on right: 52
Term (115)
    on left: 70 71 72 73 74 75, on right: 77 78 79 80 97 99 101 102
    107
Expression (116)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95 96, on right: 12 22 23 24 29 48 49 72 76 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96 123 124 125 128 131 132 138
Range (117)
    on left: 97, on right: 74
List (118)
    on left: 98 99 100, on right: 73
TermList (119)
    on left: 101 102, on right: 100 101 103
Arguments (120)
    on left: 103 104, on right: 24 106 107
DirectCallExpression (121)
    on left: 105 106, on right: 70 138 139 140
IndirectCallExpression (122)
    on left: 107, on right: 71 141 142
RuleDefinition (123)
    on left: 108 109, on right: 4
Rule (124)
    on left: 110 111 112 113 114 115 116 117 118 119, on right: 108
    109 120 121 123 124 126 127 128 131 132 133
Rules (125)
    on left: 120 121, on right: 120 134 135 136 137
SkipRule (126)
    on left: 122, on right: 110
ConditionalRule (127)
    on left: 123 124, on right: 111
CaseRule (128)
    on left: 125, on right: 112
CaseLabel (129)
    on left: 126 127 128, on right: 129 130
CaseLabels (130)
    on left: 129 130, on right: 125 129
LetRule (131)
    on left: 131, on right: 113
ForallRule (132)
    on left: 132, on right: 114
IterateRule (133)
    on left: 133, on right: 115
BlockRule (134)
    on left: 134 135, on right: 116
SequenceRule (135)
    on left: 136 137, on right: 117
UpdateRule (136)
    on left: 138, on right: 118
CallRule (137)
    on left: 139 140 141 142, on right: 119


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 8
    Definitions                go to state 9
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 15


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 16
    "identifier"  shift, and go to state 17

    Identifier  go to state 18


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Expression

    "identifier"  shift, and go to state 17

    Identifier  go to state 19


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier  go to state 20


State 6

  108 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  109               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 21


State 7

    8 FunctionDefinition: "function" . MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "("  shift, and go to state 22

    $default  reduce using rule 19 (MaybeFunctionAttributes)

    MaybeFunctionAttributes  go to state 23


State 8

    7 Definitions: Definition .

    $default  reduce using rule 7 (Definitions)


State 9

    1 Specification: "CASM" Definitions .
    6 Definitions: Definitions . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 24
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 10

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 11

    9 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 9 (FunctionDefinition)


State 12

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 13

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 14

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 15

    0 $accept: Specification "end of file" .

    $default  accept


State 16

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 31
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer             go to state 40
    Initializers            go to state 41
    MaybeInitializers       go to state 42
    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 54
    Range                   go to state 55
    List                    go to state 56
    Arguments               go to state 57
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 17

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 18

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 19

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Expression

    "("  shift, and go to state 60

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 61


State 20

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 62


State 21

  108 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  109               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 60

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 63


State 22

   18 MaybeFunctionAttributes: "(" . MaybeIdentifiers ")"

    "identifier"  shift, and go to state 17

    $default  reduce using rule 35 (MaybeIdentifiers)

    Identifier        go to state 64
    Identifiers       go to state 65
    MaybeIdentifiers  go to state 66


State 23

    8 FunctionDefinition: "function" MaybeFunctionAttributes . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier  go to state 67


State 24

    6 Definitions: Definitions Definition .

    $default  reduce using rule 6 (Definitions)


State 25

   60 Undefined: "undef" .

    $default  reduce using rule 60 (Undefined)


State 26

   62 Boolean: "false" .

    $default  reduce using rule 62 (Boolean)


State 27

   61 Boolean: "true" .

    $default  reduce using rule 61 (Boolean)


State 28

   96 Expression: "not" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 69
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 29

   77 Expression: "+" . Term

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 70
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 30

   79 Expression: "-" . Term

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 72
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 31

   76 Expression: "(" . Expression ")"
   78           | "(" . Term ")"
  103 Arguments: "(" . TermList ")"
  104          | "(" . ")"
  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    ")"            shift, and go to state 73
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "*"            shift, and go to state 74
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 75
    Expression              go to state 76
    Range                   go to state 55
    List                    go to state 56
    TermList                go to state 77
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 32

   97 Range: "[" . Term ".." Term "]"
   98 List: "[" . "]"
   99     | "[" . Term "]"
  100     | "[" . TermList "]"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "]"            shift, and go to state 78
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 79
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    TermList                go to state 80
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 33

   69 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 81


State 34

   64 BitNumber: "binary" .

    $default  reduce using rule 64 (BitNumber)


State 35

   65 BitNumber: "hexadecimal" .

    $default  reduce using rule 65 (BitNumber)


State 36

   66 IntegerNumber: "integer" .

    $default  reduce using rule 66 (IntegerNumber)


State 37

   68 RationalNumber: "rational" .

    $default  reduce using rule 68 (RationalNumber)


State 38

   67 FloatingNumber: "floating" .

    $default  reduce using rule 67 (FloatingNumber)


State 39

   63 String: "string" .

    $default  reduce using rule 63 (String)


State 40

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 41

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 82

    $default  reduce using rule 27 (MaybeInitializers)


State 42

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 83


State 43

  105 DirectCallExpression: Identifier .
  106                     | Identifier . Arguments

    $default  reduce using rule 105 (DirectCallExpression)

    Arguments  go to state 85


State 44

   75 Term: Atom .

    $default  reduce using rule 75 (Term)


State 45

   58 Atom: Undefined .

    $default  reduce using rule 58 (Atom)


State 46

   59 Atom: Boolean .

    $default  reduce using rule 59 (Atom)


State 47

   57 Atom: String .

    $default  reduce using rule 57 (Atom)


State 48

   53 Atom: BitNumber .

    $default  reduce using rule 53 (Atom)


State 49

   54 Atom: IntegerNumber .

    $default  reduce using rule 54 (Atom)


State 50

   55 Atom: FloatingNumber .

    $default  reduce using rule 55 (Atom)


State 51

   56 Atom: RationalNumber .

    $default  reduce using rule 56 (Atom)


State 52

   52 Atom: RuleReference .

    $default  reduce using rule 52 (Atom)


State 53

   80 Expression: Term . "+" Term

    "+"  shift, and go to state 86


State 54

   22 Initializer: Expression .
   23            | Expression . "->" Expression
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "->"       shift, and go to state 99
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    $default  reduce using rule 22 (Initializer)


State 55

   74 Term: Range .

    $default  reduce using rule 74 (Term)


State 56

   73 Term: List .

    $default  reduce using rule 73 (Term)


State 57

   24 Initializer: Arguments . "->" Expression

    "->"  shift, and go to state 103


State 58

   70 Term: DirectCallExpression .

    $default  reduce using rule 70 (Term)


State 59

   71 Term: IndirectCallExpression .

    $default  reduce using rule 71 (Term)


State 60

   40 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 17

    Identifier  go to state 104
    Variable    go to state 105
    Parameters  go to state 106


State 61

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Expression

    "->"  shift, and go to state 107


State 62

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 108


State 63

  108 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  109               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 109
    "->"  shift, and go to state 110


State 64

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 65

   32 Identifiers: Identifiers . "," Identifier
   34 MaybeIdentifiers: Identifiers .

    ","  shift, and go to state 111

    $default  reduce using rule 34 (MaybeIdentifiers)


State 66

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers . ")"

    ")"  shift, and go to state 112


State 67

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 113


State 68

   76 Expression: "(" . Expression ")"
   78           | "(" . Term ")"
  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "*"            shift, and go to state 74
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 114
    Expression              go to state 76
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 69

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
   96           | "not" Expression .

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 96 (Expression)]
    $default  reduce using rule 96 (Expression)


State 70

   77 Expression: "+" Term .
   80           | Term . "+" Term

    $default  reduce using rule 77 (Expression)


State 71

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "and"      [reduce using rule 72 (Term)]
    "or"       [reduce using rule 72 (Term)]
    "xor"      [reduce using rule 72 (Term)]
    "implies"  [reduce using rule 72 (Term)]
    "-"        [reduce using rule 72 (Term)]
    "="        [reduce using rule 72 (Term)]
    "<"        [reduce using rule 72 (Term)]
    ">"        [reduce using rule 72 (Term)]
    "*"        [reduce using rule 72 (Term)]
    "/"        [reduce using rule 72 (Term)]
    "%"        [reduce using rule 72 (Term)]
    "^"        [reduce using rule 72 (Term)]
    "!="       [reduce using rule 72 (Term)]
    "<="       [reduce using rule 72 (Term)]
    ">="       [reduce using rule 72 (Term)]
    $default   reduce using rule 72 (Term)


State 72

   79 Expression: "-" Term .
   80           | Term . "+" Term

    $default  reduce using rule 79 (Expression)


State 73

  104 Arguments: "(" ")" .

    $default  reduce using rule 104 (Arguments)


State 74

  107 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 115
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 75

   78 Expression: "(" Term . ")"
   80           | Term . "+" Term
  102 TermList: Term . ","

    "+"  shift, and go to state 86
    ")"  shift, and go to state 116
    ","  shift, and go to state 117


State 76

   72 Term: Expression .
   76 Expression: "(" Expression . ")"
   81           | Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    ")"        shift, and go to state 118
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    ")"       [reduce using rule 72 (Term)]
    $default  reduce using rule 72 (Term)


State 77

  101 TermList: TermList . Term ","
  103 Arguments: "(" TermList . ")"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    ")"            shift, and go to state 119
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 120
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 78

   98 List: "[" "]" .

    $default  reduce using rule 98 (List)


State 79

   80 Expression: Term . "+" Term
   97 Range: "[" Term . ".." Term "]"
   99 List: "[" Term . "]"
  102 TermList: Term . ","

    "+"   shift, and go to state 86
    "]"   shift, and go to state 121
    ","   shift, and go to state 117
    ".."  shift, and go to state 122


State 80

  100 List: "[" TermList . "]"
  101 TermList: TermList . Term ","

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "]"            shift, and go to state 123
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 120
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 81

   69 RuleReference: "@" "identifier" .

    $default  reduce using rule 69 (RuleReference)


State 82

   25 Initializers: Initializers "," . Initializer

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 31
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Initializer             go to state 124
    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 54
    Range                   go to state 55
    List                    go to state 56
    Arguments               go to state 57
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 83

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 84

  103 Arguments: "(" . TermList ")"
  104          | "(" . ")"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    ")"            shift, and go to state 73
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 125
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    TermList                go to state 77
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 85

  106 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 106 (DirectCallExpression)


State 86

   80 Expression: Term "+" . Term

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 126
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 87

   94 Expression: Expression "and" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 127
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 88

   92 Expression: Expression "or" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 128
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 89

   93 Expression: Expression "xor" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 129
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 90

   95 Expression: Expression "implies" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 130
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 91

   81 Expression: Expression "-" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 131
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 92

   87 Expression: Expression "=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 132
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 93

   88 Expression: Expression "<" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 133
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 94

   89 Expression: Expression ">" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 134
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 95

   82 Expression: Expression "*" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 135
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 96

   83 Expression: Expression "/" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 136
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 97

   84 Expression: Expression "%" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 137
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 98

   85 Expression: Expression "^" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 138
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 99

   23 Initializer: Expression "->" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 139
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 100

   86 Expression: Expression "!=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 140
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 101

   90 Expression: Expression "<=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 141
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 102

   91 Expression: Expression ">=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 142
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 103

   24 Initializer: Arguments "->" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 143
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 104

   36 Variable: Identifier . ":" Type
   37         | Identifier .

    ":"  shift, and go to state 144

    $default  reduce using rule 37 (Variable)


State 105

   39 Parameters: Variable .

    $default  reduce using rule 39 (Parameters)


State 106

   38 Parameters: Parameters . "," Variable
   40 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 145
    ","  shift, and go to state 146


State 107

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Expression

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 148
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 108

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier   go to state 64
    Identifiers  go to state 153


State 109

  108 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 168
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 110

  109 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 179
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 111

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 17

    Identifier  go to state 180


State 112

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")" .

    $default  reduce using rule 18 (MaybeFunctionAttributes)


State 113

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    $default  reduce using rule 17 (MaybeFunctionParameters)

    FunctionParameters       go to state 181
    MaybeFunctionParameters  go to state 182
    Identifier               go to state 147
    Type                     go to state 183
    BasicType                go to state 149
    ComposedType             go to state 150
    FixedSizedType           go to state 151
    RangedType               go to state 152


State 114

   78 Expression: "(" Term . ")"
   80           | Term . "+" Term

    "+"  shift, and go to state 86
    ")"  shift, and go to state 116


State 115

   80 Expression: Term . "+" Term
  107 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "+"  shift, and go to state 86
    ")"  shift, and go to state 184


State 116

   78 Expression: "(" Term ")" .

    $default  reduce using rule 78 (Expression)


State 117

  102 TermList: Term "," .

    $default  reduce using rule 102 (TermList)


State 118

   76 Expression: "(" Expression ")" .

    $default  reduce using rule 76 (Expression)


State 119

  103 Arguments: "(" TermList ")" .

    $default  reduce using rule 103 (Arguments)


State 120

   80 Expression: Term . "+" Term
  101 TermList: TermList Term . ","

    "+"  shift, and go to state 86
    ","  shift, and go to state 185


State 121

   99 List: "[" Term "]" .

    $default  reduce using rule 99 (List)


State 122

   97 Range: "[" Term ".." . Term "]"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 186
    Expression              go to state 71
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 123

  100 List: "[" TermList "]" .

    $default  reduce using rule 100 (List)


State 124

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 125

   80 Expression: Term . "+" Term
  102 TermList: Term . ","

    "+"  shift, and go to state 86
    ","  shift, and go to state 117


State 126

   80 Expression: Term . "+" Term
   80           | Term "+" Term .

    $default  reduce using rule 80 (Expression)


State 127

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   94           | Expression "and" Expression .
   95           | Expression . "implies" Expression

    "-"   shift, and go to state 91
    "="   shift, and go to state 92
    "<"   shift, and go to state 93
    ">"   shift, and go to state 94
    "*"   shift, and go to state 95
    "/"   shift, and go to state 96
    "%"   shift, and go to state 97
    "^"   shift, and go to state 98
    "!="  shift, and go to state 100
    "<="  shift, and go to state 101
    ">="  shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 94 (Expression)]
    $default  reduce using rule 94 (Expression)


State 128

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   92           | Expression "or" Expression .
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"  shift, and go to state 87
    "xor"  shift, and go to state 89
    "-"    shift, and go to state 91
    "="    shift, and go to state 92
    "<"    shift, and go to state 93
    ">"    shift, and go to state 94
    "*"    shift, and go to state 95
    "/"    shift, and go to state 96
    "%"    shift, and go to state 97
    "^"    shift, and go to state 98
    "!="   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 92 (Expression)]
    $default  reduce using rule 92 (Expression)


State 129

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   93           | Expression "xor" Expression .
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"  shift, and go to state 87
    "-"    shift, and go to state 91
    "="    shift, and go to state 92
    "<"    shift, and go to state 93
    ">"    shift, and go to state 94
    "*"    shift, and go to state 95
    "/"    shift, and go to state 96
    "%"    shift, and go to state 97
    "^"    shift, and go to state 98
    "!="   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 93 (Expression)]
    $default  reduce using rule 93 (Expression)


State 130

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
   95           | Expression "implies" Expression .

    "and"  shift, and go to state 87
    "or"   shift, and go to state 88
    "xor"  shift, and go to state 89
    "-"    shift, and go to state 91
    "="    shift, and go to state 92
    "<"    shift, and go to state 93
    ">"    shift, and go to state 94
    "*"    shift, and go to state 95
    "/"    shift, and go to state 96
    "%"    shift, and go to state 97
    "^"    shift, and go to state 98
    "!="   shift, and go to state 100
    "<="   shift, and go to state 101
    ">="   shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 95 (Expression)]
    $default  reduce using rule 95 (Expression)


State 131

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   81           | Expression "-" Expression .
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "*"  shift, and go to state 95
    "/"  shift, and go to state 96
    "%"  shift, and go to state 97
    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 81 (Expression)]
    $default  reduce using rule 81 (Expression)


State 132

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   87           | Expression "=" Expression .
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"   shift, and go to state 91
    "<"   shift, and go to state 93
    ">"   shift, and go to state 94
    "*"   shift, and go to state 95
    "/"   shift, and go to state 96
    "%"   shift, and go to state 97
    "^"   shift, and go to state 98
    "<="  shift, and go to state 101
    ">="  shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 87 (Expression)]
    $default  reduce using rule 87 (Expression)


State 133

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   88           | Expression "<" Expression .
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"  shift, and go to state 91
    "*"  shift, and go to state 95
    "/"  shift, and go to state 96
    "%"  shift, and go to state 97
    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 88 (Expression)]
    $default  reduce using rule 88 (Expression)


State 134

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   89           | Expression ">" Expression .
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"  shift, and go to state 91
    "*"  shift, and go to state 95
    "/"  shift, and go to state 96
    "%"  shift, and go to state 97
    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 89 (Expression)]
    $default  reduce using rule 89 (Expression)


State 135

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   82           | Expression "*" Expression .
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 82 (Expression)]
    $default  reduce using rule 82 (Expression)


State 136

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   83           | Expression "/" Expression .
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 83 (Expression)]
    $default  reduce using rule 83 (Expression)


State 137

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   84           | Expression "%" Expression .
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 84 (Expression)]
    $default  reduce using rule 84 (Expression)


State 138

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   85           | Expression "^" Expression .
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 85 (Expression)]
    $default  reduce using rule 85 (Expression)


State 139

   23 Initializer: Expression "->" Expression .
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    $default  reduce using rule 23 (Initializer)


State 140

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   86           | Expression "!=" Expression .
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"   shift, and go to state 91
    "<"   shift, and go to state 93
    ">"   shift, and go to state 94
    "*"   shift, and go to state 95
    "/"   shift, and go to state 96
    "%"   shift, and go to state 97
    "^"   shift, and go to state 98
    "<="  shift, and go to state 101
    ">="  shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 86 (Expression)]
    $default  reduce using rule 86 (Expression)


State 141

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   90           | Expression "<=" Expression .
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"  shift, and go to state 91
    "*"  shift, and go to state 95
    "/"  shift, and go to state 96
    "%"  shift, and go to state 97
    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 90 (Expression)]
    $default  reduce using rule 90 (Expression)


State 142

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   91           | Expression ">=" Expression .
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "-"  shift, and go to state 91
    "*"  shift, and go to state 95
    "/"  shift, and go to state 96
    "%"  shift, and go to state 97
    "^"  shift, and go to state 98

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 91 (Expression)]
    $default  reduce using rule 91 (Expression)


State 143

   24 Initializer: Arguments "->" Expression .
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    $default  reduce using rule 24 (Initializer)


State 144

   36 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 187
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 145

   40 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 40 (MaybeParameters)


State 146

   38 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 17

    Identifier  go to state 104
    Variable    go to state 188


State 147

   46 BasicType: Identifier .
   47 ComposedType: Identifier . "(" Types ")"
   48 FixedSizedType: Identifier . "<" Expression ">"
   49 RangedType: Identifier . "<" Expression ".." Expression ">"

    "("  shift, and go to state 189
    "<"  shift, and go to state 190

    $default  reduce using rule 46 (BasicType)


State 148

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Expression

    "="  shift, and go to state 191


State 149

   42 Type: BasicType .

    $default  reduce using rule 42 (Type)


State 150

   43 Type: ComposedType .

    $default  reduce using rule 43 (Type)


State 151

   44 Type: FixedSizedType .

    $default  reduce using rule 44 (Type)


State 152

   45 Type: RangedType .

    $default  reduce using rule 45 (Type)


State 153

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 192
    ","  shift, and go to state 111


State 154

  137 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 193
    Rules                   go to state 194
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 155

  135 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 193
    Rules                   go to state 195
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 156

  122 SkipRule: "skip" .

    $default  reduce using rule 122 (SkipRule)


State 157

  131 LetRule: "let" . Variable "=" Expression "in" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 104
    Variable    go to state 196


State 158

  132 ForallRule: "forall" . Variable "in" Expression "do" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 104
    Variable    go to state 197


State 159

  133 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 198
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 160

  139 CallRule: "call" . DirectCallExpression
  141         | "call" . IndirectCallExpression

    "("           shift, and go to state 163
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 199
    IndirectCallExpression  go to state 200


State 161

  123 ConditionalRule: "if" . Expression "then" Rule
  124                | "if" . Expression "then" Rule "else" Rule

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 201
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 162

  125 CaseRule: "case" . Expression "of" "{" CaseLabels "}"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 202
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 163

  107 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 74


State 164

  134 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 193
    Rules                   go to state 203
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 165

  136 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 193
    Rules                   go to state 204
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 166

  138 UpdateRule: DirectCallExpression . ":=" Expression
  140 CallRule: DirectCallExpression .

    ":="  shift, and go to state 205

    $default  reduce using rule 140 (CallRule)


State 167

  142 CallRule: IndirectCallExpression .

    $default  reduce using rule 142 (CallRule)


State 168

  108 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 108 (RuleDefinition)


State 169

  110 Rule: SkipRule .

    $default  reduce using rule 110 (Rule)


State 170

  111 Rule: ConditionalRule .

    $default  reduce using rule 111 (Rule)


State 171

  112 Rule: CaseRule .

    $default  reduce using rule 112 (Rule)


State 172

  113 Rule: LetRule .

    $default  reduce using rule 113 (Rule)


State 173

  114 Rule: ForallRule .

    $default  reduce using rule 114 (Rule)


State 174

  115 Rule: IterateRule .

    $default  reduce using rule 115 (Rule)


State 175

  116 Rule: BlockRule .

    $default  reduce using rule 116 (Rule)


State 176

  117 Rule: SequenceRule .

    $default  reduce using rule 117 (Rule)


State 177

  118 Rule: UpdateRule .

    $default  reduce using rule 118 (Rule)


State 178

  119 Rule: CallRule .

    $default  reduce using rule 119 (Rule)


State 179

  109 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 206


State 180

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 181

   14 FunctionParameters: FunctionParameters . "*" Type
   16 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 207

    $default  reduce using rule 16 (MaybeFunctionParameters)


State 182

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 208


State 183

   15 FunctionParameters: Type .

    $default  reduce using rule 15 (FunctionParameters)


State 184

  107 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 84

    Arguments  go to state 209


State 185

  101 TermList: TermList Term "," .

    $default  reduce using rule 101 (TermList)


State 186

   80 Expression: Term . "+" Term
   97 Range: "[" Term ".." Term . "]"

    "+"  shift, and go to state 86
    "]"  shift, and go to state 210


State 187

   36 Variable: Identifier ":" Type .

    $default  reduce using rule 36 (Variable)


State 188

   38 Parameters: Parameters "," Variable .

    $default  reduce using rule 38 (Parameters)


State 189

   47 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 211
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152
    Types           go to state 212


State 190

   48 FixedSizedType: Identifier "<" . Expression ">"
   49 RangedType: Identifier "<" . Expression ".." Expression ">"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 213
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 191

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 214
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 192

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 193

  121 Rules: Rule .

    $default  reduce using rule 121 (Rules)


State 194

  120 Rules: Rules . Rule
  137 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 154
    "endseq"      shift, and go to state 215
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 216
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 195

  120 Rules: Rules . Rule
  135 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "endpar"      shift, and go to state 217
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 216
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 196

  131 LetRule: "let" Variable . "=" Expression "in" Rule

    "="  shift, and go to state 218


State 197

  132 ForallRule: "forall" Variable . "in" Expression "do" Rule

    "in"  shift, and go to state 219


State 198

  133 IterateRule: "iterate" Rule .

    $default  reduce using rule 133 (IterateRule)


State 199

  139 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 139 (CallRule)


State 200

  141 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 141 (CallRule)


State 201

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  123 ConditionalRule: "if" Expression . "then" Rule
  124                | "if" Expression . "then" Rule "else" Rule

    "then"     shift, and go to state 220
    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 202

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  125 CaseRule: "case" Expression . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 221
    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 203

  120 Rules: Rules . Rule
  134 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "}"           shift, and go to state 222
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 216
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 204

  120 Rules: Rules . Rule
  136 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "|}"          shift, and go to state 223
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 216
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 205

  138 UpdateRule: DirectCallExpression ":=" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 224
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 206

  109 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 225
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 207

   14 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 226
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 208

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 227
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 209

  107 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 107 (IndirectCallExpression)


State 210

   97 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 97 (Range)


State 211

   51 Types: Type .

    $default  reduce using rule 51 (Types)


State 212

   47 ComposedType: Identifier "(" Types . ")"
   50 Types: Types . "," Type

    ")"  shift, and go to state 228
    ","  shift, and go to state 229


State 213

   48 FixedSizedType: Identifier "<" Expression . ">"
   49 RangedType: Identifier "<" Expression . ".." Expression ">"
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 230
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    ".."       shift, and go to state 231
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 214

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Expression .
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    $default  reduce using rule 29 (DerivedDefinition)


State 215

  137 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 137 (SequenceRule)


State 216

  120 Rules: Rules Rule .

    $default  reduce using rule 120 (Rules)


State 217

  135 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 135 (BlockRule)


State 218

  131 LetRule: "let" Variable "=" . Expression "in" Rule

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 232
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 219

  132 ForallRule: "forall" Variable "in" . Expression "do" Rule

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 233
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 220

  123 ConditionalRule: "if" Expression "then" . Rule
  124                | "if" Expression "then" . Rule "else" Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 234
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 221

  125 CaseRule: "case" Expression "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 235


State 222

  134 BlockRule: "{" Rules "}" .

    $default  reduce using rule 134 (BlockRule)


State 223

  136 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 136 (SequenceRule)


State 224

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  138 UpdateRule: DirectCallExpression ":=" Expression .

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    "+"       reduce using rule 72 (Term)
    "+"       [reduce using rule 138 (UpdateRule)]
    $default  reduce using rule 138 (UpdateRule)


State 225

  109 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 109 (RuleDefinition)


State 226

   14 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 14 (FunctionParameters)


State 227

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 236

    $default  reduce using rule 13 (MaybeDefined)

    MaybeDefined  go to state 237


State 228

   47 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 47 (ComposedType)


State 229

   50 Types: Types "," . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 147
    Type            go to state 238
    BasicType       go to state 149
    ComposedType    go to state 150
    FixedSizedType  go to state 151
    RangedType      go to state 152


State 230

   48 FixedSizedType: Identifier "<" Expression ">" .
   89 Expression: Expression ">" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    $default  reduce using rule 48 (FixedSizedType)

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 134
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 231

   49 RangedType: Identifier "<" Expression ".." . Expression ">"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 239
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 232

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  131 LetRule: "let" Variable "=" Expression . "in" Rule

    "in"       shift, and go to state 240
    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 233

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  132 ForallRule: "forall" Variable "in" Expression . "do" Rule

    "do"       shift, and go to state 241
    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 234

  123 ConditionalRule: "if" Expression "then" Rule .
  124                | "if" Expression "then" Rule . "else" Rule

    "else"  shift, and go to state 242

    $default  reduce using rule 123 (ConditionalRule)


State 235

  125 CaseRule: "case" Expression "of" "{" . CaseLabels "}"

    "default"      shift, and go to state 243
    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "_"            shift, and go to state 244
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 245
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59
    CaseLabel               go to state 246
    CaseLabels              go to state 247


State 236

   12 MaybeDefined: "defined" . "{" Expression "}"

    "{"  shift, and go to state 248


State 237

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 249

    $default  reduce using rule 11 (MaybeInitially)

    MaybeInitially  go to state 250


State 238

   50 Types: Types "," Type .

    $default  reduce using rule 50 (Types)


State 239

   49 RangedType: Identifier "<" Expression ".." Expression . ">"
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "<"        shift, and go to state 93
    ">"        shift, and go to state 251
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 240

  131 LetRule: "let" Variable "=" Expression "in" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 252
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 241

  132 ForallRule: "forall" Variable "in" Expression "do" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 253
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 242

  124 ConditionalRule: "if" Expression "then" Rule "else" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 254
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 243

  126 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 255


State 244

  127 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 256


State 245

   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression
  128 CaseLabel: Expression . ":" Rule

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    ":"        shift, and go to state 257
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 246

  129 CaseLabels: CaseLabel . CaseLabels
  130           | CaseLabel .

    "default"      shift, and go to state 243
    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "_"            shift, and go to state 244
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    $default  reduce using rule 130 (CaseLabels)

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 245
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59
    CaseLabel               go to state 246
    CaseLabels              go to state 258


State 247

  125 CaseRule: "case" Expression "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 259


State 248

   12 MaybeDefined: "defined" "{" . Expression "}"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 260
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 249

   10 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 261


State 250

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 8 (FunctionDefinition)


State 251

   49 RangedType: Identifier "<" Expression ".." Expression ">" .
   89 Expression: Expression ">" . Expression

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 68
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    $default  reduce using rule 49 (RangedType)

    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 134
    Range                   go to state 55
    List                    go to state 56
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 252

  131 LetRule: "let" Variable "=" Expression "in" Rule .

    $default  reduce using rule 131 (LetRule)


State 253

  132 ForallRule: "forall" Variable "in" Expression "do" Rule .

    $default  reduce using rule 132 (ForallRule)


State 254

  124 ConditionalRule: "if" Expression "then" Rule "else" Rule .

    $default  reduce using rule 124 (ConditionalRule)


State 255

  126 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 262
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 256

  127 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 263
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 257

  128 CaseLabel: Expression ":" . Rule

    "seq"         shift, and go to state 154
    "par"         shift, and go to state 155
    "skip"        shift, and go to state 156
    "let"         shift, and go to state 157
    "forall"      shift, and go to state 158
    "iterate"     shift, and go to state 159
    "call"        shift, and go to state 160
    "if"          shift, and go to state 161
    "case"        shift, and go to state 162
    "("           shift, and go to state 163
    "{"           shift, and go to state 164
    "{|"          shift, and go to state 165
    "identifier"  shift, and go to state 17

    Identifier              go to state 43
    DirectCallExpression    go to state 166
    IndirectCallExpression  go to state 167
    Rule                    go to state 264
    SkipRule                go to state 169
    ConditionalRule         go to state 170
    CaseRule                go to state 171
    LetRule                 go to state 172
    ForallRule              go to state 173
    IterateRule             go to state 174
    BlockRule               go to state 175
    SequenceRule            go to state 176
    UpdateRule              go to state 177
    CallRule                go to state 178


State 258

  129 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 129 (CaseLabels)


State 259

  125 CaseRule: "case" Expression "of" "{" CaseLabels "}" .

    $default  reduce using rule 125 (CaseRule)


State 260

   12 MaybeDefined: "defined" "{" Expression . "}"
   72 Term: Expression .
   81 Expression: Expression . "-" Expression
   82           | Expression . "*" Expression
   83           | Expression . "/" Expression
   84           | Expression . "%" Expression
   85           | Expression . "^" Expression
   86           | Expression . "!=" Expression
   87           | Expression . "=" Expression
   88           | Expression . "<" Expression
   89           | Expression . ">" Expression
   90           | Expression . "<=" Expression
   91           | Expression . ">=" Expression
   92           | Expression . "or" Expression
   93           | Expression . "xor" Expression
   94           | Expression . "and" Expression
   95           | Expression . "implies" Expression

    "and"      shift, and go to state 87
    "or"       shift, and go to state 88
    "xor"      shift, and go to state 89
    "implies"  shift, and go to state 90
    "-"        shift, and go to state 91
    "="        shift, and go to state 92
    "}"        shift, and go to state 265
    "<"        shift, and go to state 93
    ">"        shift, and go to state 94
    "*"        shift, and go to state 95
    "/"        shift, and go to state 96
    "%"        shift, and go to state 97
    "^"        shift, and go to state 98
    "!="       shift, and go to state 100
    "<="       shift, and go to state 101
    ">="       shift, and go to state 102

    $default  reduce using rule 72 (Term)


State 261

   10 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "undef"        shift, and go to state 25
    "false"        shift, and go to state 26
    "true"         shift, and go to state 27
    "not"          shift, and go to state 28
    "+"            shift, and go to state 29
    "-"            shift, and go to state 30
    "("            shift, and go to state 31
    "["            shift, and go to state 32
    "@"            shift, and go to state 33
    "binary"       shift, and go to state 34
    "hexadecimal"  shift, and go to state 35
    "integer"      shift, and go to state 36
    "rational"     shift, and go to state 37
    "floating"     shift, and go to state 38
    "string"       shift, and go to state 39
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer             go to state 40
    Initializers            go to state 41
    MaybeInitializers       go to state 266
    Identifier              go to state 43
    Atom                    go to state 44
    Undefined               go to state 45
    Boolean                 go to state 46
    String                  go to state 47
    BitNumber               go to state 48
    IntegerNumber           go to state 49
    FloatingNumber          go to state 50
    RationalNumber          go to state 51
    RuleReference           go to state 52
    Term                    go to state 53
    Expression              go to state 54
    Range                   go to state 55
    List                    go to state 56
    Arguments               go to state 57
    DirectCallExpression    go to state 58
    IndirectCallExpression  go to state 59


State 262

  126 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 126 (CaseLabel)


State 263

  127 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 127 (CaseLabel)


State 264

  128 CaseLabel: Expression ":" Rule .

    $default  reduce using rule 128 (CaseLabel)


State 265

   12 MaybeDefined: "defined" "{" Expression "}" .

    $default  reduce using rule 12 (MaybeDefined)


State 266

   10 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 267


State 267

   10 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 10 (MaybeInitially)
