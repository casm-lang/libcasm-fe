State 141 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition
   13           | UsingDefinition

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   17               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   19                   | ProgramFunctionDefinition

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 EnumeratorDefinition: Identifier
   23                     | "[" Attributes "]" Identifier
   24                     | error

   25 Enumerators: Enumerators "," EnumeratorDefinition
   26            | EnumeratorDefinition

   27 UsingDefinition: "using" Identifier "=" Type

   28 Rule: SkipRule
   29     | ConditionalRule
   30     | CaseRule
   31     | LetRule
   32     | ForallRule
   33     | ChooseRule
   34     | IterateRule
   35     | BlockRule
   36     | SequenceRule
   37     | UpdateRule
   38     | CallRule

   39 Rules: Rules Rule
   40      | Rule

   41 SkipRule: "skip"

   42 ConditionalRule: "if" Term "then" Rule
   43                | "if" Term "then" Rule "else" Rule

   44 CaseRule: "case" Term "of" "{" CaseLabels "}"
   45         | "case" Term "of" "{" error "}"

   46 CaseLabel: "default" ":" Rule
   47          | "_" ":" Rule
   48          | Term ":" Rule

   49 CaseLabels: CaseLabels CaseLabel
   50           | CaseLabel

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   53           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   55 IterateRule: "iterate" Rule

   56 BlockRule: "{" Rules "}"
   57          | "par" Rules "endpar"
   58          | "{" error "}"
   59          | "par" error "endpar"

   60 SequenceRule: "{|" Rules "|}"
   61             | "seq" Rules "endseq"
   62             | "{|" error "|}"
   63             | "seq" error "endseq"

   64 UpdateRule: DirectCallExpression ":=" Term

   65 CallRule: "call" DirectCallExpression
   66         | DirectCallExpression
   67         | "call" MethodCallExpression
   68         | MethodCallExpression
   69         | "call" IndirectCallExpression
   70         | IndirectCallExpression

   71 Terms: Terms "," Term
   72      | Term

   73 Term: SimpleOrClaspedTerm
   74     | TypeCastingExpression
   75     | OperatorExpression
   76     | LetExpression
   77     | ConditionalExpression
   78     | ChooseExpression
   79     | UniversalQuantifierExpression
   80     | ExistentialQuantifierExpression

   81 SimpleOrClaspedTerm: "(" Term ")"
   82                    | "(" error ")"
   83                    | DirectCallExpression
   84                    | MethodCallExpression
   85                    | LiteralCallExpression
   86                    | IndirectCallExpression
   87                    | Literal

   88 OperatorExpression: "+" Term
   89                   | "-" Term
   90                   | Term "+" Term
   91                   | Term "-" Term
   92                   | Term "*" Term
   93                   | Term "/" Term
   94                   | Term "%" Term
   95                   | Term "^" Term
   96                   | Term "!=" Term
   97                   | Term "=" Term
   98                   | Term "<" Term
   99                   | Term ">" Term
  100                   | Term "<=" Term
  101                   | Term ">=" Term
  102                   | Term "or" Term
  103                   | Term "xor" Term
  104                   | Term "and" Term
  105                   | Term "=>" Term
  106                   | Term "implies" Term
  107                   | "not" Term

  108 DirectCallExpression: IdentifierPath
  109                     | IdentifierPath Arguments

  110 MethodCallExpression: SimpleOrClaspedTerm "." Identifier
  111                     | SimpleOrClaspedTerm "." Identifier Arguments

  112 LiteralCallExpression: SimpleOrClaspedTerm "." IntegerLiteral

  113 IndirectCallExpression: "(" "*" Term ")" Arguments

  114 TypeCastingExpression: Term "as" Type

  115 LetExpression: "let" AttributedVariable "=" Term "in" Term

  116 ConditionalExpression: "if" Term "then" Term "else" Term

  117 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  118 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  119 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  120 Literal: UndefinedLiteral
  121        | BooleanLiteral
  122        | IntegerLiteral
  123        | RationalLiteral
  124        | DecimalLiteral
  125        | BinaryLiteral
  126        | StringLiteral
  127        | ReferenceLiteral
  128        | ListLiteral
  129        | RangeLiteral
  130        | TupleLiteral
  131        | NamedTupleLiteral

  132 UndefinedLiteral: "undef"

  133 BooleanLiteral: "true"
  134               | "false"

  135 IntegerLiteral: "integer"

  136 RationalLiteral: "rational"

  137 DecimalLiteral: "decimal"

  138 BinaryLiteral: "binary"
  139              | "hexadecimal"

  140 StringLiteral: "string"

  141 ReferenceLiteral: "@" IdentifierPath

  142 ListLiteral: "[" "]"
  143            | "[" Terms "]"
  144            | "[" error "]"

  145 RangeLiteral: "[" Term ".." Term "]"

  146 TupleLiteral: "(" Terms "," Term ")"

  147 NamedTupleLiteral: "(" Assignments ")"

  148 Assignments: Assignments "," Assignment
  149            | Assignment

  150 Assignment: Identifier ":" Term

  151 Types: Types "," Type
  152      | Type

  153 Type: BasicType
  154     | ComposedType
  155     | TemplateType
  156     | RelationType
  157     | FixedSizedType

  158 BasicType: IdentifierPath

  159 ComposedType: "(" Types "," Type ")"
  160             | "(" TypedVariables "," TypedVariable ")"

  161 TemplateType: IdentifierPath "<" Types ">"

  162 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  163 FixedSizedType: IdentifierPath "'" Term

  164 Arguments: "(" Terms ")"
  165          | "(" error ")"
  166          | "(" ")"

  167 FunctionParameters: FunctionParameters "*" Type
  168                   | Type

  169 MaybeFunctionParameters: FunctionParameters
  170                        | %empty

  171 Parameters: Parameters "," TypedAttributedVariable
  172           | TypedAttributedVariable

  173 MaybeParameters: "(" Parameters ")"
  174                | "(" error ")"
  175                | %empty

  176 MaybeDefined: "defined" "{" Term "}"
  177             | %empty

  178 MaybeInitially: "initially" "{" MaybeInitializers "}"
  179               | %empty

  180 Initializers: Initializers "," Initializer
  181             | Initializer

  182 Initializer: Term
  183            | Term "->" Term
  184            | TupleLiteral "->" Term

  185 MaybeInitializers: Initializers
  186                  | %empty

  187 Identifier: "identifier"
  188           | "in"

  189 IdentifierPath: DotSeparatedIdentifiers
  190               | "::" Identifier

  191 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier
  192                        | Identifier

  193 Variable: TypedVariable
  194         | Identifier

  195 TypedVariables: TypedVariables "," TypedVariable
  196               | TypedVariable

  197 TypedVariable: Identifier ":" Type

  198 AttributedVariable: "[" Attributes "]" Variable
  199                   | Variable

  200 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  201                        | TypedVariable

  202 Attributes: Attributes "," Attribute
  203           | Attribute

  204 Attribute: BasicAttribute
  205          | ExpressionAttribute

  206 BasicAttribute: Identifier

  207 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 24 45 58 59 62 63 82 144 165 174
"CASM" (258) 2 3
"init" (259) 20 21
"derived" (260) 15
"enumeration" (261) 14
"rule" (262) 16 17
"using" (263) 27
"function" (264) 18
"initially" (265) 178
"defined" (266) 176
"seq" (267) 61 63
"endseq" (268) 61 63
"par" (269) 57 59
"endpar" (270) 57 59
"skip" (271) 41
"let" (272) 51 115
"in" (273) 51 52 53 54 115 117 118 119 188
"forall" (274) 52 53 118
"choose" (275) 54 117
"iterate" (276) 55
"do" (277) 52 53 54 117
"call" (278) 65 67 69
"if" (279) 42 43 116
"then" (280) 42 43 116
"else" (281) 43 116
"case" (282) 44 45
"of" (283) 44 45
"default" (284) 46
"holds" (285) 118
"exists" (286) 119
"with" (287) 53 119
"as" (288) 114
"undef" (289) 132
"false" (290) 134
"true" (291) 133
"and" (292) 104
"or" (293) 102
"xor" (294) 103
"implies" (295) 106
"not" (296) 107
"+" (297) 88 90
"-" (298) 89 91
"=" (299) 14 15 16 17 27 51 97 115
"(" (300) 81 82 113 146 147 159 160 164 165 166 173 174
")" (301) 81 82 113 146 147 159 160 164 165 166 173 174
"[" (302) 2 6 23 142 143 144 145 198 200
"]" (303) 2 6 23 142 143 144 145 198 200
"{" (304) 14 21 44 45 56 58 176 178
"}" (305) 14 21 44 45 56 58 176 178
":" (306) 18 46 47 48 150 197
"::" (307) 190 191
"_" (308) 47
"@" (309) 141
"," (310) 25 71 146 148 151 159 160 171 180 195 202
"<" (311) 98 161 162
">" (312) 99 161 162
"*" (313) 92 113 167
"/" (314) 93
"%" (315) 94
"^" (316) 95
"'" (317) 163
".." (318) 145
"." (319) 110 111 112
"->" (320) 15 17 18 162 183 184
"=>" (321) 105
":=" (322) 64
"!=" (323) 96
"<=" (324) 100
">=" (325) 101
"{|" (326) 60 62
"|}" (327) 60 62
"binary" (328) 138
"hexadecimal" (329) 139
"integer" (330) 135
"rational" (331) 136
"decimal" (332) 137
"string" (333) 140
"identifier" (334) 187
ABSOLUTE_PATH (335)
UPLUS (336)
UMINUS (337)
CALL_WITHOUT_ARGS (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
Specification (85)
    on left: 1, on right: 0
Header (86)
    on left: 2 3, on right: 1
Definitions (87)
    on left: 4 5, on right: 1 4
AttributedDefinition (88)
    on left: 6 7 8, on right: 4 5
Definition (89)
    on left: 9 10 11 12 13, on right: 6 7
EnumerationDefinition (90)
    on left: 14, on right: 9
DerivedDefinition (91)
    on left: 15, on right: 10
RuleDefinition (92)
    on left: 16 17, on right: 11
FunctionDefinition (93)
    on left: 18 19, on right: 12
ProgramFunctionDefinition (94)
    on left: 20 21, on right: 19
EnumeratorDefinition (95)
    on left: 22 23 24, on right: 25 26
Enumerators (96)
    on left: 25 26, on right: 14 25
UsingDefinition (97)
    on left: 27, on right: 13
Rule (98)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 16 17 39 40
    42 43 46 47 48 51 52 53 54 55
Rules (99)
    on left: 39 40, on right: 39 56 57 60 61
SkipRule (100)
    on left: 41, on right: 28
ConditionalRule (101)
    on left: 42 43, on right: 29
CaseRule (102)
    on left: 44 45, on right: 30
CaseLabel (103)
    on left: 46 47 48, on right: 49 50
CaseLabels (104)
    on left: 49 50, on right: 44 49
LetRule (105)
    on left: 51, on right: 31
ForallRule (106)
    on left: 52 53, on right: 32
ChooseRule (107)
    on left: 54, on right: 33
IterateRule (108)
    on left: 55, on right: 34
BlockRule (109)
    on left: 56 57 58 59, on right: 35
SequenceRule (110)
    on left: 60 61 62 63, on right: 36
UpdateRule (111)
    on left: 64, on right: 37
CallRule (112)
    on left: 65 66 67 68 69 70, on right: 38
Terms (113)
    on left: 71 72, on right: 71 143 146 164
Term (114)
    on left: 73 74 75 76 77 78 79 80, on right: 15 42 43 44 45 48 51
    52 53 54 64 71 72 81 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 103 104 105 106 107 113 114 115 116 117 118 119 145 146 150
    163 176 182 183 184 207
SimpleOrClaspedTerm (115)
    on left: 81 82 83 84 85 86 87, on right: 73 110 111 112
OperatorExpression (116)
    on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
    105 106 107, on right: 75
DirectCallExpression (117)
    on left: 108 109, on right: 64 65 66 83
MethodCallExpression (118)
    on left: 110 111, on right: 67 68 84
LiteralCallExpression (119)
    on left: 112, on right: 85
IndirectCallExpression (120)
    on left: 113, on right: 69 70 86
TypeCastingExpression (121)
    on left: 114, on right: 74
LetExpression (122)
    on left: 115, on right: 76
ConditionalExpression (123)
    on left: 116, on right: 77
ChooseExpression (124)
    on left: 117, on right: 78
UniversalQuantifierExpression (125)
    on left: 118, on right: 79
ExistentialQuantifierExpression (126)
    on left: 119, on right: 80
Literal (127)
    on left: 120 121 122 123 124 125 126 127 128 129 130 131, on right:
    87
UndefinedLiteral (128)
    on left: 132, on right: 120
BooleanLiteral (129)
    on left: 133 134, on right: 121
IntegerLiteral (130)
    on left: 135, on right: 112 122
RationalLiteral (131)
    on left: 136, on right: 123
DecimalLiteral (132)
    on left: 137, on right: 124
BinaryLiteral (133)
    on left: 138 139, on right: 125
StringLiteral (134)
    on left: 140, on right: 126
ReferenceLiteral (135)
    on left: 141, on right: 127
ListLiteral (136)
    on left: 142 143 144, on right: 128
RangeLiteral (137)
    on left: 145, on right: 129
TupleLiteral (138)
    on left: 146, on right: 130 184
NamedTupleLiteral (139)
    on left: 147, on right: 131
Assignments (140)
    on left: 148 149, on right: 147 148
Assignment (141)
    on left: 150, on right: 148 149
Types (142)
    on left: 151 152, on right: 151 159 161
Type (143)
    on left: 153 154 155 156 157, on right: 15 17 18 27 114 151 152
    159 162 167 168 197
BasicType (144)
    on left: 158, on right: 153
ComposedType (145)
    on left: 159 160, on right: 154
TemplateType (146)
    on left: 161, on right: 155
RelationType (147)
    on left: 162, on right: 156
FixedSizedType (148)
    on left: 163, on right: 157
Arguments (149)
    on left: 164 165 166, on right: 109 111 113
FunctionParameters (150)
    on left: 167 168, on right: 167 169
MaybeFunctionParameters (151)
    on left: 169 170, on right: 18 162
Parameters (152)
    on left: 171 172, on right: 171 173
MaybeParameters (153)
    on left: 173 174 175, on right: 15 16 17
MaybeDefined (154)
    on left: 176 177, on right: 18
MaybeInitially (155)
    on left: 178 179, on right: 18
Initializers (156)
    on left: 180 181, on right: 180 185
Initializer (157)
    on left: 182 183 184, on right: 180 181
MaybeInitializers (158)
    on left: 185 186, on right: 21 178
Identifier (159)
    on left: 187 188, on right: 14 15 16 17 18 22 23 27 110 111 150
    190 191 192 194 197 206 207
IdentifierPath (160)
    on left: 189 190, on right: 20 108 109 141 158 161 162 163
DotSeparatedIdentifiers (161)
    on left: 191 192, on right: 189 191
Variable (162)
    on left: 193 194, on right: 198 199
TypedVariables (163)
    on left: 195 196, on right: 160 195
TypedVariable (164)
    on left: 197, on right: 160 193 195 196 200 201
AttributedVariable (165)
    on left: 198 199, on right: 51 52 53 54 115 117 118 119
TypedAttributedVariable (166)
    on left: 200 201, on right: 171 172
Attributes (167)
    on left: 202 203, on right: 2 6 23 198 200 202
Attribute (168)
    on left: 204 205, on right: 202 203
BasicAttribute (169)
    on left: 206, on right: 204
ExpressionAttribute (170)
    on left: 207, on right: 205


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    Definitions                go to state 21
    AttributedDefinition       go to state 22
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 5

  188 Identifier: "in" .

    $default  reduce using rule 188 (Identifier)


State 6

  187 Identifier: "identifier" .

    $default  reduce using rule 187 (Identifier)


State 7

  206 BasicAttribute: Identifier .
  207 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 206 (BasicAttribute)

    Term                             go to state 51
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 8

    2 Header: "[" Attributes . "]" "CASM"
  202 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 80
    ","  shift, and go to state 81


State 9

  203 Attributes: Attribute .

    $default  reduce using rule 203 (Attributes)


State 10

  204 Attribute: BasicAttribute .

    $default  reduce using rule 204 (Attribute)


State 11

  205 Attribute: ExpressionAttribute .

    $default  reduce using rule 205 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 82
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 77
    IdentifierPath           go to state 83
    DotSeparatedIdentifiers  go to state 79


State 15

   15 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 84


State 16

   14 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 85


State 17

   16 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   17               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 86


State 18

   27 UsingDefinition: "using" . Identifier "=" Type

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 87


State 19

   18 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 88


State 20

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 89
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 21

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 90
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 22

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 23

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 24

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 25

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 26

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 27

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 28

   19 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 19 (FunctionDefinition)


State 29

   13 Definition: UsingDefinition .

    $default  reduce using rule 13 (Definition)


State 30

  115 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 95


State 31

  118 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 96


State 32

  117 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 97


State 33

  116 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 98
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 34

  119 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 99


State 35

  132 UndefinedLiteral: "undef" .

    $default  reduce using rule 132 (UndefinedLiteral)


State 36

  134 BooleanLiteral: "false" .

    $default  reduce using rule 134 (BooleanLiteral)


State 37

  133 BooleanLiteral: "true" .

    $default  reduce using rule 133 (BooleanLiteral)


State 38

  107 OperatorExpression: "not" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 100
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 39

   88 OperatorExpression: "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 101
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 40

   89 OperatorExpression: "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 102
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 41

   81 SimpleOrClaspedTerm: "(" . Term ")"
   82                    | "(" . error ")"
  113 IndirectCallExpression: "(" . "*" Term ")" Arguments
  146 TupleLiteral: "(" . Terms "," Term ")"
  147 NamedTupleLiteral: "(" . Assignments ")"

    error          shift, and go to state 103
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "*"            shift, and go to state 104
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 105
    Term                             go to state 106
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Assignments                      go to state 107
    Assignment                       go to state 108
    Identifier                       go to state 109
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 42

  142 ListLiteral: "[" . "]"
  143            | "[" . Terms "]"
  144            | "[" . error "]"
  145 RangeLiteral: "[" . Term ".." Term "]"

    error          shift, and go to state 110
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "]"            shift, and go to state 111
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 112
    Term                             go to state 113
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 43

  190 IdentifierPath: "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 114


State 44

  141 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 77
    IdentifierPath           go to state 115
    DotSeparatedIdentifiers  go to state 79


State 45

  138 BinaryLiteral: "binary" .

    $default  reduce using rule 138 (BinaryLiteral)


State 46

  139 BinaryLiteral: "hexadecimal" .

    $default  reduce using rule 139 (BinaryLiteral)


State 47

  135 IntegerLiteral: "integer" .

    $default  reduce using rule 135 (IntegerLiteral)


State 48

  136 RationalLiteral: "rational" .

    $default  reduce using rule 136 (RationalLiteral)


State 49

  137 DecimalLiteral: "decimal" .

    $default  reduce using rule 137 (DecimalLiteral)


State 50

  140 StringLiteral: "string" .

    $default  reduce using rule 140 (StringLiteral)


State 51

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  207 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 207 (ExpressionAttribute)


State 52

   73 Term: SimpleOrClaspedTerm .
  110 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  111                     | SimpleOrClaspedTerm . "." Identifier Arguments
  112 LiteralCallExpression: SimpleOrClaspedTerm . "." IntegerLiteral

    "."  shift, and go to state 134

    $default  reduce using rule 73 (Term)


State 53

   75 Term: OperatorExpression .

    $default  reduce using rule 75 (Term)


State 54

   83 SimpleOrClaspedTerm: DirectCallExpression .

    $default  reduce using rule 83 (SimpleOrClaspedTerm)


State 55

   84 SimpleOrClaspedTerm: MethodCallExpression .

    $default  reduce using rule 84 (SimpleOrClaspedTerm)


State 56

   85 SimpleOrClaspedTerm: LiteralCallExpression .

    $default  reduce using rule 85 (SimpleOrClaspedTerm)


State 57

   86 SimpleOrClaspedTerm: IndirectCallExpression .

    $default  reduce using rule 86 (SimpleOrClaspedTerm)


State 58

   74 Term: TypeCastingExpression .

    $default  reduce using rule 74 (Term)


State 59

   76 Term: LetExpression .

    $default  reduce using rule 76 (Term)


State 60

   77 Term: ConditionalExpression .

    $default  reduce using rule 77 (Term)


State 61

   78 Term: ChooseExpression .

    $default  reduce using rule 78 (Term)


State 62

   79 Term: UniversalQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 63

   80 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 80 (Term)


State 64

   87 SimpleOrClaspedTerm: Literal .

    $default  reduce using rule 87 (SimpleOrClaspedTerm)


State 65

  120 Literal: UndefinedLiteral .

    $default  reduce using rule 120 (Literal)


State 66

  121 Literal: BooleanLiteral .

    $default  reduce using rule 121 (Literal)


State 67

  122 Literal: IntegerLiteral .

    $default  reduce using rule 122 (Literal)


State 68

  123 Literal: RationalLiteral .

    $default  reduce using rule 123 (Literal)


State 69

  124 Literal: DecimalLiteral .

    $default  reduce using rule 124 (Literal)


State 70

  125 Literal: BinaryLiteral .

    $default  reduce using rule 125 (Literal)


State 71

  126 Literal: StringLiteral .

    $default  reduce using rule 126 (Literal)


State 72

  127 Literal: ReferenceLiteral .

    $default  reduce using rule 127 (Literal)


State 73

  128 Literal: ListLiteral .

    $default  reduce using rule 128 (Literal)


State 74

  129 Literal: RangeLiteral .

    $default  reduce using rule 129 (Literal)


State 75

  130 Literal: TupleLiteral .

    $default  reduce using rule 130 (Literal)


State 76

  131 Literal: NamedTupleLiteral .

    $default  reduce using rule 131 (Literal)


State 77

  192 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 192 (DotSeparatedIdentifiers)


State 78

  108 DirectCallExpression: IdentifierPath .
  109                     | IdentifierPath . Arguments

    "("  shift, and go to state 135

    $default  reduce using rule 108 (DirectCallExpression)

    Arguments  go to state 136


State 79

  189 IdentifierPath: DotSeparatedIdentifiers .
  191 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "::" Identifier

    "::"  shift, and go to state 137

    $default  reduce using rule 189 (IdentifierPath)


State 80

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 138


State 81

  202 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 139
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 82

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 186 (MaybeInitializers)

    Term                             go to state 140
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 141
    NamedTupleLiteral                go to state 76
    Initializers                     go to state 142
    Initializer                      go to state 143
    MaybeInitializers                go to state 144
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 83

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 84

   15 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 145

    $default  reduce using rule 175 (MaybeParameters)

    MaybeParameters  go to state 146


State 85

   14 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 147


State 86

   16 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   17               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 145

    $default  reduce using rule 175 (MaybeParameters)

    MaybeParameters  go to state 148


State 87

   27 UsingDefinition: "using" Identifier . "=" Type

    "="  shift, and go to state 149


State 88

   18 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 150


State 89

    6 AttributedDefinition: "[" Attributes . "]" Definition
  202 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 151
    ","  shift, and go to state 81


State 90

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 91

  198 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 152
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 92

  194 Variable: Identifier .
  197 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 153

    $default  reduce using rule 194 (Variable)


State 93

  199 AttributedVariable: Variable .

    $default  reduce using rule 199 (AttributedVariable)


State 94

  193 Variable: TypedVariable .

    $default  reduce using rule 193 (Variable)


State 95

  115 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 154


State 96

  118 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 155


State 97

  117 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 156


State 98

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  116 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 157
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 99

  119 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 158


State 100

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  107                   | "not" Term .
  114 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 107 (OperatorExpression)


State 101

   88 OperatorExpression: "+" Term .
   90                   | Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 88 (OperatorExpression)


State 102

   89 OperatorExpression: "-" Term .
   90                   | Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 89 (OperatorExpression)


State 103

   82 SimpleOrClaspedTerm: "(" error . ")"

    ")"  shift, and go to state 159


State 104

  113 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 160
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 105

   71 Terms: Terms . "," Term
  146 TupleLiteral: "(" Terms . "," Term ")"

    ","  shift, and go to state 161


State 106

   72 Terms: Term .
   81 SimpleOrClaspedTerm: "(" Term . ")"
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    ")"        shift, and go to state 162
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 72 (Terms)


State 107

  147 NamedTupleLiteral: "(" Assignments . ")"
  148 Assignments: Assignments . "," Assignment

    ")"  shift, and go to state 163
    ","  shift, and go to state 164


State 108

  149 Assignments: Assignment .

    $default  reduce using rule 149 (Assignments)


State 109

  150 Assignment: Identifier . ":" Term
  192 DotSeparatedIdentifiers: Identifier .

    ":"  shift, and go to state 165

    $default  reduce using rule 192 (DotSeparatedIdentifiers)


State 110

  144 ListLiteral: "[" error . "]"

    "]"  shift, and go to state 166


State 111

  142 ListLiteral: "[" "]" .

    $default  reduce using rule 142 (ListLiteral)


State 112

   71 Terms: Terms . "," Term
  143 ListLiteral: "[" Terms . "]"

    "]"  shift, and go to state 167
    ","  shift, and go to state 168


State 113

   72 Terms: Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  145 RangeLiteral: "[" Term . ".." Term "]"

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    ".."       shift, and go to state 169
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 72 (Terms)


State 114

  190 IdentifierPath: "::" Identifier .

    $default  reduce using rule 190 (IdentifierPath)


State 115

  141 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 141 (ReferenceLiteral)


State 116

  114 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 171
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 117

  104 OperatorExpression: Term "and" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 178
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 118

  102 OperatorExpression: Term "or" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 179
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 119

  103 OperatorExpression: Term "xor" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 180
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 120

  106 OperatorExpression: Term "implies" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 181
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 121

   90 OperatorExpression: Term "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 182
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 122

   91 OperatorExpression: Term "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 183
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 123

   97 OperatorExpression: Term "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 184
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 124

   98 OperatorExpression: Term "<" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 185
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 125

   99 OperatorExpression: Term ">" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 186
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 126

   92 OperatorExpression: Term "*" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 187
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 127

   93 OperatorExpression: Term "/" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 188
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 128

   94 OperatorExpression: Term "%" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 189
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 129

   95 OperatorExpression: Term "^" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 190
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 130

  105 OperatorExpression: Term "=>" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 191
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 131

   96 OperatorExpression: Term "!=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 192
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 132

  100 OperatorExpression: Term "<=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 193
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 133

  101 OperatorExpression: Term ">=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 194
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 134

  110 MethodCallExpression: SimpleOrClaspedTerm "." . Identifier
  111                     | SimpleOrClaspedTerm "." . Identifier Arguments
  112 LiteralCallExpression: SimpleOrClaspedTerm "." . IntegerLiteral

    "in"          shift, and go to state 5
    "integer"     shift, and go to state 47
    "identifier"  shift, and go to state 6

    IntegerLiteral  go to state 195
    Identifier      go to state 196


State 135

  164 Arguments: "(" . Terms ")"
  165          | "(" . error ")"
  166          | "(" . ")"

    error          shift, and go to state 197
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    ")"            shift, and go to state 198
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 199
    Term                             go to state 200
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 136

  109 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 109 (DirectCallExpression)


State 137

  191 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 201


State 138

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 139

  202 Attributes: Attributes "," Attribute .

    $default  reduce using rule 202 (Attributes)


State 140

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  182 Initializer: Term .
  183            | Term . "->" Term

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "->"       shift, and go to state 202
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 182 (Initializer)


State 141

  130 Literal: TupleLiteral .
  184 Initializer: TupleLiteral . "->" Term

    "->"  shift, and go to state 203

    "->"      [reduce using rule 130 (Literal)]
    $default  reduce using rule 130 (Literal)


State 142

  180 Initializers: Initializers . "," Initializer
  185 MaybeInitializers: Initializers .

    ","  shift, and go to state 204

    $default  reduce using rule 185 (MaybeInitializers)


State 143

  181 Initializers: Initializer .

    $default  reduce using rule 181 (Initializers)


State 144

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 205


State 145

  173 MaybeParameters: "(" . Parameters ")"
  174                | "(" . error ")"

    error         shift, and go to state 206
    "in"          shift, and go to state 5
    "["           shift, and go to state 207
    "identifier"  shift, and go to state 6

    Parameters               go to state 208
    Identifier               go to state 209
    TypedVariable            go to state 210
    TypedAttributedVariable  go to state 211


State 146

   15 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 212


State 147

   14 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 213


State 148

   16 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   17               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 214
    "->"  shift, and go to state 215


State 149

   27 UsingDefinition: "using" Identifier "=" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 216
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 150

   18 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 170 (MaybeFunctionParameters)

    Type                     go to state 217
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    FunctionParameters       go to state 218
    MaybeFunctionParameters  go to state 219
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 151

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19

    Definition                 go to state 220
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 152

  198 AttributedVariable: "[" Attributes . "]" Variable
  202 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 221
    ","  shift, and go to state 81


State 153

  197 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 222
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 154

  115 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 223
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 155

  118 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 224
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 156

  117 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 225
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 157

  116 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 226
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 158

  119 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 227
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 159

   82 SimpleOrClaspedTerm: "(" error ")" .

    $default  reduce using rule 82 (SimpleOrClaspedTerm)


State 160

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  113 IndirectCallExpression: "(" "*" Term . ")" Arguments
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    ")"        shift, and go to state 228
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 161

   71 Terms: Terms "," . Term
  146 TupleLiteral: "(" Terms "," . Term ")"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 229
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 162

   81 SimpleOrClaspedTerm: "(" Term ")" .

    $default  reduce using rule 81 (SimpleOrClaspedTerm)


State 163

  147 NamedTupleLiteral: "(" Assignments ")" .

    $default  reduce using rule 147 (NamedTupleLiteral)


State 164

  148 Assignments: Assignments "," . Assignment

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Assignment  go to state 230
    Identifier  go to state 231


State 165

  150 Assignment: Identifier ":" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 232
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 166

  144 ListLiteral: "[" error "]" .

    $default  reduce using rule 144 (ListLiteral)


State 167

  143 ListLiteral: "[" Terms "]" .

    $default  reduce using rule 143 (ListLiteral)


State 168

   71 Terms: Terms "," . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 233
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 169

  145 RangeLiteral: "[" Term ".." . Term "]"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 234
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 170

  159 ComposedType: "(" . Types "," Type ")"
  160             | "(" . TypedVariables "," TypedVariable ")"

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Types                    go to state 235
    Type                     go to state 236
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 237
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79
    TypedVariables           go to state 238
    TypedVariable            go to state 239


State 171

  114 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 114 (TypeCastingExpression)


State 172

  153 Type: BasicType .

    $default  reduce using rule 153 (Type)


State 173

  154 Type: ComposedType .

    $default  reduce using rule 154 (Type)


State 174

  155 Type: TemplateType .

    $default  reduce using rule 155 (Type)


State 175

  156 Type: RelationType .

    $default  reduce using rule 156 (Type)


State 176

  157 Type: FixedSizedType .

    $default  reduce using rule 157 (Type)


State 177

  158 BasicType: IdentifierPath .
  161 TemplateType: IdentifierPath . "<" Types ">"
  162 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  163 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 240
    "'"  shift, and go to state 241

    $default  reduce using rule 158 (BasicType)


State 178

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  104                   | Term "and" Term .
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "="   shift, and go to state 123
    "<"   shift, and go to state 124
    ">"   shift, and go to state 125
    "*"   shift, and go to state 126
    "/"   shift, and go to state 127
    "%"   shift, and go to state 128
    "^"   shift, and go to state 129
    "!="  shift, and go to state 131
    "<="  shift, and go to state 132
    ">="  shift, and go to state 133

    $default  reduce using rule 104 (OperatorExpression)


State 179

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  102                   | Term "or" Term .
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 117
    "xor"  shift, and go to state 119
    "+"    shift, and go to state 121
    "-"    shift, and go to state 122
    "="    shift, and go to state 123
    "<"    shift, and go to state 124
    ">"    shift, and go to state 125
    "*"    shift, and go to state 126
    "/"    shift, and go to state 127
    "%"    shift, and go to state 128
    "^"    shift, and go to state 129
    "!="   shift, and go to state 131
    "<="   shift, and go to state 132
    ">="   shift, and go to state 133

    $default  reduce using rule 102 (OperatorExpression)


State 180

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  103                   | Term "xor" Term .
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 117
    "+"    shift, and go to state 121
    "-"    shift, and go to state 122
    "="    shift, and go to state 123
    "<"    shift, and go to state 124
    ">"    shift, and go to state 125
    "*"    shift, and go to state 126
    "/"    shift, and go to state 127
    "%"    shift, and go to state 128
    "^"    shift, and go to state 129
    "!="   shift, and go to state 131
    "<="   shift, and go to state 132
    ">="   shift, and go to state 133

    $default  reduce using rule 103 (OperatorExpression)


State 181

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  106                   | Term "implies" Term .
  114 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 117
    "or"   shift, and go to state 118
    "xor"  shift, and go to state 119
    "+"    shift, and go to state 121
    "-"    shift, and go to state 122
    "="    shift, and go to state 123
    "<"    shift, and go to state 124
    ">"    shift, and go to state 125
    "*"    shift, and go to state 126
    "/"    shift, and go to state 127
    "%"    shift, and go to state 128
    "^"    shift, and go to state 129
    "!="   shift, and go to state 131
    "<="   shift, and go to state 132
    ">="   shift, and go to state 133

    $default  reduce using rule 106 (OperatorExpression)


State 182

   90 OperatorExpression: Term . "+" Term
   90                   | Term "+" Term .
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 90 (OperatorExpression)


State 183

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   91                   | Term "-" Term .
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 91 (OperatorExpression)


State 184

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   97                   | Term "=" Term .
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "<"   shift, and go to state 124
    ">"   shift, and go to state 125
    "*"   shift, and go to state 126
    "/"   shift, and go to state 127
    "%"   shift, and go to state 128
    "^"   shift, and go to state 129
    "<="  shift, and go to state 132
    ">="  shift, and go to state 133

    $default  reduce using rule 97 (OperatorExpression)


State 185

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   98                   | Term "<" Term .
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 121
    "-"  shift, and go to state 122
    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 98 (OperatorExpression)


State 186

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
   99                   | Term ">" Term .
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 121
    "-"  shift, and go to state 122
    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 99 (OperatorExpression)


State 187

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   92                   | Term "*" Term .
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 129

    $default  reduce using rule 92 (OperatorExpression)


State 188

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   93                   | Term "/" Term .
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 129

    $default  reduce using rule 93 (OperatorExpression)


State 189

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   94                   | Term "%" Term .
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 129

    $default  reduce using rule 94 (OperatorExpression)


State 190

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   95                   | Term "^" Term .
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 95 (OperatorExpression)


State 191

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  105                   | Term "=>" Term .
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 117
    "or"   shift, and go to state 118
    "xor"  shift, and go to state 119
    "+"    shift, and go to state 121
    "-"    shift, and go to state 122
    "="    shift, and go to state 123
    "<"    shift, and go to state 124
    ">"    shift, and go to state 125
    "*"    shift, and go to state 126
    "/"    shift, and go to state 127
    "%"    shift, and go to state 128
    "^"    shift, and go to state 129
    "!="   shift, and go to state 131
    "<="   shift, and go to state 132
    ">="   shift, and go to state 133

    $default  reduce using rule 105 (OperatorExpression)


State 192

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   96                   | Term "!=" Term .
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "<"   shift, and go to state 124
    ">"   shift, and go to state 125
    "*"   shift, and go to state 126
    "/"   shift, and go to state 127
    "%"   shift, and go to state 128
    "^"   shift, and go to state 129
    "<="  shift, and go to state 132
    ">="  shift, and go to state 133

    $default  reduce using rule 96 (OperatorExpression)


State 193

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  100                   | Term "<=" Term .
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 121
    "-"  shift, and go to state 122
    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 100 (OperatorExpression)


State 194

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  101                   | Term ">=" Term .
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 121
    "-"  shift, and go to state 122
    "*"  shift, and go to state 126
    "/"  shift, and go to state 127
    "%"  shift, and go to state 128
    "^"  shift, and go to state 129

    $default  reduce using rule 101 (OperatorExpression)


State 195

  112 LiteralCallExpression: SimpleOrClaspedTerm "." IntegerLiteral .

    $default  reduce using rule 112 (LiteralCallExpression)


State 196

  110 MethodCallExpression: SimpleOrClaspedTerm "." Identifier .
  111                     | SimpleOrClaspedTerm "." Identifier . Arguments

    "("  shift, and go to state 135

    $default  reduce using rule 110 (MethodCallExpression)

    Arguments  go to state 242


State 197

  165 Arguments: "(" error . ")"

    ")"  shift, and go to state 243


State 198

  166 Arguments: "(" ")" .

    $default  reduce using rule 166 (Arguments)


State 199

   71 Terms: Terms . "," Term
  164 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 244
    ","  shift, and go to state 168


State 200

   72 Terms: Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 72 (Terms)


State 201

  191 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier .

    $default  reduce using rule 191 (DotSeparatedIdentifiers)


State 202

  183 Initializer: Term "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 245
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 203

  184 Initializer: TupleLiteral "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 246
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 204

  180 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 140
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 141
    NamedTupleLiteral                go to state 76
    Initializer                      go to state 247
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 205

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 206

  174 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 248


State 207

  200 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 249
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 208

  171 Parameters: Parameters . "," TypedAttributedVariable
  173 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 250
    ","  shift, and go to state 251


State 209

  197 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 153


State 210

  201 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 201 (TypedAttributedVariable)


State 211

  172 Parameters: TypedAttributedVariable .

    $default  reduce using rule 172 (Parameters)


State 212

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 252
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 213

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 253
    "in"          shift, and go to state 5
    "["           shift, and go to state 254
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 255
    Enumerators           go to state 256
    Identifier            go to state 257


State 214

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 270
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 215

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 286
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 216

   27 UsingDefinition: "using" Identifier "=" Type .

    $default  reduce using rule 27 (UsingDefinition)


State 217

  168 FunctionParameters: Type .

    $default  reduce using rule 168 (FunctionParameters)


State 218

  167 FunctionParameters: FunctionParameters . "*" Type
  169 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 287

    $default  reduce using rule 169 (MaybeFunctionParameters)


State 219

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 288


State 220

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 221

  198 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 92
    Variable       go to state 289
    TypedVariable  go to state 94


State 222

  197 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 197 (TypedVariable)


State 223

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  115 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 290
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 224

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  118 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 291
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 225

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  117 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 292
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 226

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  116 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 293
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 227

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  119 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 294
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 228

  113 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 135

    Arguments  go to state 295


State 229

   71 Terms: Terms "," Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  146 TupleLiteral: "(" Terms "," Term . ")"

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    ")"        shift, and go to state 296
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 71 (Terms)


State 230

  148 Assignments: Assignments "," Assignment .

    $default  reduce using rule 148 (Assignments)


State 231

  150 Assignment: Identifier . ":" Term

    ":"  shift, and go to state 165


State 232

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  150 Assignment: Identifier ":" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 150 (Assignment)


State 233

   71 Terms: Terms "," Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 71 (Terms)


State 234

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  145 RangeLiteral: "[" Term ".." Term . "]"

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "]"        shift, and go to state 297
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 235

  151 Types: Types . "," Type
  159 ComposedType: "(" Types . "," Type ")"

    ","  shift, and go to state 298


State 236

  152 Types: Type .

    $default  reduce using rule 152 (Types)


State 237

  192 DotSeparatedIdentifiers: Identifier .
  197 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 153

    $default  reduce using rule 192 (DotSeparatedIdentifiers)


State 238

  160 ComposedType: "(" TypedVariables . "," TypedVariable ")"
  195 TypedVariables: TypedVariables . "," TypedVariable

    ","  shift, and go to state 299


State 239

  196 TypedVariables: TypedVariable .

    $default  reduce using rule 196 (TypedVariables)


State 240

  161 TemplateType: IdentifierPath "<" . Types ">"
  162 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 170 (MaybeFunctionParameters)

    Types                    go to state 300
    Type                     go to state 301
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    FunctionParameters       go to state 218
    MaybeFunctionParameters  go to state 302
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 241

  163 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 303
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 242

  111 MethodCallExpression: SimpleOrClaspedTerm "." Identifier Arguments .

    $default  reduce using rule 111 (MethodCallExpression)


State 243

  165 Arguments: "(" error ")" .

    $default  reduce using rule 165 (Arguments)


State 244

  164 Arguments: "(" Terms ")" .

    $default  reduce using rule 164 (Arguments)


State 245

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  183 Initializer: Term "->" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 183 (Initializer)


State 246

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  184 Initializer: TupleLiteral "->" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 184 (Initializer)


State 247

  180 Initializers: Initializers "," Initializer .

    $default  reduce using rule 180 (Initializers)


State 248

  174 MaybeParameters: "(" error ")" .

    $default  reduce using rule 174 (MaybeParameters)


State 249

  200 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  202 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 304
    ","  shift, and go to state 81


State 250

  173 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 173 (MaybeParameters)


State 251

  171 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 207
    "identifier"  shift, and go to state 6

    Identifier               go to state 209
    TypedVariable            go to state 210
    TypedAttributedVariable  go to state 305


State 252

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 306


State 253

   24 EnumeratorDefinition: error .

    $default  reduce using rule 24 (EnumeratorDefinition)


State 254

   23 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 307
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 255

   26 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 26 (Enumerators)


State 256

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   25 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 308
    ","  shift, and go to state 309


State 257

   22 EnumeratorDefinition: Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 258

   61 SequenceRule: "seq" . Rules "endseq"
   63             | "seq" . error "endseq"

    error          shift, and go to state 310
    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 311
    Rules                    go to state 312
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 259

   57 BlockRule: "par" . Rules "endpar"
   59          | "par" . error "endpar"

    error          shift, and go to state 313
    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 311
    Rules                    go to state 314
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 260

   41 SkipRule: "skip" .

    $default  reduce using rule 41 (SkipRule)


State 261

   51 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 315


State 262

   52 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   53           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 316


State 263

   54 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 91
    "identifier"  shift, and go to state 6

    Identifier          go to state 92
    Variable            go to state 93
    TypedVariable       go to state 94
    AttributedVariable  go to state 317


State 264

   55 IterateRule: "iterate" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 318
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 265

   65 CallRule: "call" . DirectCallExpression
   67         | "call" . MethodCallExpression
   69         | "call" . IndirectCallExpression

    "in"           shift, and go to state 5
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 319
    MethodCallExpression     go to state 320
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 321
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 266

   42 ConditionalRule: "if" . Term "then" Rule
   43                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 322
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 267

   44 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   45         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 323
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 268

   56 BlockRule: "{" . Rules "}"
   58          | "{" . error "}"

    error          shift, and go to state 324
    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 311
    Rules                    go to state 325
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 269

   60 SequenceRule: "{|" . Rules "|}"
   62             | "{|" . error "|}"

    error          shift, and go to state 326
    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 311
    Rules                    go to state 327
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 270

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 271

   28 Rule: SkipRule .

    $default  reduce using rule 28 (Rule)


State 272

   29 Rule: ConditionalRule .

    $default  reduce using rule 29 (Rule)


State 273

   30 Rule: CaseRule .

    $default  reduce using rule 30 (Rule)


State 274

   31 Rule: LetRule .

    $default  reduce using rule 31 (Rule)


State 275

   32 Rule: ForallRule .

    $default  reduce using rule 32 (Rule)


State 276

   33 Rule: ChooseRule .

    $default  reduce using rule 33 (Rule)


State 277

   34 Rule: IterateRule .

    $default  reduce using rule 34 (Rule)


State 278

   35 Rule: BlockRule .

    $default  reduce using rule 35 (Rule)


State 279

   36 Rule: SequenceRule .

    $default  reduce using rule 36 (Rule)


State 280

   37 Rule: UpdateRule .

    $default  reduce using rule 37 (Rule)


State 281

   38 Rule: CallRule .

    $default  reduce using rule 38 (Rule)


State 282

  110 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  111                     | SimpleOrClaspedTerm . "." Identifier Arguments
  112 LiteralCallExpression: SimpleOrClaspedTerm . "." IntegerLiteral

    "."  shift, and go to state 134


State 283

   64 UpdateRule: DirectCallExpression . ":=" Term
   66 CallRule: DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    ":="  shift, and go to state 328

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 66 (CallRule)


State 284

   68 CallRule: MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 68 (CallRule)


State 285

   70 CallRule: IndirectCallExpression .
   86 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 86 (SimpleOrClaspedTerm)
    $default  reduce using rule 70 (CallRule)


State 286

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 329


State 287

  167 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 330
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 288

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 331
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 289

  198 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 198 (AttributedVariable)


State 290

  115 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 332
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 291

  118 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 333
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 292

  117 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 334
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 293

  116 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 335
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 294

  119 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 336
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 295

  113 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 113 (IndirectCallExpression)


State 296

  146 TupleLiteral: "(" Terms "," Term ")" .

    $default  reduce using rule 146 (TupleLiteral)


State 297

  145 RangeLiteral: "[" Term ".." Term "]" .

    $default  reduce using rule 145 (RangeLiteral)


State 298

  151 Types: Types "," . Type
  159 ComposedType: "(" Types "," . Type ")"

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 337
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 299

  160 ComposedType: "(" TypedVariables "," . TypedVariable ")"
  195 TypedVariables: TypedVariables "," . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 209
    TypedVariable  go to state 338


State 300

  151 Types: Types . "," Type
  161 TemplateType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 339
    ">"  shift, and go to state 340


State 301

  152 Types: Type .
  168 FunctionParameters: Type .

    "*"       reduce using rule 168 (FunctionParameters)
    "->"      reduce using rule 168 (FunctionParameters)
    $default  reduce using rule 152 (Types)


State 302

  162 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 341


State 303

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  163 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 163 (FixedSizedType)


State 304

  200 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 209
    TypedVariable  go to state 342


State 305

  171 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 171 (Parameters)


State 306

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 343
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 307

   23 EnumeratorDefinition: "[" Attributes . "]" Identifier
  202 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 344
    ","  shift, and go to state 81


State 308

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 14 (EnumerationDefinition)


State 309

   25 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 253
    "in"          shift, and go to state 5
    "["           shift, and go to state 254
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 345
    Identifier            go to state 257


State 310

   63 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 346


State 311

   40 Rules: Rule .

    $default  reduce using rule 40 (Rules)


State 312

   39 Rules: Rules . Rule
   61 SequenceRule: "seq" Rules . "endseq"

    "seq"          shift, and go to state 258
    "endseq"       shift, and go to state 347
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 313

   59 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 349


State 314

   39 Rules: Rules . Rule
   57 BlockRule: "par" Rules . "endpar"

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "endpar"       shift, and go to state 350
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 315

   51 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 351


State 316

   52 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   53           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 352


State 317

   54 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 353


State 318

   55 IterateRule: "iterate" Rule .

    $default  reduce using rule 55 (IterateRule)


State 319

   65 CallRule: "call" DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 65 (CallRule)


State 320

   67 CallRule: "call" MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 67 (CallRule)


State 321

   69 CallRule: "call" IndirectCallExpression .
   86 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 86 (SimpleOrClaspedTerm)
    $default  reduce using rule 69 (CallRule)


State 322

   42 ConditionalRule: "if" Term . "then" Rule
   43                | "if" Term . "then" Rule "else" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 354
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 323

   44 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   45         | "case" Term . "of" "{" error "}"
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 355
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 324

   58 BlockRule: "{" error . "}"

    "}"  shift, and go to state 356


State 325

   39 Rules: Rules . Rule
   56 BlockRule: "{" Rules . "}"

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "}"            shift, and go to state 357
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 326

   62 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 358


State 327

   39 Rules: Rules . Rule
   60 SequenceRule: "{|" Rules . "|}"

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "|}"           shift, and go to state 359
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 328

   64 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 360
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 329

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 361
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 330

  167 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 167 (FunctionParameters)


State 331

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 362

    $default  reduce using rule 177 (MaybeDefined)

    MaybeDefined  go to state 363


State 332

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  115 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 115 (LetExpression)


State 333

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  118 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 118 (UniversalQuantifierExpression)


State 334

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  117 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 117 (ChooseExpression)


State 335

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  116 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 116 (ConditionalExpression)


State 336

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  119 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 119 (ExistentialQuantifierExpression)


State 337

  151 Types: Types "," Type .
  159 ComposedType: "(" Types "," Type . ")"

    ")"  shift, and go to state 364

    $default  reduce using rule 151 (Types)


State 338

  160 ComposedType: "(" TypedVariables "," TypedVariable . ")"
  195 TypedVariables: TypedVariables "," TypedVariable .

    ")"  shift, and go to state 365

    $default  reduce using rule 195 (TypedVariables)


State 339

  151 Types: Types "," . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 366
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 340

  161 TemplateType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 161 (TemplateType)


State 341

  162 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "("           shift, and go to state 170
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 367
    BasicType                go to state 172
    ComposedType             go to state 173
    TemplateType             go to state 174
    RelationType             go to state 175
    FixedSizedType           go to state 176
    Identifier               go to state 77
    IdentifierPath           go to state 177
    DotSeparatedIdentifiers  go to state 79


State 342

  200 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 200 (TypedAttributedVariable)


State 343

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 15 (DerivedDefinition)


State 344

   23 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 368


State 345

   25 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 346

   63 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 63 (SequenceRule)


State 347

   61 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 348

   39 Rules: Rules Rule .

    $default  reduce using rule 39 (Rules)


State 349

   59 BlockRule: "par" error "endpar" .

    $default  reduce using rule 59 (BlockRule)


State 350

   57 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 351

   51 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 369
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 352

   52 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   53           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 370
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 353

   54 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 371
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 354

   42 ConditionalRule: "if" Term "then" . Rule
   43                | "if" Term "then" . Rule "else" Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 372
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 355

   44 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   45         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 373


State 356

   58 BlockRule: "{" error "}" .

    $default  reduce using rule 58 (BlockRule)


State 357

   56 BlockRule: "{" Rules "}" .

    $default  reduce using rule 56 (BlockRule)


State 358

   62 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 62 (SequenceRule)


State 359

   60 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 360

   64 UpdateRule: DirectCallExpression ":=" Term .
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133

    $default  reduce using rule 64 (UpdateRule)


State 361

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 17 (RuleDefinition)


State 362

  176 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 374


State 363

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 375

    $default  reduce using rule 179 (MaybeInitially)

    MaybeInitially  go to state 376


State 364

  159 ComposedType: "(" Types "," Type ")" .

    $default  reduce using rule 159 (ComposedType)


State 365

  160 ComposedType: "(" TypedVariables "," TypedVariable ")" .

    $default  reduce using rule 160 (ComposedType)


State 366

  151 Types: Types "," Type .

    $default  reduce using rule 151 (Types)


State 367

  162 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 377


State 368

   23 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 369

   51 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 378
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 370

   52 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   53           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 379
    "with"     shift, and go to state 380
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 371

   54 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 381
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 372

   42 ConditionalRule: "if" Term "then" Rule .
   43                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 382

    $default  reduce using rule 42 (ConditionalRule)


State 373

   44 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   45         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 383
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 384
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "_"            shift, and go to state 385
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 386
    CaseLabels                       go to state 387
    Term                             go to state 388
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 374

  176 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 389
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 375

  178 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 390


State 376

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 18 (FunctionDefinition)


State 377

  162 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 162 (RelationType)


State 378

   51 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 391
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 379

   52 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 392
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 380

   53 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 393
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 381

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 394
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 382

   43 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 395
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 383

   45 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 396


State 384

   46 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 397


State 385

   47 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 398


State 386

   50 CaseLabels: CaseLabel .

    $default  reduce using rule 50 (CaseLabels)


State 387

   44 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   49 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 384
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "}"            shift, and go to state 399
    "::"           shift, and go to state 43
    "_"            shift, and go to state 385
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 400
    Term                             go to state 388
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 75
    NamedTupleLiteral                go to state 76
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 388

   48 CaseLabel: Term . ":" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    ":"        shift, and go to state 401
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 389

   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type
  176 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "}"        shift, and go to state 402
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 390

  178 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 186 (MaybeInitializers)

    Term                             go to state 140
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    LiteralCallExpression            go to state 56
    IndirectCallExpression           go to state 57
    TypeCastingExpression            go to state 58
    LetExpression                    go to state 59
    ConditionalExpression            go to state 60
    ChooseExpression                 go to state 61
    UniversalQuantifierExpression    go to state 62
    ExistentialQuantifierExpression  go to state 63
    Literal                          go to state 64
    UndefinedLiteral                 go to state 65
    BooleanLiteral                   go to state 66
    IntegerLiteral                   go to state 67
    RationalLiteral                  go to state 68
    DecimalLiteral                   go to state 69
    BinaryLiteral                    go to state 70
    StringLiteral                    go to state 71
    ReferenceLiteral                 go to state 72
    ListLiteral                      go to state 73
    RangeLiteral                     go to state 74
    TupleLiteral                     go to state 141
    NamedTupleLiteral                go to state 76
    Initializers                     go to state 142
    Initializer                      go to state 143
    MaybeInitializers                go to state 403
    Identifier                       go to state 77
    IdentifierPath                   go to state 78
    DotSeparatedIdentifiers          go to state 79


State 391

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 51 (LetRule)


State 392

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ForallRule)


State 393

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   90 OperatorExpression: Term . "+" Term
   91                   | Term . "-" Term
   92                   | Term . "*" Term
   93                   | Term . "/" Term
   94                   | Term . "%" Term
   95                   | Term . "^" Term
   96                   | Term . "!=" Term
   97                   | Term . "=" Term
   98                   | Term . "<" Term
   99                   | Term . ">" Term
  100                   | Term . "<=" Term
  101                   | Term . ">=" Term
  102                   | Term . "or" Term
  103                   | Term . "xor" Term
  104                   | Term . "and" Term
  105                   | Term . "=>" Term
  106                   | Term . "implies" Term
  114 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 404
    "as"       shift, and go to state 116
    "and"      shift, and go to state 117
    "or"       shift, and go to state 118
    "xor"      shift, and go to state 119
    "implies"  shift, and go to state 120
    "+"        shift, and go to state 121
    "-"        shift, and go to state 122
    "="        shift, and go to state 123
    "<"        shift, and go to state 124
    ">"        shift, and go to state 125
    "*"        shift, and go to state 126
    "/"        shift, and go to state 127
    "%"        shift, and go to state 128
    "^"        shift, and go to state 129
    "=>"       shift, and go to state 130
    "!="       shift, and go to state 131
    "<="       shift, and go to state 132
    ">="       shift, and go to state 133


State 394

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 54 (ChooseRule)


State 395

   43 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 43 (ConditionalRule)


State 396

   45 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 45 (CaseRule)


State 397

   46 CaseLabel: "default" ":" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 405
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 398

   47 CaseLabel: "_" ":" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 406
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 399

   44 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 44 (CaseRule)


State 400

   49 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 49 (CaseLabels)


State 401

   48 CaseLabel: Term ":" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 407
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 402

  176 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 176 (MaybeDefined)


State 403

  178 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 408


State 404

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"          shift, and go to state 258
    "par"          shift, and go to state 259
    "skip"         shift, and go to state 260
    "let"          shift, and go to state 261
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 262
    "choose"       shift, and go to state 263
    "iterate"      shift, and go to state 264
    "call"         shift, and go to state 265
    "if"           shift, and go to state 266
    "case"         shift, and go to state 267
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 268
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 269
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 409
    SkipRule                 go to state 271
    ConditionalRule          go to state 272
    CaseRule                 go to state 273
    LetRule                  go to state 274
    ForallRule               go to state 275
    ChooseRule               go to state 276
    IterateRule              go to state 277
    BlockRule                go to state 278
    SequenceRule             go to state 279
    UpdateRule               go to state 280
    CallRule                 go to state 281
    SimpleOrClaspedTerm      go to state 282
    DirectCallExpression     go to state 283
    MethodCallExpression     go to state 284
    LiteralCallExpression    go to state 56
    IndirectCallExpression   go to state 285
    Literal                  go to state 64
    UndefinedLiteral         go to state 65
    BooleanLiteral           go to state 66
    IntegerLiteral           go to state 67
    RationalLiteral          go to state 68
    DecimalLiteral           go to state 69
    BinaryLiteral            go to state 70
    StringLiteral            go to state 71
    ReferenceLiteral         go to state 72
    ListLiteral              go to state 73
    RangeLiteral             go to state 74
    TupleLiteral             go to state 75
    NamedTupleLiteral        go to state 76
    Identifier               go to state 77
    IdentifierPath           go to state 78
    DotSeparatedIdentifiers  go to state 79


State 405

   46 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 406

   47 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 47 (CaseLabel)


State 407

   48 CaseLabel: Term ":" Rule .

    $default  reduce using rule 48 (CaseLabel)


State 408

  178 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 178 (MaybeInitially)


State 409

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 53 (ForallRule)
