Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition
   13           | UsingDefinition

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   17               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   19                   | ProgramFunctionDefinition

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 EnumeratorDefinition: Identifier
   23                     | "[" Attributes "]" Identifier
   24                     | error

   25 Enumerators: Enumerators "," EnumeratorDefinition
   26            | EnumeratorDefinition

   27 UsingDefinition: "using" Identifier "=" Type

   28 Rule: SkipRule
   29     | ConditionalRule
   30     | CaseRule
   31     | LetRule
   32     | ForallRule
   33     | ChooseRule
   34     | IterateRule
   35     | BlockRule
   36     | SequenceRule
   37     | UpdateRule
   38     | CallRule

   39 Rules: Rules Rule
   40      | Rule

   41 SkipRule: "skip"

   42 ConditionalRule: "if" Term "then" Rule
   43                | "if" Term "then" Rule "else" Rule

   44 CaseRule: "case" Term "of" "{" CaseLabels "}"
   45         | "case" Term "of" "{" error "}"

   46 CaseLabel: "default" ":" Rule
   47          | "_" ":" Rule
   48          | Term ":" Rule

   49 CaseLabels: CaseLabels CaseLabel
   50           | CaseLabel

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   53           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   55 IterateRule: "iterate" Rule

   56 BlockRule: "{" Rules "}"
   57          | "par" Rules "endpar"
   58          | "{" error "}"
   59          | "par" error "endpar"

   60 SequenceRule: "{|" Rules "|}"
   61             | "seq" Rules "endseq"
   62             | "{|" error "|}"
   63             | "seq" error "endseq"

   64 UpdateRule: DirectCallExpression ":=" Term

   65 CallRule: "call" DirectCallExpression
   66         | DirectCallExpression
   67         | "call" MethodCallExpression
   68         | MethodCallExpression
   69         | "call" IndirectCallExpression
   70         | IndirectCallExpression

   71 Terms: Terms "," Term
   72      | Term

   73 Term: SimpleOrClaspedTerm
   74     | TypeCastingExpression
   75     | OperatorExpression
   76     | LetExpression
   77     | ConditionalExpression
   78     | ChooseExpression
   79     | UniversalQuantifierExpression
   80     | ExistentialQuantifierExpression

   81 SimpleOrClaspedTerm: "(" Term ")"
   82                    | "(" error ")"
   83                    | DirectCallExpression
   84                    | MethodCallExpression
   85                    | IndirectCallExpression
   86                    | Literal

   87 OperatorExpression: "+" Term
   88                   | "-" Term
   89                   | Term "+" Term
   90                   | Term "-" Term
   91                   | Term "*" Term
   92                   | Term "/" Term
   93                   | Term "%" Term
   94                   | Term "^" Term
   95                   | Term "!=" Term
   96                   | Term "=" Term
   97                   | Term "<" Term
   98                   | Term ">" Term
   99                   | Term "<=" Term
  100                   | Term ">=" Term
  101                   | Term "or" Term
  102                   | Term "xor" Term
  103                   | Term "and" Term
  104                   | Term "=>" Term
  105                   | Term "implies" Term
  106                   | "not" Term

  107 DirectCallExpression: IdentifierPath
  108                     | IdentifierPath Arguments

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier
  110                     | SimpleOrClaspedTerm "." Identifier Arguments

  111 IndirectCallExpression: "(" "*" Term ")" Arguments

  112 TypeCastingExpression: Term "as" Type

  113 LetExpression: "let" AttributedVariable "=" Term "in" Term

  114 ConditionalExpression: "if" Term "then" Term "else" Term

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  118 Literal: UndefinedLiteral
  119        | BooleanLiteral
  120        | IntegerLiteral
  121        | RationalLiteral
  122        | DecimalLiteral
  123        | BinaryLiteral
  124        | StringLiteral
  125        | ReferenceLiteral
  126        | ListLiteral
  127        | RangeLiteral

  128 UndefinedLiteral: "undef"

  129 BooleanLiteral: "true"
  130               | "false"

  131 IntegerLiteral: "integer"

  132 RationalLiteral: "rational"

  133 DecimalLiteral: "decimal"

  134 BinaryLiteral: "binary"
  135              | "hexadecimal"

  136 StringLiteral: "string"

  137 ReferenceLiteral: "@" IdentifierPath

  138 ListLiteral: "[" "]"
  139            | "[" Terms "]"
  140            | "[" error "]"

  141 RangeLiteral: "[" Term ".." Term "]"

  142 Types: Types "," Type
  143      | Type

  144 Type: BasicType
  145     | ComposedType
  146     | RelationType
  147     | FixedSizedType

  148 BasicType: IdentifierPath

  149 ComposedType: IdentifierPath "<" Types ">"

  150 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  151 FixedSizedType: IdentifierPath "'" Term

  152 Arguments: "(" Terms ")"
  153          | "(" error ")"
  154          | "(" ")"

  155 TwoOrMoreArguments: "(" Terms "," Term ")"

  156 FunctionParameters: FunctionParameters "*" Type
  157                   | Type

  158 MaybeFunctionParameters: FunctionParameters
  159                        | %empty

  160 Parameters: Parameters "," TypedAttributedVariable
  161           | TypedAttributedVariable

  162 MaybeParameters: "(" Parameters ")"
  163                | "(" error ")"
  164                | %empty

  165 MaybeDefined: "defined" "{" Term "}"
  166             | %empty

  167 MaybeInitially: "initially" "{" MaybeInitializers "}"
  168               | %empty

  169 Initializers: Initializers "," Initializer
  170             | Initializer

  171 Initializer: Term
  172            | Term "->" Term
  173            | TwoOrMoreArguments "->" Term

  174 MaybeInitializers: Initializers
  175                  | %empty

  176 Identifier: "identifier"
  177           | "in"

  178 IdentifierPath: DotSeparatedIdentifiers
  179               | "::" Identifier

  180 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier
  181                        | Identifier

  182 Variable: TypedVariable
  183         | Identifier

  184 TypedVariable: Identifier ":" Type

  185 AttributedVariable: "[" Attributes "]" Variable
  186                   | Variable

  187 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  188                        | TypedVariable

  189 Attributes: Attributes "," Attribute
  190           | Attribute

  191 Attribute: BasicAttribute
  192          | ExpressionAttribute

  193 BasicAttribute: Identifier

  194 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 24 45 58 59 62 63 82 140 153 163
"CASM" (258) 2 3
"init" (259) 20 21
"derived" (260) 15
"enumeration" (261) 14
"rule" (262) 16 17
"using" (263) 27
"function" (264) 18
"initially" (265) 167
"defined" (266) 165
"seq" (267) 61 63
"endseq" (268) 61 63
"par" (269) 57 59
"endpar" (270) 57 59
"skip" (271) 41
"let" (272) 51 113
"in" (273) 51 52 53 54 113 115 116 117 177
"forall" (274) 52 53 116
"choose" (275) 54 115
"iterate" (276) 55
"do" (277) 52 53 54 115
"call" (278) 65 67 69
"if" (279) 42 43 114
"then" (280) 42 43 114
"else" (281) 43 114
"case" (282) 44 45
"of" (283) 44 45
"default" (284) 46
"holds" (285) 116
"exists" (286) 117
"with" (287) 53 117
"as" (288) 112
"undef" (289) 128
"false" (290) 130
"true" (291) 129
"and" (292) 103
"or" (293) 101
"xor" (294) 102
"implies" (295) 105
"not" (296) 106
"+" (297) 87 89
"-" (298) 88 90
"=" (299) 14 15 16 17 27 51 96 113
"(" (300) 81 82 111 152 153 154 155 162 163
")" (301) 81 82 111 152 153 154 155 162 163
"[" (302) 2 6 23 138 139 140 141 185 187
"]" (303) 2 6 23 138 139 140 141 185 187
"{" (304) 14 21 44 45 56 58 165 167
"}" (305) 14 21 44 45 56 58 165 167
":" (306) 18 46 47 48 184
"::" (307) 179 180
"_" (308) 47
"@" (309) 137
"," (310) 25 71 142 155 160 169 189
"<" (311) 97 149 150
">" (312) 98 149 150
"*" (313) 91 111 156
"/" (314) 92
"%" (315) 93
"^" (316) 94
"'" (317) 151
".." (318) 141
"." (319) 109 110
"->" (320) 15 17 18 150 172 173
"=>" (321) 104
":=" (322) 64
"!=" (323) 95
"<=" (324) 99
">=" (325) 100
"{|" (326) 60 62
"|}" (327) 60 62
"binary" (328) 134
"hexadecimal" (329) 135
"integer" (330) 131
"rational" (331) 132
"decimal" (332) 133
"string" (333) 136
"identifier" (334) 176
ABSOLUTE_PATH (335)
UPLUS (336)
UMINUS (337)
CALL_WITHOUT_ARGS (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
Specification (85)
    on left: 1, on right: 0
Header (86)
    on left: 2 3, on right: 1
Definitions (87)
    on left: 4 5, on right: 1 4
AttributedDefinition (88)
    on left: 6 7 8, on right: 4 5
Definition (89)
    on left: 9 10 11 12 13, on right: 6 7
EnumerationDefinition (90)
    on left: 14, on right: 9
DerivedDefinition (91)
    on left: 15, on right: 10
RuleDefinition (92)
    on left: 16 17, on right: 11
FunctionDefinition (93)
    on left: 18 19, on right: 12
ProgramFunctionDefinition (94)
    on left: 20 21, on right: 19
EnumeratorDefinition (95)
    on left: 22 23 24, on right: 25 26
Enumerators (96)
    on left: 25 26, on right: 14 25
UsingDefinition (97)
    on left: 27, on right: 13
Rule (98)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 16 17 39 40
    42 43 46 47 48 51 52 53 54 55
Rules (99)
    on left: 39 40, on right: 39 56 57 60 61
SkipRule (100)
    on left: 41, on right: 28
ConditionalRule (101)
    on left: 42 43, on right: 29
CaseRule (102)
    on left: 44 45, on right: 30
CaseLabel (103)
    on left: 46 47 48, on right: 49 50
CaseLabels (104)
    on left: 49 50, on right: 44 49
LetRule (105)
    on left: 51, on right: 31
ForallRule (106)
    on left: 52 53, on right: 32
ChooseRule (107)
    on left: 54, on right: 33
IterateRule (108)
    on left: 55, on right: 34
BlockRule (109)
    on left: 56 57 58 59, on right: 35
SequenceRule (110)
    on left: 60 61 62 63, on right: 36
UpdateRule (111)
    on left: 64, on right: 37
CallRule (112)
    on left: 65 66 67 68 69 70, on right: 38
Terms (113)
    on left: 71 72, on right: 71 139 152 155
Term (114)
    on left: 73 74 75 76 77 78 79 80, on right: 15 42 43 44 45 48 51
    52 53 54 64 71 72 81 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 111 112 113 114 115 116 117 141 151 155
    165 171 172 173 194
SimpleOrClaspedTerm (115)
    on left: 81 82 83 84 85 86, on right: 73 109 110
OperatorExpression (116)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 106, on right: 75
DirectCallExpression (117)
    on left: 107 108, on right: 64 65 66 83
MethodCallExpression (118)
    on left: 109 110, on right: 67 68 84
IndirectCallExpression (119)
    on left: 111, on right: 69 70 85
TypeCastingExpression (120)
    on left: 112, on right: 74
LetExpression (121)
    on left: 113, on right: 76
ConditionalExpression (122)
    on left: 114, on right: 77
ChooseExpression (123)
    on left: 115, on right: 78
UniversalQuantifierExpression (124)
    on left: 116, on right: 79
ExistentialQuantifierExpression (125)
    on left: 117, on right: 80
Literal (126)
    on left: 118 119 120 121 122 123 124 125 126 127, on right: 86
UndefinedLiteral (127)
    on left: 128, on right: 118
BooleanLiteral (128)
    on left: 129 130, on right: 119
IntegerLiteral (129)
    on left: 131, on right: 120
RationalLiteral (130)
    on left: 132, on right: 121
DecimalLiteral (131)
    on left: 133, on right: 122
BinaryLiteral (132)
    on left: 134 135, on right: 123
StringLiteral (133)
    on left: 136, on right: 124
ReferenceLiteral (134)
    on left: 137, on right: 125
ListLiteral (135)
    on left: 138 139 140, on right: 126
RangeLiteral (136)
    on left: 141, on right: 127
Types (137)
    on left: 142 143, on right: 142 149
Type (138)
    on left: 144 145 146 147, on right: 15 17 18 27 112 142 143 150
    156 157 184
BasicType (139)
    on left: 148, on right: 144
ComposedType (140)
    on left: 149, on right: 145
RelationType (141)
    on left: 150, on right: 146
FixedSizedType (142)
    on left: 151, on right: 147
Arguments (143)
    on left: 152 153 154, on right: 108 110 111
TwoOrMoreArguments (144)
    on left: 155, on right: 173
FunctionParameters (145)
    on left: 156 157, on right: 156 158
MaybeFunctionParameters (146)
    on left: 158 159, on right: 18 150
Parameters (147)
    on left: 160 161, on right: 160 162
MaybeParameters (148)
    on left: 162 163 164, on right: 15 16 17
MaybeDefined (149)
    on left: 165 166, on right: 18
MaybeInitially (150)
    on left: 167 168, on right: 18
Initializers (151)
    on left: 169 170, on right: 169 174
Initializer (152)
    on left: 171 172 173, on right: 169 170
MaybeInitializers (153)
    on left: 174 175, on right: 21 167
Identifier (154)
    on left: 176 177, on right: 14 15 16 17 18 22 23 27 109 110 179
    180 181 183 184 193 194
IdentifierPath (155)
    on left: 178 179, on right: 20 107 108 137 148 149 150 151
DotSeparatedIdentifiers (156)
    on left: 180 181, on right: 178 180
Variable (157)
    on left: 182 183, on right: 185 186
TypedVariable (158)
    on left: 184, on right: 182 187 188
AttributedVariable (159)
    on left: 185 186, on right: 51 52 53 54 113 115 116 117
TypedAttributedVariable (160)
    on left: 187 188, on right: 160 161
Attributes (161)
    on left: 189 190, on right: 2 6 23 185 187 189
Attribute (162)
    on left: 191 192, on right: 189 190
BasicAttribute (163)
    on left: 193, on right: 191
ExpressionAttribute (164)
    on left: 194, on right: 192


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    Definitions                go to state 21
    AttributedDefinition       go to state 22
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 5

  177 Identifier: "in" .

    $default  reduce using rule 177 (Identifier)


State 6

  176 Identifier: "identifier" .

    $default  reduce using rule 176 (Identifier)


State 7

  193 BasicAttribute: Identifier .
  194 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 193 (BasicAttribute)

    Term                             go to state 51
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 8

    2 Header: "[" Attributes . "]" "CASM"
  189 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 77
    ","  shift, and go to state 78


State 9

  190 Attributes: Attribute .

    $default  reduce using rule 190 (Attributes)


State 10

  191 Attribute: BasicAttribute .

    $default  reduce using rule 191 (Attribute)


State 11

  192 Attribute: ExpressionAttribute .

    $default  reduce using rule 192 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 79
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 74
    IdentifierPath           go to state 80
    DotSeparatedIdentifiers  go to state 76


State 15

   15 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 81


State 16

   14 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 82


State 17

   16 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   17               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 83


State 18

   27 UsingDefinition: "using" . Identifier "=" Type

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 84


State 19

   18 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 85


State 20

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 86
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 21

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 87
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 22

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 23

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 24

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 25

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 26

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 27

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 28

   19 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 19 (FunctionDefinition)


State 29

   13 Definition: UsingDefinition .

    $default  reduce using rule 13 (Definition)


State 30

  113 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 92


State 31

  116 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 93


State 32

  115 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 94


State 33

  114 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 95
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 34

  117 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 96


State 35

  128 UndefinedLiteral: "undef" .

    $default  reduce using rule 128 (UndefinedLiteral)


State 36

  130 BooleanLiteral: "false" .

    $default  reduce using rule 130 (BooleanLiteral)


State 37

  129 BooleanLiteral: "true" .

    $default  reduce using rule 129 (BooleanLiteral)


State 38

  106 OperatorExpression: "not" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 97
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 39

   87 OperatorExpression: "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 98
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 40

   88 OperatorExpression: "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 99
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 41

   81 SimpleOrClaspedTerm: "(" . Term ")"
   82                    | "(" . error ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 100
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "*"            shift, and go to state 101
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 102
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 42

  138 ListLiteral: "[" . "]"
  139            | "[" . Terms "]"
  140            | "[" . error "]"
  141 RangeLiteral: "[" . Term ".." Term "]"

    error          shift, and go to state 103
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "]"            shift, and go to state 104
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 105
    Term                             go to state 106
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 43

  179 IdentifierPath: "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 107


State 44

  137 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 74
    IdentifierPath           go to state 108
    DotSeparatedIdentifiers  go to state 76


State 45

  134 BinaryLiteral: "binary" .

    $default  reduce using rule 134 (BinaryLiteral)


State 46

  135 BinaryLiteral: "hexadecimal" .

    $default  reduce using rule 135 (BinaryLiteral)


State 47

  131 IntegerLiteral: "integer" .

    $default  reduce using rule 131 (IntegerLiteral)


State 48

  132 RationalLiteral: "rational" .

    $default  reduce using rule 132 (RationalLiteral)


State 49

  133 DecimalLiteral: "decimal" .

    $default  reduce using rule 133 (DecimalLiteral)


State 50

  136 StringLiteral: "string" .

    $default  reduce using rule 136 (StringLiteral)


State 51

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  194 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 194 (ExpressionAttribute)


State 52

   73 Term: SimpleOrClaspedTerm .
  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 127

    $default  reduce using rule 73 (Term)


State 53

   75 Term: OperatorExpression .

    $default  reduce using rule 75 (Term)


State 54

   83 SimpleOrClaspedTerm: DirectCallExpression .

    $default  reduce using rule 83 (SimpleOrClaspedTerm)


State 55

   84 SimpleOrClaspedTerm: MethodCallExpression .

    $default  reduce using rule 84 (SimpleOrClaspedTerm)


State 56

   85 SimpleOrClaspedTerm: IndirectCallExpression .

    $default  reduce using rule 85 (SimpleOrClaspedTerm)


State 57

   74 Term: TypeCastingExpression .

    $default  reduce using rule 74 (Term)


State 58

   76 Term: LetExpression .

    $default  reduce using rule 76 (Term)


State 59

   77 Term: ConditionalExpression .

    $default  reduce using rule 77 (Term)


State 60

   78 Term: ChooseExpression .

    $default  reduce using rule 78 (Term)


State 61

   79 Term: UniversalQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 62

   80 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 80 (Term)


State 63

   86 SimpleOrClaspedTerm: Literal .

    $default  reduce using rule 86 (SimpleOrClaspedTerm)


State 64

  118 Literal: UndefinedLiteral .

    $default  reduce using rule 118 (Literal)


State 65

  119 Literal: BooleanLiteral .

    $default  reduce using rule 119 (Literal)


State 66

  120 Literal: IntegerLiteral .

    $default  reduce using rule 120 (Literal)


State 67

  121 Literal: RationalLiteral .

    $default  reduce using rule 121 (Literal)


State 68

  122 Literal: DecimalLiteral .

    $default  reduce using rule 122 (Literal)


State 69

  123 Literal: BinaryLiteral .

    $default  reduce using rule 123 (Literal)


State 70

  124 Literal: StringLiteral .

    $default  reduce using rule 124 (Literal)


State 71

  125 Literal: ReferenceLiteral .

    $default  reduce using rule 125 (Literal)


State 72

  126 Literal: ListLiteral .

    $default  reduce using rule 126 (Literal)


State 73

  127 Literal: RangeLiteral .

    $default  reduce using rule 127 (Literal)


State 74

  181 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 181 (DotSeparatedIdentifiers)


State 75

  107 DirectCallExpression: IdentifierPath .
  108                     | IdentifierPath . Arguments

    "("  shift, and go to state 128

    $default  reduce using rule 107 (DirectCallExpression)

    Arguments  go to state 129


State 76

  178 IdentifierPath: DotSeparatedIdentifiers .
  180 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "::" Identifier

    "::"  shift, and go to state 130

    $default  reduce using rule 178 (IdentifierPath)


State 77

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 131


State 78

  189 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 132
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 79

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 133
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 175 (MaybeInitializers)

    Term                             go to state 134
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TwoOrMoreArguments               go to state 135
    Initializers                     go to state 136
    Initializer                      go to state 137
    MaybeInitializers                go to state 138
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 80

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 81

   15 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 139

    $default  reduce using rule 164 (MaybeParameters)

    MaybeParameters  go to state 140


State 82

   14 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 141


State 83

   16 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   17               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 139

    $default  reduce using rule 164 (MaybeParameters)

    MaybeParameters  go to state 142


State 84

   27 UsingDefinition: "using" Identifier . "=" Type

    "="  shift, and go to state 143


State 85

   18 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 144


State 86

    6 AttributedDefinition: "[" Attributes . "]" Definition
  189 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 145
    ","  shift, and go to state 78


State 87

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 88

  185 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 146
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 89

  183 Variable: Identifier .
  184 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 147

    $default  reduce using rule 183 (Variable)


State 90

  186 AttributedVariable: Variable .

    $default  reduce using rule 186 (AttributedVariable)


State 91

  182 Variable: TypedVariable .

    $default  reduce using rule 182 (Variable)


State 92

  113 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 148


State 93

  116 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 149


State 94

  115 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 150


State 95

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 151
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 96

  117 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 152


State 97

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  106                   | "not" Term .
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 106 (OperatorExpression)


State 98

   87 OperatorExpression: "+" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 87 (OperatorExpression)


State 99

   88 OperatorExpression: "-" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 88 (OperatorExpression)


State 100

   82 SimpleOrClaspedTerm: "(" error . ")"

    ")"  shift, and go to state 153


State 101

  111 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 154
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 102

   81 SimpleOrClaspedTerm: "(" Term . ")"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    ")"        shift, and go to state 155
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 103

  140 ListLiteral: "[" error . "]"

    "]"  shift, and go to state 156


State 104

  138 ListLiteral: "[" "]" .

    $default  reduce using rule 138 (ListLiteral)


State 105

   71 Terms: Terms . "," Term
  139 ListLiteral: "[" Terms . "]"

    "]"  shift, and go to state 157
    ","  shift, and go to state 158


State 106

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  141 RangeLiteral: "[" Term . ".." Term "]"

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    ".."       shift, and go to state 159
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 72 (Terms)


State 107

  179 IdentifierPath: "::" Identifier .

    $default  reduce using rule 179 (IdentifierPath)


State 108

  137 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 137 (ReferenceLiteral)


State 109

  112 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 160
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 110

  103 OperatorExpression: Term "and" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 166
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 111

  101 OperatorExpression: Term "or" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 167
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 112

  102 OperatorExpression: Term "xor" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 168
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 113

  105 OperatorExpression: Term "implies" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 169
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 114

   89 OperatorExpression: Term "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 170
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 115

   90 OperatorExpression: Term "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 171
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 116

   96 OperatorExpression: Term "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 172
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 117

   97 OperatorExpression: Term "<" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 173
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 118

   98 OperatorExpression: Term ">" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 174
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 119

   91 OperatorExpression: Term "*" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 175
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 120

   92 OperatorExpression: Term "/" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 176
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 121

   93 OperatorExpression: Term "%" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 177
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 122

   94 OperatorExpression: Term "^" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 178
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 123

  104 OperatorExpression: Term "=>" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 179
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 124

   95 OperatorExpression: Term "!=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 180
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 125

   99 OperatorExpression: Term "<=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 181
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 126

  100 OperatorExpression: Term ">=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 182
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 127

  109 MethodCallExpression: SimpleOrClaspedTerm "." . Identifier
  110                     | SimpleOrClaspedTerm "." . Identifier Arguments

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 183


State 128

  152 Arguments: "(" . Terms ")"
  153          | "(" . error ")"
  154          | "(" . ")"

    error          shift, and go to state 184
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    ")"            shift, and go to state 185
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 186
    Term                             go to state 187
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 129

  108 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 108 (DirectCallExpression)


State 130

  180 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 188


State 131

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 132

  189 Attributes: Attributes "," Attribute .

    $default  reduce using rule 189 (Attributes)


State 133

   81 SimpleOrClaspedTerm: "(" . Term ")"
   82                    | "(" . error ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments
  155 TwoOrMoreArguments: "(" . Terms "," Term ")"

    error          shift, and go to state 100
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "*"            shift, and go to state 101
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 189
    Term                             go to state 190
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 134

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  171 Initializer: Term .
  172            | Term . "->" Term

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "->"       shift, and go to state 191
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 171 (Initializer)


State 135

  173 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 192


State 136

  169 Initializers: Initializers . "," Initializer
  174 MaybeInitializers: Initializers .

    ","  shift, and go to state 193

    $default  reduce using rule 174 (MaybeInitializers)


State 137

  170 Initializers: Initializer .

    $default  reduce using rule 170 (Initializers)


State 138

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 194


State 139

  162 MaybeParameters: "(" . Parameters ")"
  163                | "(" . error ")"

    error         shift, and go to state 195
    "in"          shift, and go to state 5
    "["           shift, and go to state 196
    "identifier"  shift, and go to state 6

    Parameters               go to state 197
    Identifier               go to state 198
    TypedVariable            go to state 199
    TypedAttributedVariable  go to state 200


State 140

   15 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 201


State 141

   14 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 202


State 142

   16 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   17               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 203
    "->"  shift, and go to state 204


State 143

   27 UsingDefinition: "using" Identifier "=" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 205
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 144

   18 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 159 (MaybeFunctionParameters)

    Type                     go to state 206
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    FunctionParameters       go to state 207
    MaybeFunctionParameters  go to state 208
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 145

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19

    Definition                 go to state 209
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 146

  185 AttributedVariable: "[" Attributes . "]" Variable
  189 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 210
    ","  shift, and go to state 78


State 147

  184 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 211
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 148

  113 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 212
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 149

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 213
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 150

  115 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 214
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 151

  114 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 215
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 152

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 216
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 153

   82 SimpleOrClaspedTerm: "(" error ")" .

    $default  reduce using rule 82 (SimpleOrClaspedTerm)


State 154

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  111 IndirectCallExpression: "(" "*" Term . ")" Arguments
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    ")"        shift, and go to state 217
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 155

   81 SimpleOrClaspedTerm: "(" Term ")" .

    $default  reduce using rule 81 (SimpleOrClaspedTerm)


State 156

  140 ListLiteral: "[" error "]" .

    $default  reduce using rule 140 (ListLiteral)


State 157

  139 ListLiteral: "[" Terms "]" .

    $default  reduce using rule 139 (ListLiteral)


State 158

   71 Terms: Terms "," . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 218
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 159

  141 RangeLiteral: "[" Term ".." . Term "]"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 219
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 160

  112 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 112 (TypeCastingExpression)


State 161

  144 Type: BasicType .

    $default  reduce using rule 144 (Type)


State 162

  145 Type: ComposedType .

    $default  reduce using rule 145 (Type)


State 163

  146 Type: RelationType .

    $default  reduce using rule 146 (Type)


State 164

  147 Type: FixedSizedType .

    $default  reduce using rule 147 (Type)


State 165

  148 BasicType: IdentifierPath .
  149 ComposedType: IdentifierPath . "<" Types ">"
  150 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  151 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 220
    "'"  shift, and go to state 221

    $default  reduce using rule 148 (BasicType)


State 166

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  103                   | Term "and" Term .
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 114
    "-"   shift, and go to state 115
    "="   shift, and go to state 116
    "<"   shift, and go to state 117
    ">"   shift, and go to state 118
    "*"   shift, and go to state 119
    "/"   shift, and go to state 120
    "%"   shift, and go to state 121
    "^"   shift, and go to state 122
    "!="  shift, and go to state 124
    "<="  shift, and go to state 125
    ">="  shift, and go to state 126

    $default  reduce using rule 103 (OperatorExpression)


State 167

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  101                   | Term "or" Term .
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 110
    "xor"  shift, and go to state 112
    "+"    shift, and go to state 114
    "-"    shift, and go to state 115
    "="    shift, and go to state 116
    "<"    shift, and go to state 117
    ">"    shift, and go to state 118
    "*"    shift, and go to state 119
    "/"    shift, and go to state 120
    "%"    shift, and go to state 121
    "^"    shift, and go to state 122
    "!="   shift, and go to state 124
    "<="   shift, and go to state 125
    ">="   shift, and go to state 126

    $default  reduce using rule 101 (OperatorExpression)


State 168

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  102                   | Term "xor" Term .
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 110
    "+"    shift, and go to state 114
    "-"    shift, and go to state 115
    "="    shift, and go to state 116
    "<"    shift, and go to state 117
    ">"    shift, and go to state 118
    "*"    shift, and go to state 119
    "/"    shift, and go to state 120
    "%"    shift, and go to state 121
    "^"    shift, and go to state 122
    "!="   shift, and go to state 124
    "<="   shift, and go to state 125
    ">="   shift, and go to state 126

    $default  reduce using rule 102 (OperatorExpression)


State 169

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  105                   | Term "implies" Term .
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 110
    "or"   shift, and go to state 111
    "xor"  shift, and go to state 112
    "+"    shift, and go to state 114
    "-"    shift, and go to state 115
    "="    shift, and go to state 116
    "<"    shift, and go to state 117
    ">"    shift, and go to state 118
    "*"    shift, and go to state 119
    "/"    shift, and go to state 120
    "%"    shift, and go to state 121
    "^"    shift, and go to state 122
    "!="   shift, and go to state 124
    "<="   shift, and go to state 125
    ">="   shift, and go to state 126

    $default  reduce using rule 105 (OperatorExpression)


State 170

   89 OperatorExpression: Term . "+" Term
   89                   | Term "+" Term .
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 89 (OperatorExpression)


State 171

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   90                   | Term "-" Term .
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 90 (OperatorExpression)


State 172

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   96                   | Term "=" Term .
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 114
    "-"   shift, and go to state 115
    "<"   shift, and go to state 117
    ">"   shift, and go to state 118
    "*"   shift, and go to state 119
    "/"   shift, and go to state 120
    "%"   shift, and go to state 121
    "^"   shift, and go to state 122
    "<="  shift, and go to state 125
    ">="  shift, and go to state 126

    $default  reduce using rule 96 (OperatorExpression)


State 173

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   97                   | Term "<" Term .
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 114
    "-"  shift, and go to state 115
    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 97 (OperatorExpression)


State 174

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   98                   | Term ">" Term .
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 114
    "-"  shift, and go to state 115
    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 98 (OperatorExpression)


State 175

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   91                   | Term "*" Term .
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 122

    $default  reduce using rule 91 (OperatorExpression)


State 176

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   92                   | Term "/" Term .
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 122

    $default  reduce using rule 92 (OperatorExpression)


State 177

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   93                   | Term "%" Term .
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 122

    $default  reduce using rule 93 (OperatorExpression)


State 178

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   94                   | Term "^" Term .
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 94 (OperatorExpression)


State 179

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  104                   | Term "=>" Term .
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 110
    "or"   shift, and go to state 111
    "xor"  shift, and go to state 112
    "+"    shift, and go to state 114
    "-"    shift, and go to state 115
    "="    shift, and go to state 116
    "<"    shift, and go to state 117
    ">"    shift, and go to state 118
    "*"    shift, and go to state 119
    "/"    shift, and go to state 120
    "%"    shift, and go to state 121
    "^"    shift, and go to state 122
    "!="   shift, and go to state 124
    "<="   shift, and go to state 125
    ">="   shift, and go to state 126

    $default  reduce using rule 104 (OperatorExpression)


State 180

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   95                   | Term "!=" Term .
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 114
    "-"   shift, and go to state 115
    "<"   shift, and go to state 117
    ">"   shift, and go to state 118
    "*"   shift, and go to state 119
    "/"   shift, and go to state 120
    "%"   shift, and go to state 121
    "^"   shift, and go to state 122
    "<="  shift, and go to state 125
    ">="  shift, and go to state 126

    $default  reduce using rule 95 (OperatorExpression)


State 181

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
   99                   | Term "<=" Term .
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 114
    "-"  shift, and go to state 115
    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 99 (OperatorExpression)


State 182

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  100                   | Term ">=" Term .
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 114
    "-"  shift, and go to state 115
    "*"  shift, and go to state 119
    "/"  shift, and go to state 120
    "%"  shift, and go to state 121
    "^"  shift, and go to state 122

    $default  reduce using rule 100 (OperatorExpression)


State 183

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier .
  110                     | SimpleOrClaspedTerm "." Identifier . Arguments

    "("  shift, and go to state 128

    $default  reduce using rule 109 (MethodCallExpression)

    Arguments  go to state 222


State 184

  153 Arguments: "(" error . ")"

    ")"  shift, and go to state 223


State 185

  154 Arguments: "(" ")" .

    $default  reduce using rule 154 (Arguments)


State 186

   71 Terms: Terms . "," Term
  152 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 224
    ","  shift, and go to state 158


State 187

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 72 (Terms)


State 188

  180 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier .

    $default  reduce using rule 180 (DotSeparatedIdentifiers)


State 189

   71 Terms: Terms . "," Term
  155 TwoOrMoreArguments: "(" Terms . "," Term ")"

    ","  shift, and go to state 225


State 190

   72 Terms: Term .
   81 SimpleOrClaspedTerm: "(" Term . ")"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    ")"        shift, and go to state 155
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 72 (Terms)


State 191

  172 Initializer: Term "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 226
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 192

  173 Initializer: TwoOrMoreArguments "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 227
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 193

  169 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 133
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 134
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TwoOrMoreArguments               go to state 135
    Initializer                      go to state 228
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 194

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 195

  163 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 229


State 196

  187 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 230
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 197

  160 Parameters: Parameters . "," TypedAttributedVariable
  162 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 231
    ","  shift, and go to state 232


State 198

  184 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 147


State 199

  188 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 188 (TypedAttributedVariable)


State 200

  161 Parameters: TypedAttributedVariable .

    $default  reduce using rule 161 (Parameters)


State 201

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 233
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 202

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 234
    "in"          shift, and go to state 5
    "["           shift, and go to state 235
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 236
    Enumerators           go to state 237
    Identifier            go to state 238


State 203

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 251
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 204

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 267
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 205

   27 UsingDefinition: "using" Identifier "=" Type .

    $default  reduce using rule 27 (UsingDefinition)


State 206

  157 FunctionParameters: Type .

    $default  reduce using rule 157 (FunctionParameters)


State 207

  156 FunctionParameters: FunctionParameters . "*" Type
  158 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 268

    $default  reduce using rule 158 (MaybeFunctionParameters)


State 208

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 269


State 209

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 210

  185 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 89
    Variable       go to state 270
    TypedVariable  go to state 91


State 211

  184 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 184 (TypedVariable)


State 212

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 271
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 213

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 272
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 214

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 273
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 215

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 274
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 216

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 275
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 217

  111 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 128

    Arguments  go to state 276


State 218

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 71 (Terms)


State 219

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  141 RangeLiteral: "[" Term ".." Term . "]"

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "]"        shift, and go to state 277
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 220

  149 ComposedType: IdentifierPath "<" . Types ">"
  150 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 159 (MaybeFunctionParameters)

    Types                    go to state 278
    Type                     go to state 279
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    FunctionParameters       go to state 207
    MaybeFunctionParameters  go to state 280
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 221

  151 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 281
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 222

  110 MethodCallExpression: SimpleOrClaspedTerm "." Identifier Arguments .

    $default  reduce using rule 110 (MethodCallExpression)


State 223

  153 Arguments: "(" error ")" .

    $default  reduce using rule 153 (Arguments)


State 224

  152 Arguments: "(" Terms ")" .

    $default  reduce using rule 152 (Arguments)


State 225

   71 Terms: Terms "," . Term
  155 TwoOrMoreArguments: "(" Terms "," . Term ")"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 282
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 226

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  172 Initializer: Term "->" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 172 (Initializer)


State 227

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  173 Initializer: TwoOrMoreArguments "->" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 173 (Initializer)


State 228

  169 Initializers: Initializers "," Initializer .

    $default  reduce using rule 169 (Initializers)


State 229

  163 MaybeParameters: "(" error ")" .

    $default  reduce using rule 163 (MaybeParameters)


State 230

  187 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  189 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 283
    ","  shift, and go to state 78


State 231

  162 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 162 (MaybeParameters)


State 232

  160 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 196
    "identifier"  shift, and go to state 6

    Identifier               go to state 198
    TypedVariable            go to state 199
    TypedAttributedVariable  go to state 284


State 233

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 285


State 234

   24 EnumeratorDefinition: error .

    $default  reduce using rule 24 (EnumeratorDefinition)


State 235

   23 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 286
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 236

   26 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 26 (Enumerators)


State 237

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   25 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 287
    ","  shift, and go to state 288


State 238

   22 EnumeratorDefinition: Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 239

   61 SequenceRule: "seq" . Rules "endseq"
   63             | "seq" . error "endseq"

    error          shift, and go to state 289
    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 290
    Rules                    go to state 291
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 240

   57 BlockRule: "par" . Rules "endpar"
   59          | "par" . error "endpar"

    error          shift, and go to state 292
    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 290
    Rules                    go to state 293
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 241

   41 SkipRule: "skip" .

    $default  reduce using rule 41 (SkipRule)


State 242

   51 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 294


State 243

   52 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   53           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 295


State 244

   54 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 88
    "identifier"  shift, and go to state 6

    Identifier          go to state 89
    Variable            go to state 90
    TypedVariable       go to state 91
    AttributedVariable  go to state 296


State 245

   55 IterateRule: "iterate" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 297
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 246

   65 CallRule: "call" . DirectCallExpression
   67         | "call" . MethodCallExpression
   69         | "call" . IndirectCallExpression

    "in"           shift, and go to state 5
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 298
    MethodCallExpression     go to state 299
    IndirectCallExpression   go to state 300
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 247

   42 ConditionalRule: "if" . Term "then" Rule
   43                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 301
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 248

   44 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   45         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 302
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 249

   56 BlockRule: "{" . Rules "}"
   58          | "{" . error "}"

    error          shift, and go to state 303
    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 290
    Rules                    go to state 304
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 250

   60 SequenceRule: "{|" . Rules "|}"
   62             | "{|" . error "|}"

    error          shift, and go to state 305
    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 290
    Rules                    go to state 306
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 251

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 252

   28 Rule: SkipRule .

    $default  reduce using rule 28 (Rule)


State 253

   29 Rule: ConditionalRule .

    $default  reduce using rule 29 (Rule)


State 254

   30 Rule: CaseRule .

    $default  reduce using rule 30 (Rule)


State 255

   31 Rule: LetRule .

    $default  reduce using rule 31 (Rule)


State 256

   32 Rule: ForallRule .

    $default  reduce using rule 32 (Rule)


State 257

   33 Rule: ChooseRule .

    $default  reduce using rule 33 (Rule)


State 258

   34 Rule: IterateRule .

    $default  reduce using rule 34 (Rule)


State 259

   35 Rule: BlockRule .

    $default  reduce using rule 35 (Rule)


State 260

   36 Rule: SequenceRule .

    $default  reduce using rule 36 (Rule)


State 261

   37 Rule: UpdateRule .

    $default  reduce using rule 37 (Rule)


State 262

   38 Rule: CallRule .

    $default  reduce using rule 38 (Rule)


State 263

  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 127


State 264

   64 UpdateRule: DirectCallExpression . ":=" Term
   66 CallRule: DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    ":="  shift, and go to state 307

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 66 (CallRule)


State 265

   68 CallRule: MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 68 (CallRule)


State 266

   70 CallRule: IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 70 (CallRule)


State 267

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 308


State 268

  156 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 309
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 269

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 310
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 270

  185 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 185 (AttributedVariable)


State 271

  113 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 311
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 272

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 312
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 273

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 313
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 274

  114 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 314
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 275

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 315
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 276

  111 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 111 (IndirectCallExpression)


State 277

  141 RangeLiteral: "[" Term ".." Term "]" .

    $default  reduce using rule 141 (RangeLiteral)


State 278

  142 Types: Types . "," Type
  149 ComposedType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 316
    ">"  shift, and go to state 317


State 279

  143 Types: Type .
  157 FunctionParameters: Type .

    "*"       reduce using rule 157 (FunctionParameters)
    "->"      reduce using rule 157 (FunctionParameters)
    $default  reduce using rule 143 (Types)


State 280

  150 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 318


State 281

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  151 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 151 (FixedSizedType)


State 282

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  155 TwoOrMoreArguments: "(" Terms "," Term . ")"

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    ")"        shift, and go to state 319
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 71 (Terms)


State 283

  187 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 198
    TypedVariable  go to state 320


State 284

  160 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 160 (Parameters)


State 285

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 321
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 286

   23 EnumeratorDefinition: "[" Attributes . "]" Identifier
  189 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 322
    ","  shift, and go to state 78


State 287

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 14 (EnumerationDefinition)


State 288

   25 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 234
    "in"          shift, and go to state 5
    "["           shift, and go to state 235
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 323
    Identifier            go to state 238


State 289

   63 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 324


State 290

   40 Rules: Rule .

    $default  reduce using rule 40 (Rules)


State 291

   39 Rules: Rules . Rule
   61 SequenceRule: "seq" Rules . "endseq"

    "seq"          shift, and go to state 239
    "endseq"       shift, and go to state 325
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 326
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 292

   59 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 327


State 293

   39 Rules: Rules . Rule
   57 BlockRule: "par" Rules . "endpar"

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "endpar"       shift, and go to state 328
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 326
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 294

   51 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 329


State 295

   52 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   53           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 330


State 296

   54 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 331


State 297

   55 IterateRule: "iterate" Rule .

    $default  reduce using rule 55 (IterateRule)


State 298

   65 CallRule: "call" DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 65 (CallRule)


State 299

   67 CallRule: "call" MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 67 (CallRule)


State 300

   69 CallRule: "call" IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 69 (CallRule)


State 301

   42 ConditionalRule: "if" Term . "then" Rule
   43                | "if" Term . "then" Rule "else" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 332
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 302

   44 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   45         | "case" Term . "of" "{" error "}"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 333
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 303

   58 BlockRule: "{" error . "}"

    "}"  shift, and go to state 334


State 304

   39 Rules: Rules . Rule
   56 BlockRule: "{" Rules . "}"

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "}"            shift, and go to state 335
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 326
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 305

   62 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 336


State 306

   39 Rules: Rules . Rule
   60 SequenceRule: "{|" Rules . "|}"

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "|}"           shift, and go to state 337
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 326
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 307

   64 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 338
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 308

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 339
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 309

  156 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 156 (FunctionParameters)


State 310

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 340

    $default  reduce using rule 166 (MaybeDefined)

    MaybeDefined  go to state 341


State 311

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 113 (LetExpression)


State 312

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 116 (UniversalQuantifierExpression)


State 313

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 115 (ChooseExpression)


State 314

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 114 (ConditionalExpression)


State 315

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 117 (ExistentialQuantifierExpression)


State 316

  142 Types: Types "," . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 342
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 317

  149 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 149 (ComposedType)


State 318

  150 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 343
    BasicType                go to state 161
    ComposedType             go to state 162
    RelationType             go to state 163
    FixedSizedType           go to state 164
    Identifier               go to state 74
    IdentifierPath           go to state 165
    DotSeparatedIdentifiers  go to state 76


State 319

  155 TwoOrMoreArguments: "(" Terms "," Term ")" .

    $default  reduce using rule 155 (TwoOrMoreArguments)


State 320

  187 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 187 (TypedAttributedVariable)


State 321

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 15 (DerivedDefinition)


State 322

   23 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 344


State 323

   25 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 324

   63 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 63 (SequenceRule)


State 325

   61 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 326

   39 Rules: Rules Rule .

    $default  reduce using rule 39 (Rules)


State 327

   59 BlockRule: "par" error "endpar" .

    $default  reduce using rule 59 (BlockRule)


State 328

   57 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 329

   51 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 345
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 330

   52 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   53           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 346
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 331

   54 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 347
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 332

   42 ConditionalRule: "if" Term "then" . Rule
   43                | "if" Term "then" . Rule "else" Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 333

   44 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   45         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 349


State 334

   58 BlockRule: "{" error "}" .

    $default  reduce using rule 58 (BlockRule)


State 335

   56 BlockRule: "{" Rules "}" .

    $default  reduce using rule 56 (BlockRule)


State 336

   62 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 62 (SequenceRule)


State 337

   60 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 338

   64 UpdateRule: DirectCallExpression ":=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126

    $default  reduce using rule 64 (UpdateRule)


State 339

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 17 (RuleDefinition)


State 340

  165 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 350


State 341

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 351

    $default  reduce using rule 168 (MaybeInitially)

    MaybeInitially  go to state 352


State 342

  142 Types: Types "," Type .

    $default  reduce using rule 142 (Types)


State 343

  150 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 353


State 344

   23 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 345

   51 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 354
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 346

   52 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   53           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 355
    "with"     shift, and go to state 356
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 347

   54 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 357
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 348

   42 ConditionalRule: "if" Term "then" Rule .
   43                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 358

    $default  reduce using rule 42 (ConditionalRule)


State 349

   44 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   45         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 359
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 360
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "_"            shift, and go to state 361
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 362
    CaseLabels                       go to state 363
    Term                             go to state 364
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 350

  165 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 365
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 351

  167 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 366


State 352

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 18 (FunctionDefinition)


State 353

  150 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 150 (RelationType)


State 354

   51 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 367
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 355

   52 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 368
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 356

   53 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 369
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 357

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 370
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 358

   43 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 371
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 359

   45 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 372


State 360

   46 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 373


State 361

   47 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 374


State 362

   50 CaseLabels: CaseLabel .

    $default  reduce using rule 50 (CaseLabels)


State 363

   44 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   49 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 360
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "}"            shift, and go to state 375
    "::"           shift, and go to state 43
    "_"            shift, and go to state 361
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 376
    Term                             go to state 364
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 364

   48 CaseLabel: Term . ":" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    ":"        shift, and go to state 377
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 365

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  165 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "}"        shift, and go to state 378
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 366

  167 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 133
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 175 (MaybeInitializers)

    Term                             go to state 134
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TwoOrMoreArguments               go to state 135
    Initializers                     go to state 136
    Initializer                      go to state 137
    MaybeInitializers                go to state 379
    Identifier                       go to state 74
    IdentifierPath                   go to state 75
    DotSeparatedIdentifiers          go to state 76


State 367

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 51 (LetRule)


State 368

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ForallRule)


State 369

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 380
    "as"       shift, and go to state 109
    "and"      shift, and go to state 110
    "or"       shift, and go to state 111
    "xor"      shift, and go to state 112
    "implies"  shift, and go to state 113
    "+"        shift, and go to state 114
    "-"        shift, and go to state 115
    "="        shift, and go to state 116
    "<"        shift, and go to state 117
    ">"        shift, and go to state 118
    "*"        shift, and go to state 119
    "/"        shift, and go to state 120
    "%"        shift, and go to state 121
    "^"        shift, and go to state 122
    "=>"       shift, and go to state 123
    "!="       shift, and go to state 124
    "<="       shift, and go to state 125
    ">="       shift, and go to state 126


State 370

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 54 (ChooseRule)


State 371

   43 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 43 (ConditionalRule)


State 372

   45 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 45 (CaseRule)


State 373

   46 CaseLabel: "default" ":" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 381
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 374

   47 CaseLabel: "_" ":" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 382
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 375

   44 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 44 (CaseRule)


State 376

   49 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 49 (CaseLabels)


State 377

   48 CaseLabel: Term ":" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 383
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 378

  165 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 165 (MaybeDefined)


State 379

  167 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 384


State 380

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"          shift, and go to state 239
    "par"          shift, and go to state 240
    "skip"         shift, and go to state 241
    "let"          shift, and go to state 242
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 243
    "choose"       shift, and go to state 244
    "iterate"      shift, and go to state 245
    "call"         shift, and go to state 246
    "if"           shift, and go to state 247
    "case"         shift, and go to state 248
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 249
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 250
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 385
    SkipRule                 go to state 252
    ConditionalRule          go to state 253
    CaseRule                 go to state 254
    LetRule                  go to state 255
    ForallRule               go to state 256
    ChooseRule               go to state 257
    IterateRule              go to state 258
    BlockRule                go to state 259
    SequenceRule             go to state 260
    UpdateRule               go to state 261
    CallRule                 go to state 262
    SimpleOrClaspedTerm      go to state 263
    DirectCallExpression     go to state 264
    MethodCallExpression     go to state 265
    IndirectCallExpression   go to state 266
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    Identifier               go to state 74
    IdentifierPath           go to state 75
    DotSeparatedIdentifiers  go to state 76


State 381

   46 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 382

   47 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 47 (CaseLabel)


State 383

   48 CaseLabel: Term ":" Rule .

    $default  reduce using rule 48 (CaseLabel)


State 384

  167 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 167 (MaybeInitially)


State 385

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 53 (ForallRule)
