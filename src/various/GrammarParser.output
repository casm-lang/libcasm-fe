State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition
   13           | UsingDefinition

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   17               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   19                   | ProgramFunctionDefinition

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 EnumeratorDefinition: Identifier
   23                     | "[" Attributes "]" Identifier
   24                     | error

   25 Enumerators: Enumerators "," EnumeratorDefinition
   26            | EnumeratorDefinition

   27 UsingDefinition: "using" Identifier "=" Type

   28 Rule: SkipRule
   29     | ConditionalRule
   30     | CaseRule
   31     | LetRule
   32     | ForallRule
   33     | ChooseRule
   34     | IterateRule
   35     | BlockRule
   36     | SequenceRule
   37     | UpdateRule
   38     | CallRule

   39 Rules: Rules Rule
   40      | Rule

   41 SkipRule: "skip"

   42 ConditionalRule: "if" Term "then" Rule
   43                | "if" Term "then" Rule "else" Rule

   44 CaseRule: "case" Term "of" "{" CaseLabels "}"
   45         | "case" Term "of" "{" error "}"

   46 CaseLabel: "default" ":" Rule
   47          | "_" ":" Rule
   48          | Term ":" Rule

   49 CaseLabels: CaseLabels CaseLabel
   50           | CaseLabel

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   53           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   55 IterateRule: "iterate" Rule

   56 BlockRule: "{" Rules "}"
   57          | "par" Rules "endpar"
   58          | "{" error "}"
   59          | "par" error "endpar"

   60 SequenceRule: "{|" Rules "|}"
   61             | "seq" Rules "endseq"
   62             | "{|" error "|}"
   63             | "seq" error "endseq"

   64 UpdateRule: DirectCallExpression ":=" Term

   65 CallRule: "call" DirectCallExpression
   66         | DirectCallExpression
   67         | "call" MethodCallExpression
   68         | MethodCallExpression
   69         | "call" IndirectCallExpression
   70         | IndirectCallExpression

   71 Terms: Terms "," Term
   72      | Term

   73 Term: SimpleOrClaspedTerm
   74     | TypeCastingExpression
   75     | OperatorExpression
   76     | LetExpression
   77     | ConditionalExpression
   78     | ChooseExpression
   79     | UniversalQuantifierExpression
   80     | ExistentialQuantifierExpression

   81 SimpleOrClaspedTerm: "(" Term ")"
   82                    | "(" error ")"
   83                    | DirectCallExpression
   84                    | MethodCallExpression
   85                    | IndirectCallExpression
   86                    | Literal

   87 OperatorExpression: "+" Term
   88                   | "-" Term
   89                   | Term "+" Term
   90                   | Term "-" Term
   91                   | Term "*" Term
   92                   | Term "/" Term
   93                   | Term "%" Term
   94                   | Term "^" Term
   95                   | Term "!=" Term
   96                   | Term "=" Term
   97                   | Term "<" Term
   98                   | Term ">" Term
   99                   | Term "<=" Term
  100                   | Term ">=" Term
  101                   | Term "or" Term
  102                   | Term "xor" Term
  103                   | Term "and" Term
  104                   | Term "=>" Term
  105                   | Term "implies" Term
  106                   | "not" Term

  107 DirectCallExpression: IdentifierPath
  108                     | IdentifierPath Arguments

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier
  110                     | SimpleOrClaspedTerm "." Identifier Arguments

  111 IndirectCallExpression: "(" "*" Term ")" Arguments

  112 TypeCastingExpression: Term "as" Type

  113 LetExpression: "let" AttributedVariable "=" Term "in" Term

  114 ConditionalExpression: "if" Term "then" Term "else" Term

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  118 Literal: UndefinedLiteral
  119        | BooleanLiteral
  120        | IntegerLiteral
  121        | RationalLiteral
  122        | DecimalLiteral
  123        | BinaryLiteral
  124        | StringLiteral
  125        | ReferenceLiteral
  126        | ListLiteral
  127        | RangeLiteral
  128        | TupleLiteral
  129        | NamedTupleLiteral

  130 UndefinedLiteral: "undef"

  131 BooleanLiteral: "true"
  132               | "false"

  133 IntegerLiteral: "integer"

  134 RationalLiteral: "rational"

  135 DecimalLiteral: "decimal"

  136 BinaryLiteral: "binary"
  137              | "hexadecimal"

  138 StringLiteral: "string"

  139 ReferenceLiteral: "@" IdentifierPath

  140 ListLiteral: "[" "]"
  141            | "[" Terms "]"
  142            | "[" error "]"

  143 RangeLiteral: "[" Term ".." Term "]"

  144 TupleLiteral: "(" Terms "," Term ")"

  145 NamedTupleLiteral: "(" Assignments ")"

  146 Assignments: Assignments "," Assignment
  147            | Assignment

  148 Assignment: Identifier ":" Term

  149 Types: Types "," Type
  150      | Type

  151 Type: BasicType
  152     | ComposedType
  153     | TemplateType
  154     | RelationType
  155     | FixedSizedType

  156 BasicType: IdentifierPath

  157 ComposedType: "(" Types "," Type ")"
  158             | "(" TypedVariables "," TypedVariable ")"

  159 TemplateType: IdentifierPath "<" Types ">"

  160 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  161 FixedSizedType: IdentifierPath "'" Term

  162 Arguments: "(" Terms ")"
  163          | "(" error ")"
  164          | "(" ")"

  165 FunctionParameters: FunctionParameters "*" Type
  166                   | Type

  167 MaybeFunctionParameters: FunctionParameters
  168                        | %empty

  169 Parameters: Parameters "," TypedAttributedVariable
  170           | TypedAttributedVariable

  171 MaybeParameters: "(" Parameters ")"
  172                | "(" error ")"
  173                | %empty

  174 MaybeDefined: "defined" "{" Term "}"
  175             | %empty

  176 MaybeInitially: "initially" "{" MaybeInitializers "}"
  177               | %empty

  178 Initializers: Initializers "," Initializer
  179             | Initializer

  180 Initializer: Term
  181            | Term "->" Term
  182            | TupleLiteral "->" Term

  183 MaybeInitializers: Initializers
  184                  | %empty

  185 Identifier: "identifier"
  186           | "in"

  187 IdentifierPath: DotSeparatedIdentifiers
  188               | "::" Identifier

  189 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier
  190                        | Identifier

  191 Variable: TypedVariable
  192         | Identifier

  193 TypedVariables: TypedVariables "," TypedVariable
  194               | TypedVariable

  195 TypedVariable: Identifier ":" Type

  196 AttributedVariable: "[" Attributes "]" Variable
  197                   | Variable

  198 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  199                        | TypedVariable

  200 Attributes: Attributes "," Attribute
  201           | Attribute

  202 Attribute: BasicAttribute
  203          | ExpressionAttribute

  204 BasicAttribute: Identifier

  205 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 24 45 58 59 62 63 82 142 163 172
"CASM" (258) 2 3
"init" (259) 20 21
"derived" (260) 15
"enumeration" (261) 14
"rule" (262) 16 17
"using" (263) 27
"function" (264) 18
"initially" (265) 176
"defined" (266) 174
"seq" (267) 61 63
"endseq" (268) 61 63
"par" (269) 57 59
"endpar" (270) 57 59
"skip" (271) 41
"let" (272) 51 113
"in" (273) 51 52 53 54 113 115 116 117 186
"forall" (274) 52 53 116
"choose" (275) 54 115
"iterate" (276) 55
"do" (277) 52 53 54 115
"call" (278) 65 67 69
"if" (279) 42 43 114
"then" (280) 42 43 114
"else" (281) 43 114
"case" (282) 44 45
"of" (283) 44 45
"default" (284) 46
"holds" (285) 116
"exists" (286) 117
"with" (287) 53 117
"as" (288) 112
"undef" (289) 130
"false" (290) 132
"true" (291) 131
"and" (292) 103
"or" (293) 101
"xor" (294) 102
"implies" (295) 105
"not" (296) 106
"+" (297) 87 89
"-" (298) 88 90
"=" (299) 14 15 16 17 27 51 96 113
"(" (300) 81 82 111 144 145 157 158 162 163 164 171 172
")" (301) 81 82 111 144 145 157 158 162 163 164 171 172
"[" (302) 2 6 23 140 141 142 143 196 198
"]" (303) 2 6 23 140 141 142 143 196 198
"{" (304) 14 21 44 45 56 58 174 176
"}" (305) 14 21 44 45 56 58 174 176
":" (306) 18 46 47 48 148 195
"::" (307) 188 189
"_" (308) 47
"@" (309) 139
"," (310) 25 71 144 146 149 157 158 169 178 193 200
"<" (311) 97 159 160
">" (312) 98 159 160
"*" (313) 91 111 165
"/" (314) 92
"%" (315) 93
"^" (316) 94
"'" (317) 161
".." (318) 143
"." (319) 109 110
"->" (320) 15 17 18 160 181 182
"=>" (321) 104
":=" (322) 64
"!=" (323) 95
"<=" (324) 99
">=" (325) 100
"{|" (326) 60 62
"|}" (327) 60 62
"binary" (328) 136
"hexadecimal" (329) 137
"integer" (330) 133
"rational" (331) 134
"decimal" (332) 135
"string" (333) 138
"identifier" (334) 185
ABSOLUTE_PATH (335)
UPLUS (336)
UMINUS (337)
CALL_WITHOUT_ARGS (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
Specification (85)
    on left: 1, on right: 0
Header (86)
    on left: 2 3, on right: 1
Definitions (87)
    on left: 4 5, on right: 1 4
AttributedDefinition (88)
    on left: 6 7 8, on right: 4 5
Definition (89)
    on left: 9 10 11 12 13, on right: 6 7
EnumerationDefinition (90)
    on left: 14, on right: 9
DerivedDefinition (91)
    on left: 15, on right: 10
RuleDefinition (92)
    on left: 16 17, on right: 11
FunctionDefinition (93)
    on left: 18 19, on right: 12
ProgramFunctionDefinition (94)
    on left: 20 21, on right: 19
EnumeratorDefinition (95)
    on left: 22 23 24, on right: 25 26
Enumerators (96)
    on left: 25 26, on right: 14 25
UsingDefinition (97)
    on left: 27, on right: 13
Rule (98)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 16 17 39 40
    42 43 46 47 48 51 52 53 54 55
Rules (99)
    on left: 39 40, on right: 39 56 57 60 61
SkipRule (100)
    on left: 41, on right: 28
ConditionalRule (101)
    on left: 42 43, on right: 29
CaseRule (102)
    on left: 44 45, on right: 30
CaseLabel (103)
    on left: 46 47 48, on right: 49 50
CaseLabels (104)
    on left: 49 50, on right: 44 49
LetRule (105)
    on left: 51, on right: 31
ForallRule (106)
    on left: 52 53, on right: 32
ChooseRule (107)
    on left: 54, on right: 33
IterateRule (108)
    on left: 55, on right: 34
BlockRule (109)
    on left: 56 57 58 59, on right: 35
SequenceRule (110)
    on left: 60 61 62 63, on right: 36
UpdateRule (111)
    on left: 64, on right: 37
CallRule (112)
    on left: 65 66 67 68 69 70, on right: 38
Terms (113)
    on left: 71 72, on right: 71 141 144 162
Term (114)
    on left: 73 74 75 76 77 78 79 80, on right: 15 42 43 44 45 48 51
    52 53 54 64 71 72 81 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 111 112 113 114 115 116 117 143 144 148
    161 174 180 181 182 205
SimpleOrClaspedTerm (115)
    on left: 81 82 83 84 85 86, on right: 73 109 110
OperatorExpression (116)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 106, on right: 75
DirectCallExpression (117)
    on left: 107 108, on right: 64 65 66 83
MethodCallExpression (118)
    on left: 109 110, on right: 67 68 84
IndirectCallExpression (119)
    on left: 111, on right: 69 70 85
TypeCastingExpression (120)
    on left: 112, on right: 74
LetExpression (121)
    on left: 113, on right: 76
ConditionalExpression (122)
    on left: 114, on right: 77
ChooseExpression (123)
    on left: 115, on right: 78
UniversalQuantifierExpression (124)
    on left: 116, on right: 79
ExistentialQuantifierExpression (125)
    on left: 117, on right: 80
Literal (126)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129, on right:
    86
UndefinedLiteral (127)
    on left: 130, on right: 118
BooleanLiteral (128)
    on left: 131 132, on right: 119
IntegerLiteral (129)
    on left: 133, on right: 120
RationalLiteral (130)
    on left: 134, on right: 121
DecimalLiteral (131)
    on left: 135, on right: 122
BinaryLiteral (132)
    on left: 136 137, on right: 123
StringLiteral (133)
    on left: 138, on right: 124
ReferenceLiteral (134)
    on left: 139, on right: 125
ListLiteral (135)
    on left: 140 141 142, on right: 126
RangeLiteral (136)
    on left: 143, on right: 127
TupleLiteral (137)
    on left: 144, on right: 128 182
NamedTupleLiteral (138)
    on left: 145, on right: 129
Assignments (139)
    on left: 146 147, on right: 145 146
Assignment (140)
    on left: 148, on right: 146 147
Types (141)
    on left: 149 150, on right: 149 157 159
Type (142)
    on left: 151 152 153 154 155, on right: 15 17 18 27 112 149 150
    157 160 165 166 195
BasicType (143)
    on left: 156, on right: 151
ComposedType (144)
    on left: 157 158, on right: 152
TemplateType (145)
    on left: 159, on right: 153
RelationType (146)
    on left: 160, on right: 154
FixedSizedType (147)
    on left: 161, on right: 155
Arguments (148)
    on left: 162 163 164, on right: 108 110 111
FunctionParameters (149)
    on left: 165 166, on right: 165 167
MaybeFunctionParameters (150)
    on left: 167 168, on right: 18 160
Parameters (151)
    on left: 169 170, on right: 169 171
MaybeParameters (152)
    on left: 171 172 173, on right: 15 16 17
MaybeDefined (153)
    on left: 174 175, on right: 18
MaybeInitially (154)
    on left: 176 177, on right: 18
Initializers (155)
    on left: 178 179, on right: 178 183
Initializer (156)
    on left: 180 181 182, on right: 178 179
MaybeInitializers (157)
    on left: 183 184, on right: 21 176
Identifier (158)
    on left: 185 186, on right: 14 15 16 17 18 22 23 27 109 110 148
    188 189 190 192 195 204 205
IdentifierPath (159)
    on left: 187 188, on right: 20 107 108 139 156 159 160 161
DotSeparatedIdentifiers (160)
    on left: 189 190, on right: 187 189
Variable (161)
    on left: 191 192, on right: 196 197
TypedVariables (162)
    on left: 193 194, on right: 158 193
TypedVariable (163)
    on left: 195, on right: 158 191 193 194 198 199
AttributedVariable (164)
    on left: 196 197, on right: 51 52 53 54 113 115 116 117
TypedAttributedVariable (165)
    on left: 198 199, on right: 169 170
Attributes (166)
    on left: 200 201, on right: 2 6 23 196 198 200
Attribute (167)
    on left: 202 203, on right: 200 201
BasicAttribute (168)
    on left: 204, on right: 202
ExpressionAttribute (169)
    on left: 205, on right: 203


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    Definitions                go to state 21
    AttributedDefinition       go to state 22
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 5

  186 Identifier: "in" .

    $default  reduce using rule 186 (Identifier)


State 6

  185 Identifier: "identifier" .

    $default  reduce using rule 185 (Identifier)


State 7

  204 BasicAttribute: Identifier .
  205 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 204 (BasicAttribute)

    Term                             go to state 51
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 8

    2 Header: "[" Attributes . "]" "CASM"
  200 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 9

  201 Attributes: Attribute .

    $default  reduce using rule 201 (Attributes)


State 10

  202 Attribute: BasicAttribute .

    $default  reduce using rule 202 (Attribute)


State 11

  203 Attribute: ExpressionAttribute .

    $default  reduce using rule 203 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 81
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 76
    IdentifierPath           go to state 82
    DotSeparatedIdentifiers  go to state 78


State 15

   15 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 83


State 16

   14 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 84


State 17

   16 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   17               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 85


State 18

   27 UsingDefinition: "using" . Identifier "=" Type

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 86


State 19

   18 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 87


State 20

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 88
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 21

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 89
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 22

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 23

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 24

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 25

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 26

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 27

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 28

   19 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 19 (FunctionDefinition)


State 29

   13 Definition: UsingDefinition .

    $default  reduce using rule 13 (Definition)


State 30

  113 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 94


State 31

  116 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 95


State 32

  115 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 96


State 33

  114 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 97
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 34

  117 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 98


State 35

  130 UndefinedLiteral: "undef" .

    $default  reduce using rule 130 (UndefinedLiteral)


State 36

  132 BooleanLiteral: "false" .

    $default  reduce using rule 132 (BooleanLiteral)


State 37

  131 BooleanLiteral: "true" .

    $default  reduce using rule 131 (BooleanLiteral)


State 38

  106 OperatorExpression: "not" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 99
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 39

   87 OperatorExpression: "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 100
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 40

   88 OperatorExpression: "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 101
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 41

   81 SimpleOrClaspedTerm: "(" . Term ")"
   82                    | "(" . error ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments
  144 TupleLiteral: "(" . Terms "," Term ")"
  145 NamedTupleLiteral: "(" . Assignments ")"

    error          shift, and go to state 102
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "*"            shift, and go to state 103
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 104
    Term                             go to state 105
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Assignments                      go to state 106
    Assignment                       go to state 107
    Identifier                       go to state 108
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 42

  140 ListLiteral: "[" . "]"
  141            | "[" . Terms "]"
  142            | "[" . error "]"
  143 RangeLiteral: "[" . Term ".." Term "]"

    error          shift, and go to state 109
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "]"            shift, and go to state 110
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 111
    Term                             go to state 112
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 43

  188 IdentifierPath: "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 113


State 44

  139 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 76
    IdentifierPath           go to state 114
    DotSeparatedIdentifiers  go to state 78


State 45

  136 BinaryLiteral: "binary" .

    $default  reduce using rule 136 (BinaryLiteral)


State 46

  137 BinaryLiteral: "hexadecimal" .

    $default  reduce using rule 137 (BinaryLiteral)


State 47

  133 IntegerLiteral: "integer" .

    $default  reduce using rule 133 (IntegerLiteral)


State 48

  134 RationalLiteral: "rational" .

    $default  reduce using rule 134 (RationalLiteral)


State 49

  135 DecimalLiteral: "decimal" .

    $default  reduce using rule 135 (DecimalLiteral)


State 50

  138 StringLiteral: "string" .

    $default  reduce using rule 138 (StringLiteral)


State 51

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  205 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 205 (ExpressionAttribute)


State 52

   73 Term: SimpleOrClaspedTerm .
  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 133

    $default  reduce using rule 73 (Term)


State 53

   75 Term: OperatorExpression .

    $default  reduce using rule 75 (Term)


State 54

   83 SimpleOrClaspedTerm: DirectCallExpression .

    $default  reduce using rule 83 (SimpleOrClaspedTerm)


State 55

   84 SimpleOrClaspedTerm: MethodCallExpression .

    $default  reduce using rule 84 (SimpleOrClaspedTerm)


State 56

   85 SimpleOrClaspedTerm: IndirectCallExpression .

    $default  reduce using rule 85 (SimpleOrClaspedTerm)


State 57

   74 Term: TypeCastingExpression .

    $default  reduce using rule 74 (Term)


State 58

   76 Term: LetExpression .

    $default  reduce using rule 76 (Term)


State 59

   77 Term: ConditionalExpression .

    $default  reduce using rule 77 (Term)


State 60

   78 Term: ChooseExpression .

    $default  reduce using rule 78 (Term)


State 61

   79 Term: UniversalQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 62

   80 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 80 (Term)


State 63

   86 SimpleOrClaspedTerm: Literal .

    $default  reduce using rule 86 (SimpleOrClaspedTerm)


State 64

  118 Literal: UndefinedLiteral .

    $default  reduce using rule 118 (Literal)


State 65

  119 Literal: BooleanLiteral .

    $default  reduce using rule 119 (Literal)


State 66

  120 Literal: IntegerLiteral .

    $default  reduce using rule 120 (Literal)


State 67

  121 Literal: RationalLiteral .

    $default  reduce using rule 121 (Literal)


State 68

  122 Literal: DecimalLiteral .

    $default  reduce using rule 122 (Literal)


State 69

  123 Literal: BinaryLiteral .

    $default  reduce using rule 123 (Literal)


State 70

  124 Literal: StringLiteral .

    $default  reduce using rule 124 (Literal)


State 71

  125 Literal: ReferenceLiteral .

    $default  reduce using rule 125 (Literal)


State 72

  126 Literal: ListLiteral .

    $default  reduce using rule 126 (Literal)


State 73

  127 Literal: RangeLiteral .

    $default  reduce using rule 127 (Literal)


State 74

  128 Literal: TupleLiteral .

    $default  reduce using rule 128 (Literal)


State 75

  129 Literal: NamedTupleLiteral .

    $default  reduce using rule 129 (Literal)


State 76

  190 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 190 (DotSeparatedIdentifiers)


State 77

  107 DirectCallExpression: IdentifierPath .
  108                     | IdentifierPath . Arguments

    "("  shift, and go to state 134

    $default  reduce using rule 107 (DirectCallExpression)

    Arguments  go to state 135


State 78

  187 IdentifierPath: DotSeparatedIdentifiers .
  189 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "::" Identifier

    "::"  shift, and go to state 136

    $default  reduce using rule 187 (IdentifierPath)


State 79

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 137


State 80

  200 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 138
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 81

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 184 (MaybeInitializers)

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializers                     go to state 141
    Initializer                      go to state 142
    MaybeInitializers                go to state 143
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 82

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 83

   15 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 144

    $default  reduce using rule 173 (MaybeParameters)

    MaybeParameters  go to state 145


State 84

   14 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 146


State 85

   16 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   17               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 144

    $default  reduce using rule 173 (MaybeParameters)

    MaybeParameters  go to state 147


State 86

   27 UsingDefinition: "using" Identifier . "=" Type

    "="  shift, and go to state 148


State 87

   18 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 149


State 88

    6 AttributedDefinition: "[" Attributes . "]" Definition
  200 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 150
    ","  shift, and go to state 80


State 89

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 90

  196 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 151
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 91

  192 Variable: Identifier .
  195 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 152

    $default  reduce using rule 192 (Variable)


State 92

  197 AttributedVariable: Variable .

    $default  reduce using rule 197 (AttributedVariable)


State 93

  191 Variable: TypedVariable .

    $default  reduce using rule 191 (Variable)


State 94

  113 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 153


State 95

  116 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 154


State 96

  115 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 155


State 97

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 156
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 98

  117 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 157


State 99

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  106                   | "not" Term .
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 106 (OperatorExpression)


State 100

   87 OperatorExpression: "+" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 87 (OperatorExpression)


State 101

   88 OperatorExpression: "-" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 88 (OperatorExpression)


State 102

   82 SimpleOrClaspedTerm: "(" error . ")"

    ")"  shift, and go to state 158


State 103

  111 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 159
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 104

   71 Terms: Terms . "," Term
  144 TupleLiteral: "(" Terms . "," Term ")"

    ","  shift, and go to state 160


State 105

   72 Terms: Term .
   81 SimpleOrClaspedTerm: "(" Term . ")"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 161
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 106

  145 NamedTupleLiteral: "(" Assignments . ")"
  146 Assignments: Assignments . "," Assignment

    ")"  shift, and go to state 162
    ","  shift, and go to state 163


State 107

  147 Assignments: Assignment .

    $default  reduce using rule 147 (Assignments)


State 108

  148 Assignment: Identifier . ":" Term
  190 DotSeparatedIdentifiers: Identifier .

    ":"  shift, and go to state 164

    $default  reduce using rule 190 (DotSeparatedIdentifiers)


State 109

  142 ListLiteral: "[" error . "]"

    "]"  shift, and go to state 165


State 110

  140 ListLiteral: "[" "]" .

    $default  reduce using rule 140 (ListLiteral)


State 111

   71 Terms: Terms . "," Term
  141 ListLiteral: "[" Terms . "]"

    "]"  shift, and go to state 166
    ","  shift, and go to state 167


State 112

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  143 RangeLiteral: "[" Term . ".." Term "]"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    ".."       shift, and go to state 168
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 113

  188 IdentifierPath: "::" Identifier .

    $default  reduce using rule 188 (IdentifierPath)


State 114

  139 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 139 (ReferenceLiteral)


State 115

  112 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 170
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 116

  103 OperatorExpression: Term "and" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 177
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 117

  101 OperatorExpression: Term "or" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 178
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 118

  102 OperatorExpression: Term "xor" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 179
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 119

  105 OperatorExpression: Term "implies" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 180
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 120

   89 OperatorExpression: Term "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 181
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 121

   90 OperatorExpression: Term "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 182
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 122

   96 OperatorExpression: Term "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 183
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 123

   97 OperatorExpression: Term "<" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 184
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 124

   98 OperatorExpression: Term ">" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 185
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 125

   91 OperatorExpression: Term "*" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 186
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 126

   92 OperatorExpression: Term "/" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 187
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 127

   93 OperatorExpression: Term "%" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 188
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 128

   94 OperatorExpression: Term "^" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 189
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 129

  104 OperatorExpression: Term "=>" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 190
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 130

   95 OperatorExpression: Term "!=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 191
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 131

   99 OperatorExpression: Term "<=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 192
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 132

  100 OperatorExpression: Term ">=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 193
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 133

  109 MethodCallExpression: SimpleOrClaspedTerm "." . Identifier
  110                     | SimpleOrClaspedTerm "." . Identifier Arguments

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 194


State 134

  162 Arguments: "(" . Terms ")"
  163          | "(" . error ")"
  164          | "(" . ")"

    error          shift, and go to state 195
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    ")"            shift, and go to state 196
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 197
    Term                             go to state 198
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 135

  108 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 108 (DirectCallExpression)


State 136

  189 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 199


State 137

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 138

  200 Attributes: Attributes "," Attribute .

    $default  reduce using rule 200 (Attributes)


State 139

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  180 Initializer: Term .
  181            | Term . "->" Term

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "->"       shift, and go to state 200
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 180 (Initializer)


State 140

  128 Literal: TupleLiteral .
  182 Initializer: TupleLiteral . "->" Term

    "->"  shift, and go to state 201

    "->"      [reduce using rule 128 (Literal)]
    $default  reduce using rule 128 (Literal)


State 141

  178 Initializers: Initializers . "," Initializer
  183 MaybeInitializers: Initializers .

    ","  shift, and go to state 202

    $default  reduce using rule 183 (MaybeInitializers)


State 142

  179 Initializers: Initializer .

    $default  reduce using rule 179 (Initializers)


State 143

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 203


State 144

  171 MaybeParameters: "(" . Parameters ")"
  172                | "(" . error ")"

    error         shift, and go to state 204
    "in"          shift, and go to state 5
    "["           shift, and go to state 205
    "identifier"  shift, and go to state 6

    Parameters               go to state 206
    Identifier               go to state 207
    TypedVariable            go to state 208
    TypedAttributedVariable  go to state 209


State 145

   15 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 210


State 146

   14 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 211


State 147

   16 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   17               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 212
    "->"  shift, and go to state 213


State 148

   27 UsingDefinition: "using" Identifier "=" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 214
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 149

   18 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 168 (MaybeFunctionParameters)

    Type                     go to state 215
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    FunctionParameters       go to state 216
    MaybeFunctionParameters  go to state 217
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 150

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19

    Definition                 go to state 218
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 151

  196 AttributedVariable: "[" Attributes . "]" Variable
  200 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 219
    ","  shift, and go to state 80


State 152

  195 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 220
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 153

  113 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 221
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 154

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 222
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 155

  115 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 223
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 156

  114 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 224
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 157

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 225
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 158

   82 SimpleOrClaspedTerm: "(" error ")" .

    $default  reduce using rule 82 (SimpleOrClaspedTerm)


State 159

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  111 IndirectCallExpression: "(" "*" Term . ")" Arguments
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 226
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 160

   71 Terms: Terms "," . Term
  144 TupleLiteral: "(" Terms "," . Term ")"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 227
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 161

   81 SimpleOrClaspedTerm: "(" Term ")" .

    $default  reduce using rule 81 (SimpleOrClaspedTerm)


State 162

  145 NamedTupleLiteral: "(" Assignments ")" .

    $default  reduce using rule 145 (NamedTupleLiteral)


State 163

  146 Assignments: Assignments "," . Assignment

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Assignment  go to state 228
    Identifier  go to state 229


State 164

  148 Assignment: Identifier ":" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 230
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 165

  142 ListLiteral: "[" error "]" .

    $default  reduce using rule 142 (ListLiteral)


State 166

  141 ListLiteral: "[" Terms "]" .

    $default  reduce using rule 141 (ListLiteral)


State 167

   71 Terms: Terms "," . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 231
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 168

  143 RangeLiteral: "[" Term ".." . Term "]"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 232
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 169

  157 ComposedType: "(" . Types "," Type ")"
  158             | "(" . TypedVariables "," TypedVariable ")"

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Types                    go to state 233
    Type                     go to state 234
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 235
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78
    TypedVariables           go to state 236
    TypedVariable            go to state 237


State 170

  112 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 112 (TypeCastingExpression)


State 171

  151 Type: BasicType .

    $default  reduce using rule 151 (Type)


State 172

  152 Type: ComposedType .

    $default  reduce using rule 152 (Type)


State 173

  153 Type: TemplateType .

    $default  reduce using rule 153 (Type)


State 174

  154 Type: RelationType .

    $default  reduce using rule 154 (Type)


State 175

  155 Type: FixedSizedType .

    $default  reduce using rule 155 (Type)


State 176

  156 BasicType: IdentifierPath .
  159 TemplateType: IdentifierPath . "<" Types ">"
  160 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  161 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 238
    "'"  shift, and go to state 239

    $default  reduce using rule 156 (BasicType)


State 177

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  103                   | Term "and" Term .
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "="   shift, and go to state 122
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "!="  shift, and go to state 130
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 103 (OperatorExpression)


State 178

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  101                   | Term "or" Term .
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 101 (OperatorExpression)


State 179

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  102                   | Term "xor" Term .
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 102 (OperatorExpression)


State 180

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  105                   | Term "implies" Term .
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "or"   shift, and go to state 117
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 105 (OperatorExpression)


State 181

   89 OperatorExpression: Term . "+" Term
   89                   | Term "+" Term .
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 89 (OperatorExpression)


State 182

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   90                   | Term "-" Term .
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 90 (OperatorExpression)


State 183

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   96                   | Term "=" Term .
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 96 (OperatorExpression)


State 184

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   97                   | Term "<" Term .
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 97 (OperatorExpression)


State 185

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   98                   | Term ">" Term .
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 98 (OperatorExpression)


State 186

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   91                   | Term "*" Term .
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 91 (OperatorExpression)


State 187

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   92                   | Term "/" Term .
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 92 (OperatorExpression)


State 188

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   93                   | Term "%" Term .
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 93 (OperatorExpression)


State 189

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   94                   | Term "^" Term .
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 94 (OperatorExpression)


State 190

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  104                   | Term "=>" Term .
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "or"   shift, and go to state 117
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 104 (OperatorExpression)


State 191

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   95                   | Term "!=" Term .
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 95 (OperatorExpression)


State 192

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
   99                   | Term "<=" Term .
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 99 (OperatorExpression)


State 193

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  100                   | Term ">=" Term .
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 100 (OperatorExpression)


State 194

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier .
  110                     | SimpleOrClaspedTerm "." Identifier . Arguments

    "("  shift, and go to state 134

    $default  reduce using rule 109 (MethodCallExpression)

    Arguments  go to state 240


State 195

  163 Arguments: "(" error . ")"

    ")"  shift, and go to state 241


State 196

  164 Arguments: "(" ")" .

    $default  reduce using rule 164 (Arguments)


State 197

   71 Terms: Terms . "," Term
  162 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 242
    ","  shift, and go to state 167


State 198

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 199

  189 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier .

    $default  reduce using rule 189 (DotSeparatedIdentifiers)


State 200

  181 Initializer: Term "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 243
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 201

  182 Initializer: TupleLiteral "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 244
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 202

  178 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializer                      go to state 245
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 203

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 204

  172 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 246


State 205

  198 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 247
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 206

  169 Parameters: Parameters . "," TypedAttributedVariable
  171 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 248
    ","  shift, and go to state 249


State 207

  195 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 152


State 208

  199 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 199 (TypedAttributedVariable)


State 209

  170 Parameters: TypedAttributedVariable .

    $default  reduce using rule 170 (Parameters)


State 210

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 250
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 211

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 251
    "in"          shift, and go to state 5
    "["           shift, and go to state 252
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 253
    Enumerators           go to state 254
    Identifier            go to state 255


State 212

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 268
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 213

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 284
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 214

   27 UsingDefinition: "using" Identifier "=" Type .

    $default  reduce using rule 27 (UsingDefinition)


State 215

  166 FunctionParameters: Type .

    $default  reduce using rule 166 (FunctionParameters)


State 216

  165 FunctionParameters: FunctionParameters . "*" Type
  167 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 285

    $default  reduce using rule 167 (MaybeFunctionParameters)


State 217

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 286


State 218

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 219

  196 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 91
    Variable       go to state 287
    TypedVariable  go to state 93


State 220

  195 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 195 (TypedVariable)


State 221

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 288
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 222

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 289
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 223

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 290
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 224

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 291
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 225

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 292
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 226

  111 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 134

    Arguments  go to state 293


State 227

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  144 TupleLiteral: "(" Terms "," Term . ")"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 294
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 71 (Terms)


State 228

  146 Assignments: Assignments "," Assignment .

    $default  reduce using rule 146 (Assignments)


State 229

  148 Assignment: Identifier . ":" Term

    ":"  shift, and go to state 164


State 230

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  148 Assignment: Identifier ":" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 148 (Assignment)


State 231

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 71 (Terms)


State 232

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  143 RangeLiteral: "[" Term ".." Term . "]"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "]"        shift, and go to state 295
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 233

  149 Types: Types . "," Type
  157 ComposedType: "(" Types . "," Type ")"

    ","  shift, and go to state 296


State 234

  150 Types: Type .

    $default  reduce using rule 150 (Types)


State 235

  190 DotSeparatedIdentifiers: Identifier .
  195 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 152

    $default  reduce using rule 190 (DotSeparatedIdentifiers)


State 236

  158 ComposedType: "(" TypedVariables . "," TypedVariable ")"
  193 TypedVariables: TypedVariables . "," TypedVariable

    ","  shift, and go to state 297


State 237

  194 TypedVariables: TypedVariable .

    $default  reduce using rule 194 (TypedVariables)


State 238

  159 TemplateType: IdentifierPath "<" . Types ">"
  160 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 168 (MaybeFunctionParameters)

    Types                    go to state 298
    Type                     go to state 299
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    FunctionParameters       go to state 216
    MaybeFunctionParameters  go to state 300
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 239

  161 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 301
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 240

  110 MethodCallExpression: SimpleOrClaspedTerm "." Identifier Arguments .

    $default  reduce using rule 110 (MethodCallExpression)


State 241

  163 Arguments: "(" error ")" .

    $default  reduce using rule 163 (Arguments)


State 242

  162 Arguments: "(" Terms ")" .

    $default  reduce using rule 162 (Arguments)


State 243

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  181 Initializer: Term "->" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 181 (Initializer)


State 244

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  182 Initializer: TupleLiteral "->" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 182 (Initializer)


State 245

  178 Initializers: Initializers "," Initializer .

    $default  reduce using rule 178 (Initializers)


State 246

  172 MaybeParameters: "(" error ")" .

    $default  reduce using rule 172 (MaybeParameters)


State 247

  198 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  200 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 302
    ","  shift, and go to state 80


State 248

  171 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 171 (MaybeParameters)


State 249

  169 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 205
    "identifier"  shift, and go to state 6

    Identifier               go to state 207
    TypedVariable            go to state 208
    TypedAttributedVariable  go to state 303


State 250

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 304


State 251

   24 EnumeratorDefinition: error .

    $default  reduce using rule 24 (EnumeratorDefinition)


State 252

   23 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 305
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 253

   26 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 26 (Enumerators)


State 254

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   25 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 306
    ","  shift, and go to state 307


State 255

   22 EnumeratorDefinition: Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 256

   61 SequenceRule: "seq" . Rules "endseq"
   63             | "seq" . error "endseq"

    error          shift, and go to state 308
    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 309
    Rules                    go to state 310
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 257

   57 BlockRule: "par" . Rules "endpar"
   59          | "par" . error "endpar"

    error          shift, and go to state 311
    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 309
    Rules                    go to state 312
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 258

   41 SkipRule: "skip" .

    $default  reduce using rule 41 (SkipRule)


State 259

   51 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 313


State 260

   52 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   53           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 314


State 261

   54 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 315


State 262

   55 IterateRule: "iterate" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 316
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 263

   65 CallRule: "call" . DirectCallExpression
   67         | "call" . MethodCallExpression
   69         | "call" . IndirectCallExpression

    "in"           shift, and go to state 5
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 317
    MethodCallExpression     go to state 318
    IndirectCallExpression   go to state 319
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 264

   42 ConditionalRule: "if" . Term "then" Rule
   43                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 320
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 265

   44 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   45         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 321
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 266

   56 BlockRule: "{" . Rules "}"
   58          | "{" . error "}"

    error          shift, and go to state 322
    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 309
    Rules                    go to state 323
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 267

   60 SequenceRule: "{|" . Rules "|}"
   62             | "{|" . error "|}"

    error          shift, and go to state 324
    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 309
    Rules                    go to state 325
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 268

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 269

   28 Rule: SkipRule .

    $default  reduce using rule 28 (Rule)


State 270

   29 Rule: ConditionalRule .

    $default  reduce using rule 29 (Rule)


State 271

   30 Rule: CaseRule .

    $default  reduce using rule 30 (Rule)


State 272

   31 Rule: LetRule .

    $default  reduce using rule 31 (Rule)


State 273

   32 Rule: ForallRule .

    $default  reduce using rule 32 (Rule)


State 274

   33 Rule: ChooseRule .

    $default  reduce using rule 33 (Rule)


State 275

   34 Rule: IterateRule .

    $default  reduce using rule 34 (Rule)


State 276

   35 Rule: BlockRule .

    $default  reduce using rule 35 (Rule)


State 277

   36 Rule: SequenceRule .

    $default  reduce using rule 36 (Rule)


State 278

   37 Rule: UpdateRule .

    $default  reduce using rule 37 (Rule)


State 279

   38 Rule: CallRule .

    $default  reduce using rule 38 (Rule)


State 280

  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 133


State 281

   64 UpdateRule: DirectCallExpression . ":=" Term
   66 CallRule: DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    ":="  shift, and go to state 326

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 66 (CallRule)


State 282

   68 CallRule: MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 68 (CallRule)


State 283

   70 CallRule: IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 70 (CallRule)


State 284

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 327


State 285

  165 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 328
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 286

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 329
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 287

  196 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 196 (AttributedVariable)


State 288

  113 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 330
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 289

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 331
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 290

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 332
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 291

  114 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 333
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 292

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 334
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 293

  111 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 111 (IndirectCallExpression)


State 294

  144 TupleLiteral: "(" Terms "," Term ")" .

    $default  reduce using rule 144 (TupleLiteral)


State 295

  143 RangeLiteral: "[" Term ".." Term "]" .

    $default  reduce using rule 143 (RangeLiteral)


State 296

  149 Types: Types "," . Type
  157 ComposedType: "(" Types "," . Type ")"

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 335
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 297

  158 ComposedType: "(" TypedVariables "," . TypedVariable ")"
  193 TypedVariables: TypedVariables "," . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 207
    TypedVariable  go to state 336


State 298

  149 Types: Types . "," Type
  159 TemplateType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 337
    ">"  shift, and go to state 338


State 299

  150 Types: Type .
  166 FunctionParameters: Type .

    "*"       reduce using rule 166 (FunctionParameters)
    "->"      reduce using rule 166 (FunctionParameters)
    $default  reduce using rule 150 (Types)


State 300

  160 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 339


State 301

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  161 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 161 (FixedSizedType)


State 302

  198 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 207
    TypedVariable  go to state 340


State 303

  169 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 169 (Parameters)


State 304

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 341
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 305

   23 EnumeratorDefinition: "[" Attributes . "]" Identifier
  200 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 342
    ","  shift, and go to state 80


State 306

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 14 (EnumerationDefinition)


State 307

   25 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 251
    "in"          shift, and go to state 5
    "["           shift, and go to state 252
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 343
    Identifier            go to state 255


State 308

   63 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 344


State 309

   40 Rules: Rule .

    $default  reduce using rule 40 (Rules)


State 310

   39 Rules: Rules . Rule
   61 SequenceRule: "seq" Rules . "endseq"

    "seq"          shift, and go to state 256
    "endseq"       shift, and go to state 345
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 346
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 311

   59 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 347


State 312

   39 Rules: Rules . Rule
   57 BlockRule: "par" Rules . "endpar"

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "endpar"       shift, and go to state 348
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 346
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 313

   51 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 349


State 314

   52 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   53           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 350


State 315

   54 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 351


State 316

   55 IterateRule: "iterate" Rule .

    $default  reduce using rule 55 (IterateRule)


State 317

   65 CallRule: "call" DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 65 (CallRule)


State 318

   67 CallRule: "call" MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 67 (CallRule)


State 319

   69 CallRule: "call" IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 69 (CallRule)


State 320

   42 ConditionalRule: "if" Term . "then" Rule
   43                | "if" Term . "then" Rule "else" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 352
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 321

   44 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   45         | "case" Term . "of" "{" error "}"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 353
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 322

   58 BlockRule: "{" error . "}"

    "}"  shift, and go to state 354


State 323

   39 Rules: Rules . Rule
   56 BlockRule: "{" Rules . "}"

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "}"            shift, and go to state 355
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 346
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 324

   62 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 356


State 325

   39 Rules: Rules . Rule
   60 SequenceRule: "{|" Rules . "|}"

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "|}"           shift, and go to state 357
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 346
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 326

   64 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 358
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 327

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 359
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 328

  165 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 165 (FunctionParameters)


State 329

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 360

    $default  reduce using rule 175 (MaybeDefined)

    MaybeDefined  go to state 361


State 330

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 113 (LetExpression)


State 331

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 116 (UniversalQuantifierExpression)


State 332

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 115 (ChooseExpression)


State 333

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 114 (ConditionalExpression)


State 334

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 117 (ExistentialQuantifierExpression)


State 335

  149 Types: Types "," Type .
  157 ComposedType: "(" Types "," Type . ")"

    ")"  shift, and go to state 362

    $default  reduce using rule 149 (Types)


State 336

  158 ComposedType: "(" TypedVariables "," TypedVariable . ")"
  193 TypedVariables: TypedVariables "," TypedVariable .

    ")"  shift, and go to state 363

    $default  reduce using rule 193 (TypedVariables)


State 337

  149 Types: Types "," . Type

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 364
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 338

  159 TemplateType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 159 (TemplateType)


State 339

  160 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "("           shift, and go to state 169
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 365
    BasicType                go to state 171
    ComposedType             go to state 172
    TemplateType             go to state 173
    RelationType             go to state 174
    FixedSizedType           go to state 175
    Identifier               go to state 76
    IdentifierPath           go to state 176
    DotSeparatedIdentifiers  go to state 78


State 340

  198 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 198 (TypedAttributedVariable)


State 341

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 15 (DerivedDefinition)


State 342

   23 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 366


State 343

   25 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 344

   63 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 63 (SequenceRule)


State 345

   61 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 346

   39 Rules: Rules Rule .

    $default  reduce using rule 39 (Rules)


State 347

   59 BlockRule: "par" error "endpar" .

    $default  reduce using rule 59 (BlockRule)


State 348

   57 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 349

   51 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 367
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 350

   52 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   53           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 368
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 351

   54 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 369
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 352

   42 ConditionalRule: "if" Term "then" . Rule
   43                | "if" Term "then" . Rule "else" Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 370
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 353

   44 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   45         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 371


State 354

   58 BlockRule: "{" error "}" .

    $default  reduce using rule 58 (BlockRule)


State 355

   56 BlockRule: "{" Rules "}" .

    $default  reduce using rule 56 (BlockRule)


State 356

   62 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 62 (SequenceRule)


State 357

   60 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 358

   64 UpdateRule: DirectCallExpression ":=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 64 (UpdateRule)


State 359

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 17 (RuleDefinition)


State 360

  174 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 372


State 361

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 373

    $default  reduce using rule 177 (MaybeInitially)

    MaybeInitially  go to state 374


State 362

  157 ComposedType: "(" Types "," Type ")" .

    $default  reduce using rule 157 (ComposedType)


State 363

  158 ComposedType: "(" TypedVariables "," TypedVariable ")" .

    $default  reduce using rule 158 (ComposedType)


State 364

  149 Types: Types "," Type .

    $default  reduce using rule 149 (Types)


State 365

  160 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 375


State 366

   23 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 367

   51 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 376
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 368

   52 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   53           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 377
    "with"     shift, and go to state 378
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 369

   54 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 379
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 370

   42 ConditionalRule: "if" Term "then" Rule .
   43                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 380

    $default  reduce using rule 42 (ConditionalRule)


State 371

   44 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   45         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 381
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 382
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "_"            shift, and go to state 383
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 384
    CaseLabels                       go to state 385
    Term                             go to state 386
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 372

  174 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 387
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 373

  176 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 388


State 374

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 18 (FunctionDefinition)


State 375

  160 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 160 (RelationType)


State 376

   51 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 389
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 377

   52 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 390
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 378

   53 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 391
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 379

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 392
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 380

   43 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 393
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 381

   45 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 394


State 382

   46 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 395


State 383

   47 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 396


State 384

   50 CaseLabels: CaseLabel .

    $default  reduce using rule 50 (CaseLabels)


State 385

   44 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   49 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 382
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "}"            shift, and go to state 397
    "::"           shift, and go to state 43
    "_"            shift, and go to state 383
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 398
    Term                             go to state 386
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 386

   48 CaseLabel: Term . ":" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ":"        shift, and go to state 399
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 387

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  174 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "}"        shift, and go to state 400
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 388

  176 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 184 (MaybeInitializers)

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializers                     go to state 141
    Initializer                      go to state 142
    MaybeInitializers                go to state 401
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 389

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 51 (LetRule)


State 390

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ForallRule)


State 391

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 402
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 392

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 54 (ChooseRule)


State 393

   43 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 43 (ConditionalRule)


State 394

   45 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 45 (CaseRule)


State 395

   46 CaseLabel: "default" ":" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 403
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 396

   47 CaseLabel: "_" ":" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 404
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 397

   44 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 44 (CaseRule)


State 398

   49 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 49 (CaseLabels)


State 399

   48 CaseLabel: Term ":" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 405
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 400

  174 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 174 (MaybeDefined)


State 401

  176 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 406


State 402

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"          shift, and go to state 256
    "par"          shift, and go to state 257
    "skip"         shift, and go to state 258
    "let"          shift, and go to state 259
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 260
    "choose"       shift, and go to state 261
    "iterate"      shift, and go to state 262
    "call"         shift, and go to state 263
    "if"           shift, and go to state 264
    "case"         shift, and go to state 265
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 266
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 267
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 407
    SkipRule                 go to state 269
    ConditionalRule          go to state 270
    CaseRule                 go to state 271
    LetRule                  go to state 272
    ForallRule               go to state 273
    ChooseRule               go to state 274
    IterateRule              go to state 275
    BlockRule                go to state 276
    SequenceRule             go to state 277
    UpdateRule               go to state 278
    CallRule                 go to state 279
    SimpleOrClaspedTerm      go to state 280
    DirectCallExpression     go to state 281
    MethodCallExpression     go to state 282
    IndirectCallExpression   go to state 283
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 403

   46 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 404

   47 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 47 (CaseLabel)


State 405

   48 CaseLabel: Term ":" Rule .

    $default  reduce using rule 48 (CaseLabel)


State 406

  176 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 176 (MaybeInitially)


State 407

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 53 (ForallRule)
