Terminals unused in grammar

   "option"
   "dumps"
   DIRECT_CALL_EXPR_NO_ARG


State 46 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 Definitions: Definitions Definition
    7            | Definition

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
    9                   | ProgramFunctionDefinition

   10 MaybeInitially: "initially" "{" MaybeInitializers "}"
   11               | %empty

   12 MaybeDefined: "defined" "{" Term "}"
   13             | %empty

   14 FunctionParameters: FunctionParameters "*" Type
   15                   | Type

   16 MaybeFunctionParameters: FunctionParameters
   17                        | %empty

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")"
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | Arguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 MaybeIdentifiers: Identifiers
   35                 | %empty

   36 Variable: Identifier ":" Type
   37         | Identifier

   38 Parameters: Parameters "," Variable
   39           | Variable

   40 MaybeParameters: "(" Parameters ")"
   41                | %empty

   42 Type: BasicType
   43     | ComposedType
   44     | FixedSizedType
   45     | RangedType

   46 BasicType: Identifier

   47 ComposedType: Identifier "(" Types ")"

   48 FixedSizedType: Identifier "<" Term ">"

   49 RangedType: Identifier "<" Term ".." Term ">"

   50 Types: Types "," Type
   51      | Type

   52 Atom: RuleReference
   53     | BitNumber
   54     | IntegerNumber
   55     | FloatingNumber
   56     | RationalNumber
   57     | String
   58     | Undefined
   59     | Boolean

   60 Undefined: "undef"

   61 Boolean: "true"
   62        | "false"

   63 String: "string"

   64 BitNumber: "binary"
   65          | "hexadecimal"

   66 IntegerNumber: "integer"

   67 FloatingNumber: "floating"

   68 RationalNumber: "rational"

   69 RuleReference: "@" "identifier"

   70 Term: DirectCallExpression
   71     | IndirectCallExpression
   72     | ConditionalExpression
   73     | UniversalQuantifierExpression
   74     | ExistentialQuantifierExpression
   75     | Expression
   76     | List
   77     | Range
   78     | Atom

   79 Expression: "(" Expression ")"
   80           | "+" Term
   81           | "(" Term ")"
   82           | "-" Term
   83           | Term "+" Term
   84           | Term "-" Term
   85           | Term "*" Term
   86           | Term "/" Term
   87           | Term "%" Term
   88           | Term "^" Term
   89           | Term "!=" Term
   90           | Term "=" Term
   91           | Term "<" Term
   92           | Term ">" Term
   93           | Term "<=" Term
   94           | Term ">=" Term
   95           | Term "or" Term
   96           | Term "xor" Term
   97           | Term "and" Term
   98           | Term "implies" Term
   99           | "not" Term

  100 Range: "[" Term ".." Term "]"

  101 List: "[" "]"
  102     | "[" Term "]"
  103     | "[" Terms "]"

  104 Terms: Terms "," Term
  105      | Term

  106 Arguments: "(" Terms ")"
  107          | "(" ")"

  108 DirectCallExpression: Identifier
  109                     | Identifier Arguments

  110 IndirectCallExpression: "(" "*" Term ")" Arguments

  111 ConditionalExpression: "if" Term "then" Term "else" Term

  112 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  113 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  115               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  116 Rule: SkipRule
  117     | ConditionalRule
  118     | CaseRule
  119     | LetRule
  120     | ForallRule
  121     | IterateRule
  122     | BlockRule
  123     | SequenceRule
  124     | UpdateRule
  125     | CallRule

  126 Rules: Rules Rule
  127      | Rule

  128 SkipRule: "skip"

  129 ConditionalRule: "if" Term "then" Rule
  130                | "if" Term "then" Rule "else" Rule

  131 CaseRule: "case" Term "of" "{" CaseLabels "}"

  132 CaseLabel: "default" ":" Rule
  133          | "_" ":" Rule
  134          | Term ":" Rule

  135 CaseLabels: CaseLabel CaseLabels
  136           | CaseLabel

  137 LetRule: "let" Variable "=" Term "in" Rule

  138 ForallRule: "forall" Variable "in" Term "do" Rule

  139 IterateRule: "iterate" Rule

  140 BlockRule: "{" Rules "}"
  141          | "par" Rules "endpar"

  142 SequenceRule: "{|" Rules "|}"
  143             | "seq" Rules "endseq"

  144 UpdateRule: DirectCallExpression ":=" Term

  145 CallRule: "call" DirectCallExpression
  146         | DirectCallExpression
  147         | "call" IndirectCallExpression
  148         | IndirectCallExpression


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"option" (260)
"derived" (261) 29
"enum" (262) 30
"rule" (263) 114 115
"dumps" (264)
"function" (265) 8
"initially" (266) 10
"defined" (267) 12
"seq" (268) 143
"endseq" (269) 143
"par" (270) 141
"endpar" (271) 141
"skip" (272) 128
"let" (273) 137
"in" (274) 112 113 137 138
"forall" (275) 112 138
"iterate" (276) 139
"do" (277) 138
"call" (278) 145 147
"if" (279) 111 129 130
"then" (280) 111 129 130
"else" (281) 111 130
"case" (282) 131
"of" (283) 131
"default" (284) 132
"holds" (285) 112
"exists" (286) 113
"with" (287) 113
"undef" (288) 60
"false" (289) 62
"true" (290) 61
"and" (291) 97
"or" (292) 95
"xor" (293) 96
"implies" (294) 98
"not" (295) 99
"+" (296) 80 83
"-" (297) 82 84
"=" (298) 29 30 90 114 115 137
"(" (299) 18 40 47 79 81 106 107 110
")" (300) 18 40 47 79 81 106 107 110
"[" (301) 100 101 102 103
"]" (302) 100 101 102 103
"{" (303) 10 12 21 30 131 140
"}" (304) 10 12 21 30 131 140
":" (305) 8 36 132 133 134
"_" (306) 133
"@" (307) 69
"," (308) 25 32 38 50 104
"<" (309) 48 49 91
">" (310) 48 49 92
"*" (311) 14 85 110
"/" (312) 86
"%" (313) 87
"^" (314) 88
".." (315) 49 100
"->" (316) 8 23 24 29 115
":=" (317) 144
"!=" (318) 89
"<=" (319) 93
">=" (320) 94
"{|" (321) 142
"|}" (322) 142
"binary" (323) 64
"hexadecimal" (324) 65
"integer" (325) 66
"rational" (326) 68
"floating" (327) 67
"string" (328) 63
"identifier" (329) 31 69
UPLUS (330)
UMINUS (331)
DIRECT_CALL_EXPR_NO_ARG (332)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
Specification (79)
    on left: 1, on right: 0
Definition (80)
    on left: 2 3 4 5, on right: 6 7
Definitions (81)
    on left: 6 7, on right: 1 6
FunctionDefinition (82)
    on left: 8 9, on right: 2
MaybeInitially (83)
    on left: 10 11, on right: 8
MaybeDefined (84)
    on left: 12 13, on right: 8
FunctionParameters (85)
    on left: 14 15, on right: 14 16
MaybeFunctionParameters (86)
    on left: 16 17, on right: 8
MaybeFunctionAttributes (87)
    on left: 18 19, on right: 8
ProgramFunctionDefinition (88)
    on left: 20 21, on right: 9
Initializer (89)
    on left: 22 23 24, on right: 25 26
Initializers (90)
    on left: 25 26, on right: 25 27
MaybeInitializers (91)
    on left: 27 28, on right: 10 21
DerivedDefinition (92)
    on left: 29, on right: 3
EnumerationDefinition (93)
    on left: 30, on right: 5
Identifier (94)
    on left: 31, on right: 8 20 29 30 32 33 36 37 46 47 48 49 108 109
    114 115
Identifiers (95)
    on left: 32 33, on right: 30 32 34
MaybeIdentifiers (96)
    on left: 34 35, on right: 18
Variable (97)
    on left: 36 37, on right: 38 39 112 113 137 138
Parameters (98)
    on left: 38 39, on right: 38 40
MaybeParameters (99)
    on left: 40 41, on right: 29 114 115
Type (100)
    on left: 42 43 44 45, on right: 8 14 15 29 36 50 51 115
BasicType (101)
    on left: 46, on right: 42
ComposedType (102)
    on left: 47, on right: 43
FixedSizedType (103)
    on left: 48, on right: 44
RangedType (104)
    on left: 49, on right: 45
Types (105)
    on left: 50 51, on right: 47 50
Atom (106)
    on left: 52 53 54 55 56 57 58 59, on right: 78
Undefined (107)
    on left: 60, on right: 58
Boolean (108)
    on left: 61 62, on right: 59
String (109)
    on left: 63, on right: 57
BitNumber (110)
    on left: 64 65, on right: 53
IntegerNumber (111)
    on left: 66, on right: 54
FloatingNumber (112)
    on left: 67, on right: 55
RationalNumber (113)
    on left: 68, on right: 56
RuleReference (114)
    on left: 69, on right: 52
Term (115)
    on left: 70 71 72 73 74 75 76 77 78, on right: 12 22 23 24 29 48
    49 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99
    100 102 104 105 110 111 112 113 129 130 131 134 137 138 144
Expression (116)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
    97 98 99, on right: 75 79
Range (117)
    on left: 100, on right: 77
List (118)
    on left: 101 102 103, on right: 76
Terms (119)
    on left: 104 105, on right: 103 104 106
Arguments (120)
    on left: 106 107, on right: 24 109 110
DirectCallExpression (121)
    on left: 108 109, on right: 70 144 145 146
IndirectCallExpression (122)
    on left: 110, on right: 71 147 148
ConditionalExpression (123)
    on left: 111, on right: 72
UniversalQuantifierExpression (124)
    on left: 112, on right: 73
ExistentialQuantifierExpression (125)
    on left: 113, on right: 74
RuleDefinition (126)
    on left: 114 115, on right: 4
Rule (127)
    on left: 116 117 118 119 120 121 122 123 124 125, on right: 114
    115 126 127 129 130 132 133 134 137 138 139
Rules (128)
    on left: 126 127, on right: 126 140 141 142 143
SkipRule (129)
    on left: 128, on right: 116
ConditionalRule (130)
    on left: 129 130, on right: 117
CaseRule (131)
    on left: 131, on right: 118
CaseLabel (132)
    on left: 132 133 134, on right: 135 136
CaseLabels (133)
    on left: 135 136, on right: 131 135
LetRule (134)
    on left: 137, on right: 119
ForallRule (135)
    on left: 138, on right: 120
IterateRule (136)
    on left: 139, on right: 121
BlockRule (137)
    on left: 140 141, on right: 122
SequenceRule (138)
    on left: 142 143, on right: 123
UpdateRule (139)
    on left: 144, on right: 124
CallRule (140)
    on left: 145 146 147 148, on right: 125


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 8
    Definitions                go to state 9
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 15


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 16
    "identifier"  shift, and go to state 17

    Identifier  go to state 18


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 17

    Identifier  go to state 19


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier  go to state 20


State 6

  114 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  115               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 21


State 7

    8 FunctionDefinition: "function" . MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "("  shift, and go to state 22

    $default  reduce using rule 19 (MaybeFunctionAttributes)

    MaybeFunctionAttributes  go to state 23


State 8

    7 Definitions: Definition .

    $default  reduce using rule 7 (Definitions)


State 9

    1 Specification: "CASM" Definitions .
    6 Definitions: Definitions . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 24
    FunctionDefinition         go to state 10
    ProgramFunctionDefinition  go to state 11
    DerivedDefinition          go to state 12
    EnumerationDefinition      go to state 13
    RuleDefinition             go to state 14


State 10

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 11

    9 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 9 (FunctionDefinition)


State 12

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 13

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 14

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 15

    0 $accept: Specification "end of file" .

    $default  accept


State 16

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 43
    Initializers                     go to state 44
    MaybeInitializers                go to state 45
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 17

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 18

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 19

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 66

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 67


State 20

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 68


State 21

  114 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  115               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 66

    $default  reduce using rule 41 (MaybeParameters)

    MaybeParameters  go to state 69


State 22

   18 MaybeFunctionAttributes: "(" . MaybeIdentifiers ")"

    "identifier"  shift, and go to state 17

    $default  reduce using rule 35 (MaybeIdentifiers)

    Identifier        go to state 70
    Identifiers       go to state 71
    MaybeIdentifiers  go to state 72


State 23

    8 FunctionDefinition: "function" MaybeFunctionAttributes . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier  go to state 73


State 24

    6 Definitions: Definitions Definition .

    $default  reduce using rule 6 (Definitions)


State 25

  112 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 75


State 26

  111 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 77
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 27

  113 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 78


State 28

   60 Undefined: "undef" .

    $default  reduce using rule 60 (Undefined)


State 29

   62 Boolean: "false" .

    $default  reduce using rule 62 (Boolean)


State 30

   61 Boolean: "true" .

    $default  reduce using rule 61 (Boolean)


State 31

   99 Expression: "not" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 79
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 32

   80 Expression: "+" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 80
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 33

   82 Expression: "-" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 81
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 34

   79 Expression: "(" . Expression ")"
   81           | "(" . Term ")"
  106 Arguments: "(" . Terms ")"
  107          | "(" . ")"
  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    ")"            shift, and go to state 82
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "*"            shift, and go to state 83
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 84
    Expression                       go to state 85
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 86
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 35

  100 Range: "[" . Term ".." Term "]"
  101 List: "[" . "]"
  102     | "[" . Term "]"
  103     | "[" . Terms "]"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "]"            shift, and go to state 87
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 88
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 89
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 36

   69 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 90


State 37

   64 BitNumber: "binary" .

    $default  reduce using rule 64 (BitNumber)


State 38

   65 BitNumber: "hexadecimal" .

    $default  reduce using rule 65 (BitNumber)


State 39

   66 IntegerNumber: "integer" .

    $default  reduce using rule 66 (IntegerNumber)


State 40

   68 RationalNumber: "rational" .

    $default  reduce using rule 68 (RationalNumber)


State 41

   67 FloatingNumber: "floating" .

    $default  reduce using rule 67 (FloatingNumber)


State 42

   63 String: "string" .

    $default  reduce using rule 63 (String)


State 43

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 44

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 91

    $default  reduce using rule 27 (MaybeInitializers)


State 45

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 92


State 46

  108 DirectCallExpression: Identifier .
  109                     | Identifier . Arguments

    "("  shift, and go to state 93

    "("       [reduce using rule 108 (DirectCallExpression)]
    $default  reduce using rule 108 (DirectCallExpression)

    Arguments  go to state 94


State 47

   78 Term: Atom .

    $default  reduce using rule 78 (Term)


State 48

   58 Atom: Undefined .

    $default  reduce using rule 58 (Atom)


State 49

   59 Atom: Boolean .

    $default  reduce using rule 59 (Atom)


State 50

   57 Atom: String .

    $default  reduce using rule 57 (Atom)


State 51

   53 Atom: BitNumber .

    $default  reduce using rule 53 (Atom)


State 52

   54 Atom: IntegerNumber .

    $default  reduce using rule 54 (Atom)


State 53

   55 Atom: FloatingNumber .

    $default  reduce using rule 55 (Atom)


State 54

   56 Atom: RationalNumber .

    $default  reduce using rule 56 (Atom)


State 55

   52 Atom: RuleReference .

    $default  reduce using rule 52 (Atom)


State 56

   22 Initializer: Term .
   23            | Term . "->" Term
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "->"       shift, and go to state 108
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 22 (Initializer)


State 57

   75 Term: Expression .

    $default  reduce using rule 75 (Term)


State 58

   77 Term: Range .

    $default  reduce using rule 77 (Term)


State 59

   76 Term: List .

    $default  reduce using rule 76 (Term)


State 60

   24 Initializer: Arguments . "->" Term

    "->"  shift, and go to state 112


State 61

   70 Term: DirectCallExpression .

    $default  reduce using rule 70 (Term)


State 62

   71 Term: IndirectCallExpression .

    $default  reduce using rule 71 (Term)


State 63

   72 Term: ConditionalExpression .

    $default  reduce using rule 72 (Term)


State 64

   73 Term: UniversalQuantifierExpression .

    $default  reduce using rule 73 (Term)


State 65

   74 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 74 (Term)


State 66

   40 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 113
    Parameters  go to state 114


State 67

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 115


State 68

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 116


State 69

  114 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  115               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 117
    "->"  shift, and go to state 118


State 70

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 71

   32 Identifiers: Identifiers . "," Identifier
   34 MaybeIdentifiers: Identifiers .

    ","  shift, and go to state 119

    $default  reduce using rule 34 (MaybeIdentifiers)


State 72

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers . ")"

    ")"  shift, and go to state 120


State 73

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 121


State 74

   36 Variable: Identifier . ":" Type
   37         | Identifier .

    ":"  shift, and go to state 122

    $default  reduce using rule 37 (Variable)


State 75

  112 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 123


State 76

   79 Expression: "(" . Expression ")"
   81           | "(" . Term ")"
  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "*"            shift, and go to state 83
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 124
    Expression                       go to state 85
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 77

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  111 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 125
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 78

  113 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 126


State 79

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
   99           | "not" Term .

    $default  reduce using rule 99 (Expression)


State 80

   80 Expression: "+" Term .
   83           | Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    $default  reduce using rule 80 (Expression)


State 81

   82 Expression: "-" Term .
   83           | Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    $default  reduce using rule 82 (Expression)


State 82

  107 Arguments: "(" ")" .

    $default  reduce using rule 107 (Arguments)


State 83

  110 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 127
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 84

   81 Expression: "(" Term . ")"
   83           | Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  105 Terms: Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    ")"        shift, and go to state 128
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    ")"       [reduce using rule 105 (Terms)]
    $default  reduce using rule 105 (Terms)


State 85

   75 Term: Expression .
   79 Expression: "(" Expression . ")"

    ")"  shift, and go to state 129

    ")"       [reduce using rule 75 (Term)]
    $default  reduce using rule 75 (Term)


State 86

  104 Terms: Terms . "," Term
  106 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 130
    ","  shift, and go to state 131


State 87

  101 List: "[" "]" .

    $default  reduce using rule 101 (List)


State 88

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  100 Range: "[" Term . ".." Term "]"
  102 List: "[" Term . "]"
  105 Terms: Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "]"        shift, and go to state 132
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    ".."       shift, and go to state 133
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    "]"       [reduce using rule 105 (Terms)]
    $default  reduce using rule 105 (Terms)


State 89

  103 List: "[" Terms . "]"
  104 Terms: Terms . "," Term

    "]"  shift, and go to state 134
    ","  shift, and go to state 131


State 90

   69 RuleReference: "@" "identifier" .

    $default  reduce using rule 69 (RuleReference)


State 91

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Initializer                      go to state 135
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 92

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 93

  106 Arguments: "(" . Terms ")"
  107          | "(" . ")"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    ")"            shift, and go to state 82
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 136
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Terms                            go to state 86
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 94

  109 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 109 (DirectCallExpression)


State 95

   97 Expression: Term "and" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 137
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 96

   95 Expression: Term "or" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 138
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 97

   96 Expression: Term "xor" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 139
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 98

   98 Expression: Term "implies" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 140
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 99

   83 Expression: Term "+" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 141
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 100

   84 Expression: Term "-" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 142
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 101

   90 Expression: Term "=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 143
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 102

   91 Expression: Term "<" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 144
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 103

   92 Expression: Term ">" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 145
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 104

   85 Expression: Term "*" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 146
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 105

   86 Expression: Term "/" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 147
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 106

   87 Expression: Term "%" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 148
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 107

   88 Expression: Term "^" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 149
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 108

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 150
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 109

   89 Expression: Term "!=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 151
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 110

   93 Expression: Term "<=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 152
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 111

   94 Expression: Term ">=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 153
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 112

   24 Initializer: Arguments "->" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 154
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 113

   39 Parameters: Variable .

    $default  reduce using rule 39 (Parameters)


State 114

   38 Parameters: Parameters . "," Variable
   40 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 155
    ","  shift, and go to state 156


State 115

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 158
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 116

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 17

    Identifier   go to state 70
    Identifiers  go to state 163


State 117

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 178
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 118

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 189
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 119

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 17

    Identifier  go to state 190


State 120

   18 MaybeFunctionAttributes: "(" MaybeIdentifiers ")" .

    $default  reduce using rule 18 (MaybeFunctionAttributes)


State 121

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    $default  reduce using rule 17 (MaybeFunctionParameters)

    FunctionParameters       go to state 191
    MaybeFunctionParameters  go to state 192
    Identifier               go to state 157
    Type                     go to state 193
    BasicType                go to state 159
    ComposedType             go to state 160
    FixedSizedType           go to state 161
    RangedType               go to state 162


State 122

   36 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 194
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 123

  112 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 195
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 124

   81 Expression: "(" Term . ")"
   83           | Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    ")"        shift, and go to state 128
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 125

  111 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 196
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 126

  113 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 197
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 127

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  110 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    ")"        shift, and go to state 198
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 128

   81 Expression: "(" Term ")" .

    $default  reduce using rule 81 (Expression)


State 129

   79 Expression: "(" Expression ")" .

    $default  reduce using rule 79 (Expression)


State 130

  106 Arguments: "(" Terms ")" .

    $default  reduce using rule 106 (Arguments)


State 131

  104 Terms: Terms "," . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 199
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 132

  102 List: "[" Term "]" .

    $default  reduce using rule 102 (List)


State 133

  100 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 200
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 134

  103 List: "[" Terms "]" .

    $default  reduce using rule 103 (List)


State 135

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 136

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  105 Terms: Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 105 (Terms)


State 137

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   97           | Term "and" Term .
   98           | Term . "implies" Term

    "+"   shift, and go to state 99
    "-"   shift, and go to state 100
    "="   shift, and go to state 101
    "<"   shift, and go to state 102
    ">"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    "^"   shift, and go to state 107
    "!="  shift, and go to state 109
    "<="  shift, and go to state 110
    ">="  shift, and go to state 111

    $default  reduce using rule 97 (Expression)


State 138

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   95           | Term "or" Term .
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"  shift, and go to state 95
    "xor"  shift, and go to state 97
    "+"    shift, and go to state 99
    "-"    shift, and go to state 100
    "="    shift, and go to state 101
    "<"    shift, and go to state 102
    ">"    shift, and go to state 103
    "*"    shift, and go to state 104
    "/"    shift, and go to state 105
    "%"    shift, and go to state 106
    "^"    shift, and go to state 107
    "!="   shift, and go to state 109
    "<="   shift, and go to state 110
    ">="   shift, and go to state 111

    $default  reduce using rule 95 (Expression)


State 139

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   96           | Term "xor" Term .
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"  shift, and go to state 95
    "+"    shift, and go to state 99
    "-"    shift, and go to state 100
    "="    shift, and go to state 101
    "<"    shift, and go to state 102
    ">"    shift, and go to state 103
    "*"    shift, and go to state 104
    "/"    shift, and go to state 105
    "%"    shift, and go to state 106
    "^"    shift, and go to state 107
    "!="   shift, and go to state 109
    "<="   shift, and go to state 110
    ">="   shift, and go to state 111

    $default  reduce using rule 96 (Expression)


State 140

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
   98           | Term "implies" Term .

    "and"  shift, and go to state 95
    "or"   shift, and go to state 96
    "xor"  shift, and go to state 97
    "+"    shift, and go to state 99
    "-"    shift, and go to state 100
    "="    shift, and go to state 101
    "<"    shift, and go to state 102
    ">"    shift, and go to state 103
    "*"    shift, and go to state 104
    "/"    shift, and go to state 105
    "%"    shift, and go to state 106
    "^"    shift, and go to state 107
    "!="   shift, and go to state 109
    "<="   shift, and go to state 110
    ">="   shift, and go to state 111

    $default  reduce using rule 98 (Expression)


State 141

   83 Expression: Term . "+" Term
   83           | Term "+" Term .
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 83 (Expression)


State 142

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   84           | Term "-" Term .
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 84 (Expression)


State 143

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   90           | Term "=" Term .
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"   shift, and go to state 99
    "-"   shift, and go to state 100
    "<"   shift, and go to state 102
    ">"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    "^"   shift, and go to state 107
    "<="  shift, and go to state 110
    ">="  shift, and go to state 111

    $default  reduce using rule 90 (Expression)


State 144

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   91           | Term "<" Term .
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"  shift, and go to state 99
    "-"  shift, and go to state 100
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 91 (Expression)


State 145

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   92           | Term ">" Term .
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"  shift, and go to state 99
    "-"  shift, and go to state 100
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 92 (Expression)


State 146

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   85           | Term "*" Term .
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "^"  shift, and go to state 107

    $default  reduce using rule 85 (Expression)


State 147

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   86           | Term "/" Term .
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "^"  shift, and go to state 107

    $default  reduce using rule 86 (Expression)


State 148

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   87           | Term "%" Term .
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "^"  shift, and go to state 107

    $default  reduce using rule 87 (Expression)


State 149

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   88           | Term "^" Term .
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    $default  reduce using rule 88 (Expression)


State 150

   23 Initializer: Term "->" Term .
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 23 (Initializer)


State 151

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   89           | Term "!=" Term .
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"   shift, and go to state 99
    "-"   shift, and go to state 100
    "<"   shift, and go to state 102
    ">"   shift, and go to state 103
    "*"   shift, and go to state 104
    "/"   shift, and go to state 105
    "%"   shift, and go to state 106
    "^"   shift, and go to state 107
    "<="  shift, and go to state 110
    ">="  shift, and go to state 111

    $default  reduce using rule 89 (Expression)


State 152

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   93           | Term "<=" Term .
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"  shift, and go to state 99
    "-"  shift, and go to state 100
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 93 (Expression)


State 153

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   94           | Term ">=" Term .
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "+"  shift, and go to state 99
    "-"  shift, and go to state 100
    "*"  shift, and go to state 104
    "/"  shift, and go to state 105
    "%"  shift, and go to state 106
    "^"  shift, and go to state 107

    $default  reduce using rule 94 (Expression)


State 154

   24 Initializer: Arguments "->" Term .
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 24 (Initializer)


State 155

   40 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 40 (MaybeParameters)


State 156

   38 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 201


State 157

   46 BasicType: Identifier .
   47 ComposedType: Identifier . "(" Types ")"
   48 FixedSizedType: Identifier . "<" Term ">"
   49 RangedType: Identifier . "<" Term ".." Term ">"

    "("  shift, and go to state 202
    "<"  shift, and go to state 203

    $default  reduce using rule 46 (BasicType)


State 158

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 204


State 159

   42 Type: BasicType .

    $default  reduce using rule 42 (Type)


State 160

   43 Type: ComposedType .

    $default  reduce using rule 43 (Type)


State 161

   44 Type: FixedSizedType .

    $default  reduce using rule 44 (Type)


State 162

   45 Type: RangedType .

    $default  reduce using rule 45 (Type)


State 163

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 205
    ","  shift, and go to state 119


State 164

  143 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 206
    Rules                   go to state 207
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 165

  141 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 206
    Rules                   go to state 208
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 166

  128 SkipRule: "skip" .

    $default  reduce using rule 128 (SkipRule)


State 167

  137 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 209


State 168

  138 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 17

    Identifier  go to state 74
    Variable    go to state 210


State 169

  139 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 211
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 170

  145 CallRule: "call" . DirectCallExpression
  147         | "call" . IndirectCallExpression

    "("           shift, and go to state 173
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 212
    IndirectCallExpression  go to state 213


State 171

  129 ConditionalRule: "if" . Term "then" Rule
  130                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 214
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 172

  131 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 215
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 173

  110 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 83


State 174

  140 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 206
    Rules                   go to state 216
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 175

  142 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 206
    Rules                   go to state 217
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 176

  144 UpdateRule: DirectCallExpression . ":=" Term
  146 CallRule: DirectCallExpression .

    ":="  shift, and go to state 218

    $default  reduce using rule 146 (CallRule)


State 177

  148 CallRule: IndirectCallExpression .

    $default  reduce using rule 148 (CallRule)


State 178

  114 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 114 (RuleDefinition)


State 179

  116 Rule: SkipRule .

    $default  reduce using rule 116 (Rule)


State 180

  117 Rule: ConditionalRule .

    $default  reduce using rule 117 (Rule)


State 181

  118 Rule: CaseRule .

    $default  reduce using rule 118 (Rule)


State 182

  119 Rule: LetRule .

    $default  reduce using rule 119 (Rule)


State 183

  120 Rule: ForallRule .

    $default  reduce using rule 120 (Rule)


State 184

  121 Rule: IterateRule .

    $default  reduce using rule 121 (Rule)


State 185

  122 Rule: BlockRule .

    $default  reduce using rule 122 (Rule)


State 186

  123 Rule: SequenceRule .

    $default  reduce using rule 123 (Rule)


State 187

  124 Rule: UpdateRule .

    $default  reduce using rule 124 (Rule)


State 188

  125 Rule: CallRule .

    $default  reduce using rule 125 (Rule)


State 189

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 219


State 190

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 191

   14 FunctionParameters: FunctionParameters . "*" Type
   16 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 220

    $default  reduce using rule 16 (MaybeFunctionParameters)


State 192

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 221


State 193

   15 FunctionParameters: Type .

    $default  reduce using rule 15 (FunctionParameters)


State 194

   36 Variable: Identifier ":" Type .

    $default  reduce using rule 36 (Variable)


State 195

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  112 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 222
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 196

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  111 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 223
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 197

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  113 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 224
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 198

  110 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 93

    Arguments  go to state 225


State 199

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  104 Terms: Terms "," Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 104 (Terms)


State 200

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  100 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "]"        shift, and go to state 226
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 201

   38 Parameters: Parameters "," Variable .

    $default  reduce using rule 38 (Parameters)


State 202

   47 ComposedType: Identifier "(" . Types ")"

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 227
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162
    Types           go to state 228


State 203

   48 FixedSizedType: Identifier "<" . Term ">"
   49 RangedType: Identifier "<" . Term ".." Term ">"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 229
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 204

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 230
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 205

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 206

  127 Rules: Rule .

    $default  reduce using rule 127 (Rules)


State 207

  126 Rules: Rules . Rule
  143 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 164
    "endseq"      shift, and go to state 231
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 232
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 208

  126 Rules: Rules . Rule
  141 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "endpar"      shift, and go to state 233
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 232
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 209

  137 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 234


State 210

  138 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 235


State 211

  139 IterateRule: "iterate" Rule .

    $default  reduce using rule 139 (IterateRule)


State 212

  145 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 145 (CallRule)


State 213

  147 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 147 (CallRule)


State 214

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  129 ConditionalRule: "if" Term . "then" Rule
  130                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 236
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 215

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  131 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 237
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 216

  126 Rules: Rules . Rule
  140 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "}"           shift, and go to state 238
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 232
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 217

  126 Rules: Rules . Rule
  142 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "|}"          shift, and go to state 239
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 232
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 218

  144 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 240
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 219

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 241
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 220

   14 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 242
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 221

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 243
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 222

  112 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 244
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 223

  111 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 245
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 224

  113 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 246
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 225

  110 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 110 (IndirectCallExpression)


State 226

  100 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 100 (Range)


State 227

   51 Types: Type .

    $default  reduce using rule 51 (Types)


State 228

   47 ComposedType: Identifier "(" Types . ")"
   50 Types: Types . "," Type

    ")"  shift, and go to state 247
    ","  shift, and go to state 248


State 229

   48 FixedSizedType: Identifier "<" Term . ">"
   49 RangedType: Identifier "<" Term . ".." Term ">"
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 249
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    ".."       shift, and go to state 250
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 230

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 29 (DerivedDefinition)


State 231

  143 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 143 (SequenceRule)


State 232

  126 Rules: Rules Rule .

    $default  reduce using rule 126 (Rules)


State 233

  141 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 141 (BlockRule)


State 234

  137 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 251
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 235

  138 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 252
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 236

  129 ConditionalRule: "if" Term "then" . Rule
  130                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 253
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 237

  131 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 254


State 238

  140 BlockRule: "{" Rules "}" .

    $default  reduce using rule 140 (BlockRule)


State 239

  142 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 142 (SequenceRule)


State 240

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  144 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 144 (UpdateRule)


State 241

  115 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 115 (RuleDefinition)


State 242

   14 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 14 (FunctionParameters)


State 243

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 255

    $default  reduce using rule 13 (MaybeDefined)

    MaybeDefined  go to state 256


State 244

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  112 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 112 (UniversalQuantifierExpression)


State 245

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  111 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111

    $default  reduce using rule 111 (ConditionalExpression)


State 246

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  113 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 113 (ExistentialQuantifierExpression)


State 247

   47 ComposedType: Identifier "(" Types ")" .

    $default  reduce using rule 47 (ComposedType)


State 248

   50 Types: Types "," . Type

    "identifier"  shift, and go to state 17

    Identifier      go to state 157
    Type            go to state 257
    BasicType       go to state 159
    ComposedType    go to state 160
    FixedSizedType  go to state 161
    RangedType      go to state 162


State 249

   48 FixedSizedType: Identifier "<" Term ">" .
   92 Expression: Term ">" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 48 (FixedSizedType)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 145
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 250

   49 RangedType: Identifier "<" Term ".." . Term ">"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 258
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 251

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  137 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 259
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 252

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  138 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 260
    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 253

  129 ConditionalRule: "if" Term "then" Rule .
  130                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 261

    $default  reduce using rule 129 (ConditionalRule)


State 254

  131 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "default"      shift, and go to state 262
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "_"            shift, and go to state 263
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 264
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65
    CaseLabel                        go to state 265
    CaseLabels                       go to state 266


State 255

   12 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 267


State 256

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 268

    $default  reduce using rule 11 (MaybeInitially)

    MaybeInitially  go to state 269


State 257

   50 Types: Types "," Type .

    $default  reduce using rule 50 (Types)


State 258

   49 RangedType: Identifier "<" Term ".." Term . ">"
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "<"        shift, and go to state 102
    ">"        shift, and go to state 270
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 259

  137 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 271
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 260

  138 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 272
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 261

  130 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 273
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 262

  132 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 274


State 263

  133 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 275


State 264

   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term
  134 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    ":"        shift, and go to state 276
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 265

  135 CaseLabels: CaseLabel . CaseLabels
  136           | CaseLabel .

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "default"      shift, and go to state 262
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "_"            shift, and go to state 263
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 136 (CaseLabels)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 264
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65
    CaseLabel                        go to state 265
    CaseLabels                       go to state 277


State 266

  131 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 278


State 267

   12 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 279
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 268

   10 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 280


State 269

    8 FunctionDefinition: "function" MaybeFunctionAttributes Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 8 (FunctionDefinition)


State 270

   49 RangedType: Identifier "<" Term ".." Term ">" .
   92 Expression: Term ">" . Term

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 76
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 49 (RangedType)

    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 145
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 271

  137 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 137 (LetRule)


State 272

  138 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 138 (ForallRule)


State 273

  130 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 130 (ConditionalRule)


State 274

  132 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 281
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 275

  133 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 282
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 276

  134 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 164
    "par"         shift, and go to state 165
    "skip"        shift, and go to state 166
    "let"         shift, and go to state 167
    "forall"      shift, and go to state 168
    "iterate"     shift, and go to state 169
    "call"        shift, and go to state 170
    "if"          shift, and go to state 171
    "case"        shift, and go to state 172
    "("           shift, and go to state 173
    "{"           shift, and go to state 174
    "{|"          shift, and go to state 175
    "identifier"  shift, and go to state 17

    Identifier              go to state 46
    DirectCallExpression    go to state 176
    IndirectCallExpression  go to state 177
    Rule                    go to state 283
    SkipRule                go to state 179
    ConditionalRule         go to state 180
    CaseRule                go to state 181
    LetRule                 go to state 182
    ForallRule              go to state 183
    IterateRule             go to state 184
    BlockRule               go to state 185
    SequenceRule            go to state 186
    UpdateRule              go to state 187
    CallRule                go to state 188


State 277

  135 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 135 (CaseLabels)


State 278

  131 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 131 (CaseRule)


State 279

   12 MaybeDefined: "defined" "{" Term . "}"
   83 Expression: Term . "+" Term
   84           | Term . "-" Term
   85           | Term . "*" Term
   86           | Term . "/" Term
   87           | Term . "%" Term
   88           | Term . "^" Term
   89           | Term . "!=" Term
   90           | Term . "=" Term
   91           | Term . "<" Term
   92           | Term . ">" Term
   93           | Term . "<=" Term
   94           | Term . ">=" Term
   95           | Term . "or" Term
   96           | Term . "xor" Term
   97           | Term . "and" Term
   98           | Term . "implies" Term

    "and"      shift, and go to state 95
    "or"       shift, and go to state 96
    "xor"      shift, and go to state 97
    "implies"  shift, and go to state 98
    "+"        shift, and go to state 99
    "-"        shift, and go to state 100
    "="        shift, and go to state 101
    "}"        shift, and go to state 284
    "<"        shift, and go to state 102
    ">"        shift, and go to state 103
    "*"        shift, and go to state 104
    "/"        shift, and go to state 105
    "%"        shift, and go to state 106
    "^"        shift, and go to state 107
    "!="       shift, and go to state 109
    "<="       shift, and go to state 110
    ">="       shift, and go to state 111


State 280

   10 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 25
    "if"           shift, and go to state 26
    "exists"       shift, and go to state 27
    "undef"        shift, and go to state 28
    "false"        shift, and go to state 29
    "true"         shift, and go to state 30
    "not"          shift, and go to state 31
    "+"            shift, and go to state 32
    "-"            shift, and go to state 33
    "("            shift, and go to state 34
    "["            shift, and go to state 35
    "@"            shift, and go to state 36
    "binary"       shift, and go to state 37
    "hexadecimal"  shift, and go to state 38
    "integer"      shift, and go to state 39
    "rational"     shift, and go to state 40
    "floating"     shift, and go to state 41
    "string"       shift, and go to state 42
    "identifier"   shift, and go to state 17

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 43
    Initializers                     go to state 44
    MaybeInitializers                go to state 285
    Identifier                       go to state 46
    Atom                             go to state 47
    Undefined                        go to state 48
    Boolean                          go to state 49
    String                           go to state 50
    BitNumber                        go to state 51
    IntegerNumber                    go to state 52
    FloatingNumber                   go to state 53
    RationalNumber                   go to state 54
    RuleReference                    go to state 55
    Term                             go to state 56
    Expression                       go to state 57
    Range                            go to state 58
    List                             go to state 59
    Arguments                        go to state 60
    DirectCallExpression             go to state 61
    IndirectCallExpression           go to state 62
    ConditionalExpression            go to state 63
    UniversalQuantifierExpression    go to state 64
    ExistentialQuantifierExpression  go to state 65


State 281

  132 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 132 (CaseLabel)


State 282

  133 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 133 (CaseLabel)


State 283

  134 CaseLabel: Term ":" Rule .

    $default  reduce using rule 134 (CaseLabel)


State 284

   12 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 12 (MaybeDefined)


State 285

   10 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 286


State 286

   10 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 10 (MaybeInitially)
