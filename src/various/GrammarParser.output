Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | error

    7 AttributedDefinition: "[" Attributes "]" Definition
    8                     | Definition

    9 Definitions: Definitions AttributedDefinition
   10            | AttributedDefinition

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   12                   | ProgramFunctionDefinition

   13 MaybeInitially: "initially" "{" MaybeInitializers "}"
   14               | %empty

   15 MaybeDefined: "defined" "{" Term "}"
   16             | %empty

   17 FunctionParameters: FunctionParameters "*" Type
   18                   | Type

   19 MaybeFunctionParameters: FunctionParameters
   20                        | %empty

   21 ProgramFunctionDefinition: "init" IdentifierPath
   22                          | "init" "{" MaybeInitializers "}"

   23 Initializer: Term
   24            | Term "->" Term
   25            | TwoOrMoreArguments "->" Term

   26 Initializers: Initializers "," Initializer
   27             | Initializer

   28 MaybeInitializers: Initializers
   29                  | %empty

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   32 Identifier: "identifier"

   33 Identifiers: Identifiers "," Identifier
   34            | Identifier

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   36                        | Identifier

   37 IdentifierPath: DotSeparatedIdentifiers
   38               | "." DotSeparatedIdentifiers

   39 Variable: Identifier ":" Type
   40         | Identifier

   41 Parameters: Parameters "," Variable
   42           | Variable

   43 MaybeParameters: "(" Parameters ")"
   44                | "(" error ")"
   45                | %empty

   46 Type: BasicType
   47     | ComposedType
   48     | RelationType
   49     | FixedSizedType

   50 BasicType: IdentifierPath

   51 ComposedType: IdentifierPath "<" Types ">"

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   53 FixedSizedType: IdentifierPath "'" Term

   54 Types: Types "," Type
   55      | Type

   56 Atom: Reference
   57     | BitNumber
   58     | IntegerNumber
   59     | FloatingNumber
   60     | RationalNumber
   61     | String
   62     | Undefined
   63     | Boolean

   64 Undefined: "undef"

   65 Boolean: "true"
   66        | "false"

   67 String: "string"

   68 BitNumber: "binary"
   69          | "hexadecimal"

   70 IntegerNumber: "integer"

   71 FloatingNumber: "floating"

   72 RationalNumber: "rational"

   73 Reference: "@" IdentifierPath

   74 Term: DirectCallExpression
   75     | IndirectCallExpression
   76     | ConditionalExpression
   77     | UniversalQuantifierExpression
   78     | ExistentialQuantifierExpression
   79     | Expression
   80     | List
   81     | Range
   82     | Atom

   83 Expression: "(" Term ")"
   84           | "(" error ")"
   85           | "+" Term
   86           | "-" Term
   87           | Term "+" Term
   88           | Term "-" Term
   89           | Term "*" Term
   90           | Term "/" Term
   91           | Term "%" Term
   92           | Term "^" Term
   93           | Term "!=" Term
   94           | Term "=" Term
   95           | Term "<" Term
   96           | Term ">" Term
   97           | Term "<=" Term
   98           | Term ">=" Term
   99           | Term "or" Term
  100           | Term "xor" Term
  101           | Term "and" Term
  102           | Term "=>" Term
  103           | Term "implies" Term
  104           | "not" Term

  105 Range: "[" Term ".." Term "]"

  106 List: "[" "]"
  107     | "[" Terms "]"

  108 Terms: Terms "," Term
  109      | Term

  110 Arguments: "(" Terms ")"
  111          | "(" error ")"
  112          | "(" ")"

  113 TwoOrMoreArguments: "(" Term "," Terms ")"

  114 DirectCallExpression: IdentifierPath
  115                     | IdentifierPath Arguments

  116 IndirectCallExpression: "(" "*" Term ")" Arguments

  117 ConditionalExpression: "if" Term "then" Term "else" Term

  118 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  119 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  120 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  121               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  122 Rule: SkipRule
  123     | ConditionalRule
  124     | CaseRule
  125     | LetRule
  126     | ForallRule
  127     | ChooseRule
  128     | IterateRule
  129     | BlockRule
  130     | SequenceRule
  131     | UpdateRule
  132     | CallRule

  133 Rules: Rules Rule
  134      | Rule

  135 SkipRule: "skip"

  136 ConditionalRule: "if" Term "then" Rule
  137                | "if" Term "then" Rule "else" Rule

  138 CaseRule: "case" Term "of" "{" CaseLabels "}"
  139         | "case" Term "of" "{" error "}"

  140 CaseLabel: "default" ":" Rule
  141          | "_" ":" Rule
  142          | Term ":" Rule

  143 CaseLabels: CaseLabel CaseLabels
  144           | CaseLabel

  145 LetRule: "let" Variable "=" Term "in" Rule

  146 ForallRule: "forall" Variable "in" Term "do" Rule

  147 ChooseRule: "choose" Variable "in" Term "do" Rule

  148 IterateRule: "iterate" Rule

  149 BlockRule: "{" Rules "}"
  150          | "par" Rules "endpar"
  151          | "{" error "}"
  152          | "par" error "endpar"

  153 SequenceRule: "{|" Rules "|}"
  154             | "seq" Rules "endseq"
  155             | "{|" error "|}"
  156             | "seq" error "endseq"

  157 UpdateRule: DirectCallExpression ":=" Term

  158 CallRule: "call" DirectCallExpression
  159         | DirectCallExpression
  160         | "call" IndirectCallExpression
  161         | IndirectCallExpression

  162 Attribute: BasicAttribute
  163          | ExpressionAttribute

  164 Attributes: Attributes "," Attribute
  165           | Attribute

  166 BasicAttribute: Identifier

  167 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 6 44 84 111 139 151 152 155 156
"CASM" (258) 1
"init" (259) 21 22
"derived" (260) 30
"enum" (261) 31
"rule" (262) 120 121
"function" (263) 11
"initially" (264) 13
"defined" (265) 15
"seq" (266) 154 156
"endseq" (267) 154 156
"par" (268) 150 152
"endpar" (269) 150 152
"skip" (270) 135
"let" (271) 145
"in" (272) 118 119 145 146 147
"forall" (273) 118 146
"choose" (274) 147
"iterate" (275) 148
"do" (276) 146 147
"call" (277) 158 160
"if" (278) 117 136 137
"then" (279) 117 136 137
"else" (280) 117 137
"case" (281) 138 139
"of" (282) 138 139
"default" (283) 140
"holds" (284) 118
"exists" (285) 119
"with" (286) 119
"undef" (287) 64
"false" (288) 66
"true" (289) 65
"and" (290) 101
"or" (291) 99
"xor" (292) 100
"implies" (293) 103
"not" (294) 104
"+" (295) 85 87
"-" (296) 86 88
"=" (297) 30 31 94 120 121 145
"(" (298) 43 44 83 84 110 111 112 113 116
")" (299) 43 44 83 84 110 111 112 113 116
"[" (300) 7 105 106 107
"]" (301) 7 105 106 107
"{" (302) 13 15 22 31 138 139 149 151
"}" (303) 13 15 22 31 138 139 149 151
":" (304) 11 39 140 141 142
"_" (305) 141
"@" (306) 73
"," (307) 26 33 41 54 108 113 164
"<" (308) 51 52 95
">" (309) 51 52 96
"*" (310) 17 89 116
"/" (311) 90
"%" (312) 91
"^" (313) 92
"'" (314) 53
".." (315) 105
"." (316) 35 38
"->" (317) 11 24 25 30 52 121
"=>" (318) 102
":=" (319) 157
"!=" (320) 93
"<=" (321) 97
">=" (322) 98
"{|" (323) 153 155
"|}" (324) 153 155
"binary" (325) 68
"hexadecimal" (326) 69
"integer" (327) 70
"rational" (328) 72
"floating" (329) 71
"string" (330) 67
"identifier" (331) 32
ABSOLUTE_PATH (332)
UPLUS (333)
UMINUS (334)
CALL_WITHOUT_ARGS (335)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Specification (82)
    on left: 1, on right: 0
Definition (83)
    on left: 2 3 4 5 6, on right: 7 8
AttributedDefinition (84)
    on left: 7 8, on right: 9 10
Definitions (85)
    on left: 9 10, on right: 1 9
FunctionDefinition (86)
    on left: 11 12, on right: 2
MaybeInitially (87)
    on left: 13 14, on right: 11
MaybeDefined (88)
    on left: 15 16, on right: 11
FunctionParameters (89)
    on left: 17 18, on right: 17 19
MaybeFunctionParameters (90)
    on left: 19 20, on right: 11 52
ProgramFunctionDefinition (91)
    on left: 21 22, on right: 12
Initializer (92)
    on left: 23 24 25, on right: 26 27
Initializers (93)
    on left: 26 27, on right: 26 28
MaybeInitializers (94)
    on left: 28 29, on right: 13 22
DerivedDefinition (95)
    on left: 30, on right: 3
EnumerationDefinition (96)
    on left: 31, on right: 5
Identifier (97)
    on left: 32, on right: 11 30 31 33 34 35 36 39 40 120 121 166 167
Identifiers (98)
    on left: 33 34, on right: 31 33
DotSeparatedIdentifiers (99)
    on left: 35 36, on right: 35 37 38
IdentifierPath (100)
    on left: 37 38, on right: 21 50 51 52 53 73 114 115
Variable (101)
    on left: 39 40, on right: 41 42 118 119 145 146 147
Parameters (102)
    on left: 41 42, on right: 41 43
MaybeParameters (103)
    on left: 43 44 45, on right: 30 120 121
Type (104)
    on left: 46 47 48 49, on right: 11 17 18 30 39 52 54 55 121
BasicType (105)
    on left: 50, on right: 46
ComposedType (106)
    on left: 51, on right: 47
RelationType (107)
    on left: 52, on right: 48
FixedSizedType (108)
    on left: 53, on right: 49
Types (109)
    on left: 54 55, on right: 51 54
Atom (110)
    on left: 56 57 58 59 60 61 62 63, on right: 82
Undefined (111)
    on left: 64, on right: 62
Boolean (112)
    on left: 65 66, on right: 63
String (113)
    on left: 67, on right: 61
BitNumber (114)
    on left: 68 69, on right: 57
IntegerNumber (115)
    on left: 70, on right: 58
FloatingNumber (116)
    on left: 71, on right: 59
RationalNumber (117)
    on left: 72, on right: 60
Reference (118)
    on left: 73, on right: 56
Term (119)
    on left: 74 75 76 77 78 79 80 81 82, on right: 15 23 24 25 30 53
    83 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 108 109 113 116 117 118 119 136 137 138 139 142 145 146
    147 157 167
Expression (120)
    on left: 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104, on right: 79
Range (121)
    on left: 105, on right: 81
List (122)
    on left: 106 107, on right: 80
Terms (123)
    on left: 108 109, on right: 107 108 110 113
Arguments (124)
    on left: 110 111 112, on right: 115 116
TwoOrMoreArguments (125)
    on left: 113, on right: 25
DirectCallExpression (126)
    on left: 114 115, on right: 74 157 158 159
IndirectCallExpression (127)
    on left: 116, on right: 75 160 161
ConditionalExpression (128)
    on left: 117, on right: 76
UniversalQuantifierExpression (129)
    on left: 118, on right: 77
ExistentialQuantifierExpression (130)
    on left: 119, on right: 78
RuleDefinition (131)
    on left: 120 121, on right: 4
Rule (132)
    on left: 122 123 124 125 126 127 128 129 130 131 132, on right:
    120 121 133 134 136 137 140 141 142 145 146 147 148
Rules (133)
    on left: 133 134, on right: 133 149 150 153 154
SkipRule (134)
    on left: 135, on right: 122
ConditionalRule (135)
    on left: 136 137, on right: 123
CaseRule (136)
    on left: 138 139, on right: 124
CaseLabel (137)
    on left: 140 141 142, on right: 143 144
CaseLabels (138)
    on left: 143 144, on right: 138 143
LetRule (139)
    on left: 145, on right: 125
ForallRule (140)
    on left: 146, on right: 126
ChooseRule (141)
    on left: 147, on right: 127
IterateRule (142)
    on left: 148, on right: 128
BlockRule (143)
    on left: 149 150 151 152, on right: 129
SequenceRule (144)
    on left: 153 154 155 156, on right: 130
UpdateRule (145)
    on left: 157, on right: 131
CallRule (146)
    on left: 158 159 160 161, on right: 132
Attribute (147)
    on left: 162 163, on right: 164 165
Attributes (148)
    on left: 164 165, on right: 7 164
BasicAttribute (149)
    on left: 166, on right: 162
ExpressionAttribute (150)
    on left: 167, on right: 163


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    Definition                 go to state 10
    AttributedDefinition       go to state 11
    Definitions                go to state 12
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 18


State 3

    6 Definition: error .

    $default  reduce using rule 6 (Definition)


State 4

   21 ProgramFunctionDefinition: "init" . IdentifierPath
   22                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 19
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 24


State 5

   30 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 25


State 6

   31 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier  go to state 26


State 7

  120 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  121               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 27


State 8

   11 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 21

    Identifier  go to state 28


State 9

    7 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 30
    Attributes           go to state 31
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 10

    8 AttributedDefinition: Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 11

   10 Definitions: AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 12

    1 Specification: "CASM" Definitions .
    9 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8
    "["         shift, and go to state 9

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 10
    AttributedDefinition       go to state 34
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 13

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 14

   12 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 12 (FunctionDefinition)


State 15

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 16

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 17

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 18

    0 $accept: Specification "end of file" .

    $default  accept


State 19

   22 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 55
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 20

   38 IdentifierPath: "." . DotSeparatedIdentifiers

    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 76


State 21

   32 Identifier: "identifier" .

    $default  reduce using rule 32 (Identifier)


State 22

   36 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 36 (DotSeparatedIdentifiers)


State 23

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   37 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 77

    $default  reduce using rule 37 (IdentifierPath)


State 24

   21 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 25

   30 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 79


State 26

   31 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 80


State 27

  120 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  121               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 78

    $default  reduce using rule 45 (MaybeParameters)

    MaybeParameters  go to state 81


State 28

   11 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 82


State 29

  166 BasicAttribute: Identifier .
  167 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 166 (BasicAttribute)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 84
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 30

  165 Attributes: Attribute .

    $default  reduce using rule 165 (Attributes)


State 31

    7 AttributedDefinition: "[" Attributes . "]" Definition
  164 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 85
    ","  shift, and go to state 86


State 32

  162 Attribute: BasicAttribute .

    $default  reduce using rule 162 (Attribute)


State 33

  163 Attribute: ExpressionAttribute .

    $default  reduce using rule 163 (Attribute)


State 34

    9 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 35

  118 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 88


State 36

  117 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 89
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 37

  119 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 90


State 38

   64 Undefined: "undef" .

    $default  reduce using rule 64 (Undefined)


State 39

   66 Boolean: "false" .

    $default  reduce using rule 66 (Boolean)


State 40

   65 Boolean: "true" .

    $default  reduce using rule 65 (Boolean)


State 41

  104 Expression: "not" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 91
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 42

   85 Expression: "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 92
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 43

   86 Expression: "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 93
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 44

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  113 TwoOrMoreArguments: "(" . Term "," Terms ")"
  116 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 94
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 95
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 96
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 45

  105 Range: "[" . Term ".." Term "]"
  106 List: "[" . "]"
  107     | "[" . Terms "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "]"            shift, and go to state 97
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 98
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 99
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 46

   73 Reference: "@" . IdentifierPath

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 100


State 47

   68 BitNumber: "binary" .

    $default  reduce using rule 68 (BitNumber)


State 48

   69 BitNumber: "hexadecimal" .

    $default  reduce using rule 69 (BitNumber)


State 49

   70 IntegerNumber: "integer" .

    $default  reduce using rule 70 (IntegerNumber)


State 50

   72 RationalNumber: "rational" .

    $default  reduce using rule 72 (RationalNumber)


State 51

   71 FloatingNumber: "floating" .

    $default  reduce using rule 71 (FloatingNumber)


State 52

   67 String: "string" .

    $default  reduce using rule 67 (String)


State 53

   27 Initializers: Initializer .

    $default  reduce using rule 27 (Initializers)


State 54

   26 Initializers: Initializers . "," Initializer
   28 MaybeInitializers: Initializers .

    ","  shift, and go to state 101

    $default  reduce using rule 28 (MaybeInitializers)


State 55

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 102


State 56

  114 DirectCallExpression: IdentifierPath .
  115                     | IdentifierPath . Arguments

    "("  shift, and go to state 103

    $default  reduce using rule 114 (DirectCallExpression)

    Arguments  go to state 104


State 57

   82 Term: Atom .

    $default  reduce using rule 82 (Term)


State 58

   62 Atom: Undefined .

    $default  reduce using rule 62 (Atom)


State 59

   63 Atom: Boolean .

    $default  reduce using rule 63 (Atom)


State 60

   61 Atom: String .

    $default  reduce using rule 61 (Atom)


State 61

   57 Atom: BitNumber .

    $default  reduce using rule 57 (Atom)


State 62

   58 Atom: IntegerNumber .

    $default  reduce using rule 58 (Atom)


State 63

   59 Atom: FloatingNumber .

    $default  reduce using rule 59 (Atom)


State 64

   60 Atom: RationalNumber .

    $default  reduce using rule 60 (Atom)


State 65

   56 Atom: Reference .

    $default  reduce using rule 56 (Atom)


State 66

   23 Initializer: Term .
   24            | Term . "->" Term
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "->"       shift, and go to state 118
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 23 (Initializer)


State 67

   79 Term: Expression .

    $default  reduce using rule 79 (Term)


State 68

   81 Term: Range .

    $default  reduce using rule 81 (Term)


State 69

   80 Term: List .

    $default  reduce using rule 80 (Term)


State 70

   25 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 123


State 71

   74 Term: DirectCallExpression .

    $default  reduce using rule 74 (Term)


State 72

   75 Term: IndirectCallExpression .

    $default  reduce using rule 75 (Term)


State 73

   76 Term: ConditionalExpression .

    $default  reduce using rule 76 (Term)


State 74

   77 Term: UniversalQuantifierExpression .

    $default  reduce using rule 77 (Term)


State 75

   78 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 78 (Term)


State 76

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   38 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 38 (IdentifierPath)


State 77

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 124


State 78

   43 MaybeParameters: "(" . Parameters ")"
   44                | "(" . error ")"

    error         shift, and go to state 125
    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 126
    Parameters  go to state 127


State 79

   30 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 128


State 80

   31 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 129


State 81

  120 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  121               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 130
    "->"  shift, and go to state 131


State 82

   11 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 132
    MaybeFunctionParameters  go to state 133
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 135
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 83

   83 Expression: "(" . Term ")"
   84           | "(" . error ")"
  116 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 94
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "*"            shift, and go to state 95
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 140
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 84

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  167 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 167 (ExpressionAttribute)


State 85

    7 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "function"  shift, and go to state 8

    Definition                 go to state 141
    FunctionDefinition         go to state 13
    ProgramFunctionDefinition  go to state 14
    DerivedDefinition          go to state 15
    EnumerationDefinition      go to state 16
    RuleDefinition             go to state 17


State 86

  164 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 21

    Identifier           go to state 29
    Attribute            go to state 142
    BasicAttribute       go to state 32
    ExpressionAttribute  go to state 33


State 87

   39 Variable: Identifier . ":" Type
   40         | Identifier .

    ":"  shift, and go to state 143

    $default  reduce using rule 40 (Variable)


State 88

  118 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 144


State 89

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  117 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 145
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 90

  119 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 146


State 91

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  104           | "not" Term .

    $default  reduce using rule 104 (Expression)


State 92

   85 Expression: "+" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 85 (Expression)


State 93

   86 Expression: "-" Term .
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 86 (Expression)


State 94

   84 Expression: "(" error . ")"

    ")"  shift, and go to state 147


State 95

  116 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 148
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 96

   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  113 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 149
    ","        shift, and go to state 150
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 97

  106 List: "[" "]" .

    $default  reduce using rule 106 (List)


State 98

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 Range: "[" Term . ".." Term "]"
  109 Terms: Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    ".."       shift, and go to state 151
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 109 (Terms)


State 99

  107 List: "[" Terms . "]"
  108 Terms: Terms . "," Term

    "]"  shift, and go to state 152
    ","  shift, and go to state 153


State 100

   73 Reference: "@" IdentifierPath .

    $default  reduce using rule 73 (Reference)


State 101

   26 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Initializer                      go to state 154
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 102

   22 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 103

  110 Arguments: "(" . Terms ")"
  111          | "(" . error ")"
  112          | "(" . ")"

    error          shift, and go to state 155
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    ")"            shift, and go to state 156
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 157
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 158
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 104

  115 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 115 (DirectCallExpression)


State 105

  101 Expression: Term "and" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 159
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 106

   99 Expression: Term "or" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 160
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 107

  100 Expression: Term "xor" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 161
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 108

  103 Expression: Term "implies" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 162
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 109

   87 Expression: Term "+" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 163
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 110

   88 Expression: Term "-" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 164
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 111

   94 Expression: Term "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 165
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 112

   95 Expression: Term "<" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 166
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 113

   96 Expression: Term ">" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 167
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 114

   89 Expression: Term "*" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 168
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 115

   90 Expression: Term "/" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 169
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 116

   91 Expression: Term "%" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 170
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 117

   92 Expression: Term "^" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 171
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 118

   24 Initializer: Term "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 172
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 119

  102 Expression: Term "=>" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 173
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 120

   93 Expression: Term "!=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 174
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 121

   97 Expression: Term "<=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 175
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 122

   98 Expression: Term ">=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 176
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 123

   25 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 177
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 124

   35 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 35 (DotSeparatedIdentifiers)


State 125

   44 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 178


State 126

   42 Parameters: Variable .

    $default  reduce using rule 42 (Parameters)


State 127

   41 Parameters: Parameters . "," Variable
   43 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 179
    ","  shift, and go to state 180


State 128

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 181
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 129

   31 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 21

    Identifier   go to state 182
    Identifiers  go to state 183


State 130

  120 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 199
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 131

  121 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 211
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 132

   17 FunctionParameters: FunctionParameters . "*" Type
   19 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 212

    $default  reduce using rule 19 (MaybeFunctionParameters)


State 133

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 213


State 134

   50 BasicType: IdentifierPath .
   51 ComposedType: IdentifierPath . "<" Types ">"
   52 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   53 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 214
    "'"  shift, and go to state 215

    $default  reduce using rule 50 (BasicType)


State 135

   18 FunctionParameters: Type .

    $default  reduce using rule 18 (FunctionParameters)


State 136

   46 Type: BasicType .

    $default  reduce using rule 46 (Type)


State 137

   47 Type: ComposedType .

    $default  reduce using rule 47 (Type)


State 138

   48 Type: RelationType .

    $default  reduce using rule 48 (Type)


State 139

   49 Type: FixedSizedType .

    $default  reduce using rule 49 (Type)


State 140

   83 Expression: "(" Term . ")"
   87           | Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 149
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 141

    7 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 142

  164 Attributes: Attributes "," Attribute .

    $default  reduce using rule 164 (Attributes)


State 143

   39 Variable: Identifier ":" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 216
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 144

  118 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 217
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 145

  117 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 218
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 146

  119 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 219
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 147

   84 Expression: "(" error ")" .

    $default  reduce using rule 84 (Expression)


State 148

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  116 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ")"        shift, and go to state 220
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 149

   83 Expression: "(" Term ")" .

    $default  reduce using rule 83 (Expression)


State 150

  113 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 157
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    Terms                            go to state 221
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 151

  105 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 222
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 152

  107 List: "[" Terms "]" .

    $default  reduce using rule 107 (List)


State 153

  108 Terms: Terms "," . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 223
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 154

   26 Initializers: Initializers "," Initializer .

    $default  reduce using rule 26 (Initializers)


State 155

  111 Arguments: "(" error . ")"

    ")"  shift, and go to state 224


State 156

  112 Arguments: "(" ")" .

    $default  reduce using rule 112 (Arguments)


State 157

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  109 Terms: Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 109 (Terms)


State 158

  108 Terms: Terms . "," Term
  110 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 225
    ","  shift, and go to state 153


State 159

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  101           | Term "and" Term .
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "="   shift, and go to state 111
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "!="  shift, and go to state 120
    "<="  shift, and go to state 121
    ">="  shift, and go to state 122

    $default  reduce using rule 101 (Expression)


State 160

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
   99           | Term "or" Term .
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"  shift, and go to state 105
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 120
    "<="   shift, and go to state 121
    ">="   shift, and go to state 122

    $default  reduce using rule 99 (Expression)


State 161

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  100           | Term "xor" Term .
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"  shift, and go to state 105
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 120
    "<="   shift, and go to state 121
    ">="   shift, and go to state 122

    $default  reduce using rule 100 (Expression)


State 162

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  103           | Term "implies" Term .

    "and"  shift, and go to state 105
    "or"   shift, and go to state 106
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 120
    "<="   shift, and go to state 121
    ">="   shift, and go to state 122

    $default  reduce using rule 103 (Expression)


State 163

   87 Expression: Term . "+" Term
   87           | Term "+" Term .
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 87 (Expression)


State 164

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   88           | Term "-" Term .
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 88 (Expression)


State 165

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   94           | Term "=" Term .
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 121
    ">="  shift, and go to state 122

    $default  reduce using rule 94 (Expression)


State 166

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   95           | Term "<" Term .
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 95 (Expression)


State 167

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   96           | Term ">" Term .
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 96 (Expression)


State 168

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   89           | Term "*" Term .
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 89 (Expression)


State 169

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   90           | Term "/" Term .
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 90 (Expression)


State 170

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   91           | Term "%" Term .
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "^"  shift, and go to state 117

    $default  reduce using rule 91 (Expression)


State 171

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   92           | Term "^" Term .
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    $default  reduce using rule 92 (Expression)


State 172

   24 Initializer: Term "->" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 24 (Initializer)


State 173

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  102           | Term "=>" Term .
  103           | Term . "implies" Term

    "and"  shift, and go to state 105
    "or"   shift, and go to state 106
    "xor"  shift, and go to state 107
    "+"    shift, and go to state 109
    "-"    shift, and go to state 110
    "="    shift, and go to state 111
    "<"    shift, and go to state 112
    ">"    shift, and go to state 113
    "*"    shift, and go to state 114
    "/"    shift, and go to state 115
    "%"    shift, and go to state 116
    "^"    shift, and go to state 117
    "!="   shift, and go to state 120
    "<="   shift, and go to state 121
    ">="   shift, and go to state 122

    $default  reduce using rule 102 (Expression)


State 174

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   93           | Term "!=" Term .
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"   shift, and go to state 109
    "-"   shift, and go to state 110
    "<"   shift, and go to state 112
    ">"   shift, and go to state 113
    "*"   shift, and go to state 114
    "/"   shift, and go to state 115
    "%"   shift, and go to state 116
    "^"   shift, and go to state 117
    "<="  shift, and go to state 121
    ">="  shift, and go to state 122

    $default  reduce using rule 93 (Expression)


State 175

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   97           | Term "<=" Term .
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 97 (Expression)


State 176

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   98           | Term ">=" Term .
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "+"  shift, and go to state 109
    "-"  shift, and go to state 110
    "*"  shift, and go to state 114
    "/"  shift, and go to state 115
    "%"  shift, and go to state 116
    "^"  shift, and go to state 117

    $default  reduce using rule 98 (Expression)


State 177

   25 Initializer: TwoOrMoreArguments "->" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 25 (Initializer)


State 178

   44 MaybeParameters: "(" error ")" .

    $default  reduce using rule 44 (MaybeParameters)


State 179

   43 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 43 (MaybeParameters)


State 180

   41 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 226


State 181

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 227


State 182

   34 Identifiers: Identifier .

    $default  reduce using rule 34 (Identifiers)


State 183

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   33 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 228
    ","  shift, and go to state 229


State 184

  154 SequenceRule: "seq" . Rules "endseq"
  156             | "seq" . error "endseq"

    error         shift, and go to state 230
    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 231
    Rules                    go to state 232
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 185

  150 BlockRule: "par" . Rules "endpar"
  152          | "par" . error "endpar"

    error         shift, and go to state 233
    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 231
    Rules                    go to state 234
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 186

  135 SkipRule: "skip" .

    $default  reduce using rule 135 (SkipRule)


State 187

  145 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 235


State 188

  146 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 236


State 189

  147 ChooseRule: "choose" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 21

    Identifier  go to state 87
    Variable    go to state 237


State 190

  148 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 238
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 191

  158 CallRule: "call" . DirectCallExpression
  160         | "call" . IndirectCallExpression

    "("           shift, and go to state 194
    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 239
    IndirectCallExpression   go to state 240


State 192

  136 ConditionalRule: "if" . Term "then" Rule
  137                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 241
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 193

  138 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  139         | "case" . Term "of" "{" error "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 242
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 194

  116 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 95


State 195

  149 BlockRule: "{" . Rules "}"
  151          | "{" . error "}"

    error         shift, and go to state 243
    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 231
    Rules                    go to state 244
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 196

  153 SequenceRule: "{|" . Rules "|}"
  155             | "{|" . error "|}"

    error         shift, and go to state 245
    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 231
    Rules                    go to state 246
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 197

  157 UpdateRule: DirectCallExpression . ":=" Term
  159 CallRule: DirectCallExpression .

    ":="  shift, and go to state 247

    $default  reduce using rule 159 (CallRule)


State 198

  161 CallRule: IndirectCallExpression .

    $default  reduce using rule 161 (CallRule)


State 199

  120 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 120 (RuleDefinition)


State 200

  122 Rule: SkipRule .

    $default  reduce using rule 122 (Rule)


State 201

  123 Rule: ConditionalRule .

    $default  reduce using rule 123 (Rule)


State 202

  124 Rule: CaseRule .

    $default  reduce using rule 124 (Rule)


State 203

  125 Rule: LetRule .

    $default  reduce using rule 125 (Rule)


State 204

  126 Rule: ForallRule .

    $default  reduce using rule 126 (Rule)


State 205

  127 Rule: ChooseRule .

    $default  reduce using rule 127 (Rule)


State 206

  128 Rule: IterateRule .

    $default  reduce using rule 128 (Rule)


State 207

  129 Rule: BlockRule .

    $default  reduce using rule 129 (Rule)


State 208

  130 Rule: SequenceRule .

    $default  reduce using rule 130 (Rule)


State 209

  131 Rule: UpdateRule .

    $default  reduce using rule 131 (Rule)


State 210

  132 Rule: CallRule .

    $default  reduce using rule 132 (Rule)


State 211

  121 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 248


State 212

   17 FunctionParameters: FunctionParameters "*" . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 249
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 213

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 250
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 214

   51 ComposedType: IdentifierPath "<" . Types ">"
   52 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    $default  reduce using rule 20 (MaybeFunctionParameters)

    FunctionParameters       go to state 132
    MaybeFunctionParameters  go to state 251
    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 252
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139
    Types                    go to state 253


State 215

   53 FixedSizedType: IdentifierPath "'" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 254
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 216

   39 Variable: Identifier ":" Type .

    $default  reduce using rule 39 (Variable)


State 217

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  118 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 255
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 218

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  117 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 256
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 219

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  119 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 257
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 220

  116 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 103

    Arguments  go to state 258


State 221

  108 Terms: Terms . "," Term
  113 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 259
    ","  shift, and go to state 153


State 222

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  105 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "]"        shift, and go to state 260
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 223

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  108 Terms: Terms "," Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 108 (Terms)


State 224

  111 Arguments: "(" error ")" .

    $default  reduce using rule 111 (Arguments)


State 225

  110 Arguments: "(" Terms ")" .

    $default  reduce using rule 110 (Arguments)


State 226

   41 Parameters: Parameters "," Variable .

    $default  reduce using rule 41 (Parameters)


State 227

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 261
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 228

   31 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 31 (EnumerationDefinition)


State 229

   33 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 21

    Identifier  go to state 262


State 230

  156 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 263


State 231

  134 Rules: Rule .

    $default  reduce using rule 134 (Rules)


State 232

  133 Rules: Rules . Rule
  154 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 184
    "endseq"      shift, and go to state 264
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 265
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 233

  152 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 266


State 234

  133 Rules: Rules . Rule
  150 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "endpar"      shift, and go to state 267
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 265
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 235

  145 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 268


State 236

  146 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 269


State 237

  147 ChooseRule: "choose" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 270


State 238

  148 IterateRule: "iterate" Rule .

    $default  reduce using rule 148 (IterateRule)


State 239

  158 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 158 (CallRule)


State 240

  160 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 160 (CallRule)


State 241

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  136 ConditionalRule: "if" Term . "then" Rule
  137                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 271
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 242

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  138 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  139         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 272
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 243

  151 BlockRule: "{" error . "}"

    "}"  shift, and go to state 273


State 244

  133 Rules: Rules . Rule
  149 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "}"           shift, and go to state 274
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 265
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 245

  155 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 275


State 246

  133 Rules: Rules . Rule
  153 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "|}"          shift, and go to state 276
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 265
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 247

  157 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 277
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 248

  121 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 278
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 249

   17 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 17 (FunctionParameters)


State 250

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 279

    $default  reduce using rule 16 (MaybeDefined)

    MaybeDefined  go to state 280


State 251

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 281


State 252

   18 FunctionParameters: Type .
   55 Types: Type .

    ","       reduce using rule 55 (Types)
    ">"       reduce using rule 55 (Types)
    $default  reduce using rule 18 (FunctionParameters)


State 253

   51 ComposedType: IdentifierPath "<" Types . ">"
   54 Types: Types . "," Type

    ","  shift, and go to state 282
    ">"  shift, and go to state 283


State 254

   53 FixedSizedType: IdentifierPath "'" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "<"        shift, and go to state 112
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 53 (FixedSizedType)


State 255

  118 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 284
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 256

  117 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 285
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 257

  119 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 286
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 258

  116 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 116 (IndirectCallExpression)


State 259

  113 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 113 (TwoOrMoreArguments)


State 260

  105 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 105 (Range)


State 261

   30 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 30 (DerivedDefinition)


State 262

   33 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 33 (Identifiers)


State 263

  156 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 156 (SequenceRule)


State 264

  154 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 154 (SequenceRule)


State 265

  133 Rules: Rules Rule .

    $default  reduce using rule 133 (Rules)


State 266

  152 BlockRule: "par" error "endpar" .

    $default  reduce using rule 152 (BlockRule)


State 267

  150 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 150 (BlockRule)


State 268

  145 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 287
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 269

  146 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 288
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 270

  147 ChooseRule: "choose" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 289
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 271

  136 ConditionalRule: "if" Term "then" . Rule
  137                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 290
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 272

  138 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  139         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 291


State 273

  151 BlockRule: "{" error "}" .

    $default  reduce using rule 151 (BlockRule)


State 274

  149 BlockRule: "{" Rules "}" .

    $default  reduce using rule 149 (BlockRule)


State 275

  155 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 155 (SequenceRule)


State 276

  153 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 153 (SequenceRule)


State 277

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  157 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 157 (UpdateRule)


State 278

  121 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 121 (RuleDefinition)


State 279

   15 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 292


State 280

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 293

    $default  reduce using rule 14 (MaybeInitially)

    MaybeInitially  go to state 294


State 281

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 295
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 282

   54 Types: Types "," . Type

    "."           shift, and go to state 20
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 134
    Type                     go to state 296
    BasicType                go to state 136
    ComposedType             go to state 137
    RelationType             go to state 138
    FixedSizedType           go to state 139


State 283

   51 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 51 (ComposedType)


State 284

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  118 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 118 (UniversalQuantifierExpression)


State 285

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  117 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122

    $default  reduce using rule 117 (ConditionalExpression)


State 286

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  119 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 119 (ExistentialQuantifierExpression)


State 287

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  145 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 297
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 288

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  146 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 298
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 289

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  147 ChooseRule: "choose" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 299
    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 290

  136 ConditionalRule: "if" Term "then" Rule .
  137                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 300

    $default  reduce using rule 136 (ConditionalRule)


State 291

  138 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  139         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 301
    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 302
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 303
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 304
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 305
    CaseLabels                       go to state 306


State 292

   15 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 307
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 293

   13 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 308


State 294

   11 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 11 (FunctionDefinition)


State 295

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 309


State 296

   54 Types: Types "," Type .

    $default  reduce using rule 54 (Types)


State 297

  145 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 310
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 298

  146 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 311
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 299

  147 ChooseRule: "choose" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 312
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 300

  137 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 313
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 301

  139 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 314


State 302

  140 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 315


State 303

  141 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 316


State 304

   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term
  142 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    ":"        shift, and go to state 317
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 305

  143 CaseLabels: CaseLabel . CaseLabels
  144           | CaseLabel .

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "default"      shift, and go to state 302
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 83
    "["            shift, and go to state 45
    "_"            shift, and go to state 303
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 144 (CaseLabels)

    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 304
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75
    CaseLabel                        go to state 305
    CaseLabels                       go to state 318


State 306

  138 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 319


State 307

   15 MaybeDefined: "defined" "{" Term . "}"
   87 Expression: Term . "+" Term
   88           | Term . "-" Term
   89           | Term . "*" Term
   90           | Term . "/" Term
   91           | Term . "%" Term
   92           | Term . "^" Term
   93           | Term . "!=" Term
   94           | Term . "=" Term
   95           | Term . "<" Term
   96           | Term . ">" Term
   97           | Term . "<=" Term
   98           | Term . ">=" Term
   99           | Term . "or" Term
  100           | Term . "xor" Term
  101           | Term . "and" Term
  102           | Term . "=>" Term
  103           | Term . "implies" Term

    "and"      shift, and go to state 105
    "or"       shift, and go to state 106
    "xor"      shift, and go to state 107
    "implies"  shift, and go to state 108
    "+"        shift, and go to state 109
    "-"        shift, and go to state 110
    "="        shift, and go to state 111
    "}"        shift, and go to state 320
    "<"        shift, and go to state 112
    ">"        shift, and go to state 113
    "*"        shift, and go to state 114
    "/"        shift, and go to state 115
    "%"        shift, and go to state 116
    "^"        shift, and go to state 117
    "=>"       shift, and go to state 119
    "!="       shift, and go to state 120
    "<="       shift, and go to state 121
    ">="       shift, and go to state 122


State 308

   13 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 35
    "if"           shift, and go to state 36
    "exists"       shift, and go to state 37
    "undef"        shift, and go to state 38
    "false"        shift, and go to state 39
    "true"         shift, and go to state 40
    "not"          shift, and go to state 41
    "+"            shift, and go to state 42
    "-"            shift, and go to state 43
    "("            shift, and go to state 44
    "["            shift, and go to state 45
    "@"            shift, and go to state 46
    "."            shift, and go to state 20
    "binary"       shift, and go to state 47
    "hexadecimal"  shift, and go to state 48
    "integer"      shift, and go to state 49
    "rational"     shift, and go to state 50
    "floating"     shift, and go to state 51
    "string"       shift, and go to state 52
    "identifier"   shift, and go to state 21

    $default  reduce using rule 29 (MaybeInitializers)

    Initializer                      go to state 53
    Initializers                     go to state 54
    MaybeInitializers                go to state 321
    Identifier                       go to state 22
    DotSeparatedIdentifiers          go to state 23
    IdentifierPath                   go to state 56
    Atom                             go to state 57
    Undefined                        go to state 58
    Boolean                          go to state 59
    String                           go to state 60
    BitNumber                        go to state 61
    IntegerNumber                    go to state 62
    FloatingNumber                   go to state 63
    RationalNumber                   go to state 64
    Reference                        go to state 65
    Term                             go to state 66
    Expression                       go to state 67
    Range                            go to state 68
    List                             go to state 69
    TwoOrMoreArguments               go to state 70
    DirectCallExpression             go to state 71
    IndirectCallExpression           go to state 72
    ConditionalExpression            go to state 73
    UniversalQuantifierExpression    go to state 74
    ExistentialQuantifierExpression  go to state 75


State 309

   52 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 52 (RelationType)


State 310

  145 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 145 (LetRule)


State 311

  146 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 146 (ForallRule)


State 312

  147 ChooseRule: "choose" Variable "in" Term "do" Rule .

    $default  reduce using rule 147 (ChooseRule)


State 313

  137 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 137 (ConditionalRule)


State 314

  139 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 139 (CaseRule)


State 315

  140 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 322
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 316

  141 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 323
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 317

  142 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 184
    "par"         shift, and go to state 185
    "skip"        shift, and go to state 186
    "let"         shift, and go to state 187
    "forall"      shift, and go to state 188
    "choose"      shift, and go to state 189
    "iterate"     shift, and go to state 190
    "call"        shift, and go to state 191
    "if"          shift, and go to state 192
    "case"        shift, and go to state 193
    "("           shift, and go to state 194
    "{"           shift, and go to state 195
    "."           shift, and go to state 20
    "{|"          shift, and go to state 196
    "identifier"  shift, and go to state 21

    Identifier               go to state 22
    DotSeparatedIdentifiers  go to state 23
    IdentifierPath           go to state 56
    DirectCallExpression     go to state 197
    IndirectCallExpression   go to state 198
    Rule                     go to state 324
    SkipRule                 go to state 200
    ConditionalRule          go to state 201
    CaseRule                 go to state 202
    LetRule                  go to state 203
    ForallRule               go to state 204
    ChooseRule               go to state 205
    IterateRule              go to state 206
    BlockRule                go to state 207
    SequenceRule             go to state 208
    UpdateRule               go to state 209
    CallRule                 go to state 210


State 318

  143 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 143 (CaseLabels)


State 319

  138 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 138 (CaseRule)


State 320

   15 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 15 (MaybeDefined)


State 321

   13 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 325


State 322

  140 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 140 (CaseLabel)


State 323

  141 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 141 (CaseLabel)


State 324

  142 CaseLabel: Term ":" Rule .

    $default  reduce using rule 142 (CaseLabel)


State 325

   13 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 13 (MaybeInitially)
