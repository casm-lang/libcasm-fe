State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: Specification "end of file"

    1 Specification: Header Definitions

    2 Header: "[" Attributes "]" "CASM"
    3       | "CASM"

    4 Definitions: Definitions AttributedDefinition
    5            | AttributedDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition
    8                     | error

    9 Definition: EnumerationDefinition
   10           | DerivedDefinition
   11           | RuleDefinition
   12           | FunctionDefinition
   13           | UsingDefinition

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}"

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
   17               | "rule" Identifier MaybeParameters "->" Type "=" Rule

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   19                   | ProgramFunctionDefinition

   20 ProgramFunctionDefinition: "init" IdentifierPath
   21                          | "init" "{" MaybeInitializers "}"

   22 EnumeratorDefinition: Identifier
   23                     | "[" Attributes "]" Identifier
   24                     | error

   25 Enumerators: Enumerators "," EnumeratorDefinition
   26            | EnumeratorDefinition

   27 UsingDefinition: "using" Identifier "=" Type

   28 Rule: SkipRule
   29     | ConditionalRule
   30     | CaseRule
   31     | LetRule
   32     | ForallRule
   33     | ChooseRule
   34     | IterateRule
   35     | BlockRule
   36     | SequenceRule
   37     | UpdateRule
   38     | CallRule

   39 Rules: Rules Rule
   40      | Rule

   41 SkipRule: "skip"

   42 ConditionalRule: "if" Term "then" Rule
   43                | "if" Term "then" Rule "else" Rule

   44 CaseRule: "case" Term "of" "{" CaseLabels "}"
   45         | "case" Term "of" "{" error "}"

   46 CaseLabel: "default" ":" Rule
   47          | "_" ":" Rule
   48          | Term ":" Rule

   49 CaseLabels: CaseLabels CaseLabel
   50           | CaseLabel

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule
   53           | "forall" AttributedVariable "in" Term "with" Term "do" Rule

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

   55 IterateRule: "iterate" Rule

   56 BlockRule: "{" Rules "}"
   57          | "par" Rules "endpar"
   58          | "{" error "}"
   59          | "par" error "endpar"

   60 SequenceRule: "{|" Rules "|}"
   61             | "seq" Rules "endseq"
   62             | "{|" error "|}"
   63             | "seq" error "endseq"

   64 UpdateRule: DirectCallExpression ":=" Term

   65 CallRule: "call" DirectCallExpression
   66         | DirectCallExpression
   67         | "call" MethodCallExpression
   68         | MethodCallExpression
   69         | "call" IndirectCallExpression
   70         | IndirectCallExpression

   71 Terms: Terms "," Term
   72      | Term

   73 Term: SimpleOrClaspedTerm
   74     | TypeCastingExpression
   75     | OperatorExpression
   76     | LetExpression
   77     | ConditionalExpression
   78     | ChooseExpression
   79     | UniversalQuantifierExpression
   80     | ExistentialQuantifierExpression

   81 SimpleOrClaspedTerm: "(" Term ")"
   82                    | "(" error ")"
   83                    | DirectCallExpression
   84                    | MethodCallExpression
   85                    | IndirectCallExpression
   86                    | Literal

   87 OperatorExpression: "+" Term
   88                   | "-" Term
   89                   | Term "+" Term
   90                   | Term "-" Term
   91                   | Term "*" Term
   92                   | Term "/" Term
   93                   | Term "%" Term
   94                   | Term "^" Term
   95                   | Term "!=" Term
   96                   | Term "=" Term
   97                   | Term "<" Term
   98                   | Term ">" Term
   99                   | Term "<=" Term
  100                   | Term ">=" Term
  101                   | Term "or" Term
  102                   | Term "xor" Term
  103                   | Term "and" Term
  104                   | Term "=>" Term
  105                   | Term "implies" Term
  106                   | "not" Term

  107 DirectCallExpression: IdentifierPath
  108                     | IdentifierPath Arguments

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier
  110                     | SimpleOrClaspedTerm "." Identifier Arguments

  111 IndirectCallExpression: "(" "*" Term ")" Arguments

  112 TypeCastingExpression: Term "as" Type

  113 LetExpression: "let" AttributedVariable "=" Term "in" Term

  114 ConditionalExpression: "if" Term "then" Term "else" Term

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  118 Literal: UndefinedLiteral
  119        | BooleanLiteral
  120        | IntegerLiteral
  121        | RationalLiteral
  122        | DecimalLiteral
  123        | BinaryLiteral
  124        | StringLiteral
  125        | ReferenceLiteral
  126        | ListLiteral
  127        | RangeLiteral
  128        | TupleLiteral
  129        | NamedTupleLiteral

  130 UndefinedLiteral: "undef"

  131 BooleanLiteral: "true"
  132               | "false"

  133 IntegerLiteral: "integer"

  134 RationalLiteral: "rational"

  135 DecimalLiteral: "decimal"

  136 BinaryLiteral: "binary"
  137              | "hexadecimal"

  138 StringLiteral: "string"

  139 ReferenceLiteral: "@" IdentifierPath

  140 ListLiteral: "[" "]"
  141            | "[" Terms "]"
  142            | "[" error "]"

  143 RangeLiteral: "[" Term ".." Term "]"

  144 TupleLiteral: "(" Terms "," Term ")"

  145 NamedTupleLiteral: "(" Assignments ")"

  146 Assignments: Assignments "," Assignment
  147            | Assignment

  148 Assignment: Identifier ":" Term

  149 Types: Types "," Type
  150      | Type

  151 Type: BasicType
  152     | ComposedType
  153     | RelationType
  154     | FixedSizedType

  155 BasicType: IdentifierPath

  156 ComposedType: IdentifierPath "<" Types ">"

  157 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

  158 FixedSizedType: IdentifierPath "'" Term

  159 Arguments: "(" Terms ")"
  160          | "(" error ")"
  161          | "(" ")"

  162 FunctionParameters: FunctionParameters "*" Type
  163                   | Type

  164 MaybeFunctionParameters: FunctionParameters
  165                        | %empty

  166 Parameters: Parameters "," TypedAttributedVariable
  167           | TypedAttributedVariable

  168 MaybeParameters: "(" Parameters ")"
  169                | "(" error ")"
  170                | %empty

  171 MaybeDefined: "defined" "{" Term "}"
  172             | %empty

  173 MaybeInitially: "initially" "{" MaybeInitializers "}"
  174               | %empty

  175 Initializers: Initializers "," Initializer
  176             | Initializer

  177 Initializer: Term
  178            | Term "->" Term
  179            | TupleLiteral "->" Term

  180 MaybeInitializers: Initializers
  181                  | %empty

  182 Identifier: "identifier"
  183           | "in"

  184 IdentifierPath: DotSeparatedIdentifiers
  185               | "::" Identifier

  186 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier
  187                        | Identifier

  188 Variable: TypedVariable
  189         | Identifier

  190 TypedVariable: Identifier ":" Type

  191 AttributedVariable: "[" Attributes "]" Variable
  192                   | Variable

  193 TypedAttributedVariable: "[" Attributes "]" TypedVariable
  194                        | TypedVariable

  195 Attributes: Attributes "," Attribute
  196           | Attribute

  197 Attribute: BasicAttribute
  198          | ExpressionAttribute

  199 BasicAttribute: Identifier

  200 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 8 24 45 58 59 62 63 82 142 160 169
"CASM" (258) 2 3
"init" (259) 20 21
"derived" (260) 15
"enumeration" (261) 14
"rule" (262) 16 17
"using" (263) 27
"function" (264) 18
"initially" (265) 173
"defined" (266) 171
"seq" (267) 61 63
"endseq" (268) 61 63
"par" (269) 57 59
"endpar" (270) 57 59
"skip" (271) 41
"let" (272) 51 113
"in" (273) 51 52 53 54 113 115 116 117 183
"forall" (274) 52 53 116
"choose" (275) 54 115
"iterate" (276) 55
"do" (277) 52 53 54 115
"call" (278) 65 67 69
"if" (279) 42 43 114
"then" (280) 42 43 114
"else" (281) 43 114
"case" (282) 44 45
"of" (283) 44 45
"default" (284) 46
"holds" (285) 116
"exists" (286) 117
"with" (287) 53 117
"as" (288) 112
"undef" (289) 130
"false" (290) 132
"true" (291) 131
"and" (292) 103
"or" (293) 101
"xor" (294) 102
"implies" (295) 105
"not" (296) 106
"+" (297) 87 89
"-" (298) 88 90
"=" (299) 14 15 16 17 27 51 96 113
"(" (300) 81 82 111 144 145 159 160 161 168 169
")" (301) 81 82 111 144 145 159 160 161 168 169
"[" (302) 2 6 23 140 141 142 143 191 193
"]" (303) 2 6 23 140 141 142 143 191 193
"{" (304) 14 21 44 45 56 58 171 173
"}" (305) 14 21 44 45 56 58 171 173
":" (306) 18 46 47 48 148 190
"::" (307) 185 186
"_" (308) 47
"@" (309) 139
"," (310) 25 71 144 146 149 166 175 195
"<" (311) 97 156 157
">" (312) 98 156 157
"*" (313) 91 111 162
"/" (314) 92
"%" (315) 93
"^" (316) 94
"'" (317) 158
".." (318) 143
"." (319) 109 110
"->" (320) 15 17 18 157 178 179
"=>" (321) 104
":=" (322) 64
"!=" (323) 95
"<=" (324) 99
">=" (325) 100
"{|" (326) 60 62
"|}" (327) 60 62
"binary" (328) 136
"hexadecimal" (329) 137
"integer" (330) 133
"rational" (331) 134
"decimal" (332) 135
"string" (333) 138
"identifier" (334) 182
ABSOLUTE_PATH (335)
UPLUS (336)
UMINUS (337)
CALL_WITHOUT_ARGS (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
Specification (85)
    on left: 1, on right: 0
Header (86)
    on left: 2 3, on right: 1
Definitions (87)
    on left: 4 5, on right: 1 4
AttributedDefinition (88)
    on left: 6 7 8, on right: 4 5
Definition (89)
    on left: 9 10 11 12 13, on right: 6 7
EnumerationDefinition (90)
    on left: 14, on right: 9
DerivedDefinition (91)
    on left: 15, on right: 10
RuleDefinition (92)
    on left: 16 17, on right: 11
FunctionDefinition (93)
    on left: 18 19, on right: 12
ProgramFunctionDefinition (94)
    on left: 20 21, on right: 19
EnumeratorDefinition (95)
    on left: 22 23 24, on right: 25 26
Enumerators (96)
    on left: 25 26, on right: 14 25
UsingDefinition (97)
    on left: 27, on right: 13
Rule (98)
    on left: 28 29 30 31 32 33 34 35 36 37 38, on right: 16 17 39 40
    42 43 46 47 48 51 52 53 54 55
Rules (99)
    on left: 39 40, on right: 39 56 57 60 61
SkipRule (100)
    on left: 41, on right: 28
ConditionalRule (101)
    on left: 42 43, on right: 29
CaseRule (102)
    on left: 44 45, on right: 30
CaseLabel (103)
    on left: 46 47 48, on right: 49 50
CaseLabels (104)
    on left: 49 50, on right: 44 49
LetRule (105)
    on left: 51, on right: 31
ForallRule (106)
    on left: 52 53, on right: 32
ChooseRule (107)
    on left: 54, on right: 33
IterateRule (108)
    on left: 55, on right: 34
BlockRule (109)
    on left: 56 57 58 59, on right: 35
SequenceRule (110)
    on left: 60 61 62 63, on right: 36
UpdateRule (111)
    on left: 64, on right: 37
CallRule (112)
    on left: 65 66 67 68 69 70, on right: 38
Terms (113)
    on left: 71 72, on right: 71 141 144 159
Term (114)
    on left: 73 74 75 76 77 78 79 80, on right: 15 42 43 44 45 48 51
    52 53 54 64 71 72 81 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 111 112 113 114 115 116 117 143 144 148
    158 171 177 178 179 200
SimpleOrClaspedTerm (115)
    on left: 81 82 83 84 85 86, on right: 73 109 110
OperatorExpression (116)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 106, on right: 75
DirectCallExpression (117)
    on left: 107 108, on right: 64 65 66 83
MethodCallExpression (118)
    on left: 109 110, on right: 67 68 84
IndirectCallExpression (119)
    on left: 111, on right: 69 70 85
TypeCastingExpression (120)
    on left: 112, on right: 74
LetExpression (121)
    on left: 113, on right: 76
ConditionalExpression (122)
    on left: 114, on right: 77
ChooseExpression (123)
    on left: 115, on right: 78
UniversalQuantifierExpression (124)
    on left: 116, on right: 79
ExistentialQuantifierExpression (125)
    on left: 117, on right: 80
Literal (126)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129, on right:
    86
UndefinedLiteral (127)
    on left: 130, on right: 118
BooleanLiteral (128)
    on left: 131 132, on right: 119
IntegerLiteral (129)
    on left: 133, on right: 120
RationalLiteral (130)
    on left: 134, on right: 121
DecimalLiteral (131)
    on left: 135, on right: 122
BinaryLiteral (132)
    on left: 136 137, on right: 123
StringLiteral (133)
    on left: 138, on right: 124
ReferenceLiteral (134)
    on left: 139, on right: 125
ListLiteral (135)
    on left: 140 141 142, on right: 126
RangeLiteral (136)
    on left: 143, on right: 127
TupleLiteral (137)
    on left: 144, on right: 128 179
NamedTupleLiteral (138)
    on left: 145, on right: 129
Assignments (139)
    on left: 146 147, on right: 145 146
Assignment (140)
    on left: 148, on right: 146 147
Types (141)
    on left: 149 150, on right: 149 156
Type (142)
    on left: 151 152 153 154, on right: 15 17 18 27 112 149 150 157
    162 163 190
BasicType (143)
    on left: 155, on right: 151
ComposedType (144)
    on left: 156, on right: 152
RelationType (145)
    on left: 157, on right: 153
FixedSizedType (146)
    on left: 158, on right: 154
Arguments (147)
    on left: 159 160 161, on right: 108 110 111
FunctionParameters (148)
    on left: 162 163, on right: 162 164
MaybeFunctionParameters (149)
    on left: 164 165, on right: 18 157
Parameters (150)
    on left: 166 167, on right: 166 168
MaybeParameters (151)
    on left: 168 169 170, on right: 15 16 17
MaybeDefined (152)
    on left: 171 172, on right: 18
MaybeInitially (153)
    on left: 173 174, on right: 18
Initializers (154)
    on left: 175 176, on right: 175 180
Initializer (155)
    on left: 177 178 179, on right: 175 176
MaybeInitializers (156)
    on left: 180 181, on right: 21 173
Identifier (157)
    on left: 182 183, on right: 14 15 16 17 18 22 23 27 109 110 148
    185 186 187 189 190 199 200
IdentifierPath (158)
    on left: 184 185, on right: 20 107 108 139 155 156 157 158
DotSeparatedIdentifiers (159)
    on left: 186 187, on right: 184 186
Variable (160)
    on left: 188 189, on right: 191 192
TypedVariable (161)
    on left: 190, on right: 188 193 194
AttributedVariable (162)
    on left: 191 192, on right: 51 52 53 54 113 115 116 117
TypedAttributedVariable (163)
    on left: 193 194, on right: 166 167
Attributes (164)
    on left: 195 196, on right: 2 6 23 191 193 195
Attribute (165)
    on left: 197 198, on right: 195 196
BasicAttribute (166)
    on left: 199, on right: 197
ExpressionAttribute (167)
    on left: 200, on right: 198


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1
    "["     shift, and go to state 2

    Specification  go to state 3
    Header         go to state 4


State 1

    3 Header: "CASM" .

    $default  reduce using rule 3 (Header)


State 2

    2 Header: "[" . Attributes "]" "CASM"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 8
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 3

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 12


State 4

    1 Specification: Header . Definitions

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    Definitions                go to state 21
    AttributedDefinition       go to state 22
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 5

  183 Identifier: "in" .

    $default  reduce using rule 183 (Identifier)


State 6

  182 Identifier: "identifier" .

    $default  reduce using rule 182 (Identifier)


State 7

  199 BasicAttribute: Identifier .
  200 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 199 (BasicAttribute)

    Term                             go to state 51
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 8

    2 Header: "[" Attributes . "]" "CASM"
  195 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 9

  196 Attributes: Attribute .

    $default  reduce using rule 196 (Attributes)


State 10

  197 Attribute: BasicAttribute .

    $default  reduce using rule 197 (Attribute)


State 11

  198 Attribute: ExpressionAttribute .

    $default  reduce using rule 198 (Attribute)


State 12

    0 $accept: Specification "end of file" .

    $default  accept


State 13

    8 AttributedDefinition: error .

    $default  reduce using rule 8 (AttributedDefinition)


State 14

   20 ProgramFunctionDefinition: "init" . IdentifierPath
   21                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 5
    "{"           shift, and go to state 81
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 76
    IdentifierPath           go to state 82
    DotSeparatedIdentifiers  go to state 78


State 15

   15 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 83


State 16

   14 EnumerationDefinition: "enumeration" . Identifier "=" "{" Enumerators "}"

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 84


State 17

   16 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
   17               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 85


State 18

   27 UsingDefinition: "using" . Identifier "=" Type

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 86


State 19

   18 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 87


State 20

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 88
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 21

    1 Specification: Header Definitions .
    4 Definitions: Definitions . AttributedDefinition

    error          shift, and go to state 13
    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19
    "["            shift, and go to state 20

    "end of file"  reduce using rule 1 (Specification)

    AttributedDefinition       go to state 89
    Definition                 go to state 23
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 22

    5 Definitions: AttributedDefinition .

    $default  reduce using rule 5 (Definitions)


State 23

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 24

    9 Definition: EnumerationDefinition .

    $default  reduce using rule 9 (Definition)


State 25

   10 Definition: DerivedDefinition .

    $default  reduce using rule 10 (Definition)


State 26

   11 Definition: RuleDefinition .

    $default  reduce using rule 11 (Definition)


State 27

   12 Definition: FunctionDefinition .

    $default  reduce using rule 12 (Definition)


State 28

   19 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 19 (FunctionDefinition)


State 29

   13 Definition: UsingDefinition .

    $default  reduce using rule 13 (Definition)


State 30

  113 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 94


State 31

  116 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 95


State 32

  115 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 96


State 33

  114 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 97
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 34

  117 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 98


State 35

  130 UndefinedLiteral: "undef" .

    $default  reduce using rule 130 (UndefinedLiteral)


State 36

  132 BooleanLiteral: "false" .

    $default  reduce using rule 132 (BooleanLiteral)


State 37

  131 BooleanLiteral: "true" .

    $default  reduce using rule 131 (BooleanLiteral)


State 38

  106 OperatorExpression: "not" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 99
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 39

   87 OperatorExpression: "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 100
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 40

   88 OperatorExpression: "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 101
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 41

   81 SimpleOrClaspedTerm: "(" . Term ")"
   82                    | "(" . error ")"
  111 IndirectCallExpression: "(" . "*" Term ")" Arguments
  144 TupleLiteral: "(" . Terms "," Term ")"
  145 NamedTupleLiteral: "(" . Assignments ")"

    error          shift, and go to state 102
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "*"            shift, and go to state 103
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 104
    Term                             go to state 105
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Assignments                      go to state 106
    Assignment                       go to state 107
    Identifier                       go to state 108
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 42

  140 ListLiteral: "[" . "]"
  141            | "[" . Terms "]"
  142            | "[" . error "]"
  143 RangeLiteral: "[" . Term ".." Term "]"

    error          shift, and go to state 109
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "]"            shift, and go to state 110
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 111
    Term                             go to state 112
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 43

  185 IdentifierPath: "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 113


State 44

  139 ReferenceLiteral: "@" . IdentifierPath

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Identifier               go to state 76
    IdentifierPath           go to state 114
    DotSeparatedIdentifiers  go to state 78


State 45

  136 BinaryLiteral: "binary" .

    $default  reduce using rule 136 (BinaryLiteral)


State 46

  137 BinaryLiteral: "hexadecimal" .

    $default  reduce using rule 137 (BinaryLiteral)


State 47

  133 IntegerLiteral: "integer" .

    $default  reduce using rule 133 (IntegerLiteral)


State 48

  134 RationalLiteral: "rational" .

    $default  reduce using rule 134 (RationalLiteral)


State 49

  135 DecimalLiteral: "decimal" .

    $default  reduce using rule 135 (DecimalLiteral)


State 50

  138 StringLiteral: "string" .

    $default  reduce using rule 138 (StringLiteral)


State 51

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  200 ExpressionAttribute: Identifier Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 200 (ExpressionAttribute)


State 52

   73 Term: SimpleOrClaspedTerm .
  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 133

    $default  reduce using rule 73 (Term)


State 53

   75 Term: OperatorExpression .

    $default  reduce using rule 75 (Term)


State 54

   83 SimpleOrClaspedTerm: DirectCallExpression .

    $default  reduce using rule 83 (SimpleOrClaspedTerm)


State 55

   84 SimpleOrClaspedTerm: MethodCallExpression .

    $default  reduce using rule 84 (SimpleOrClaspedTerm)


State 56

   85 SimpleOrClaspedTerm: IndirectCallExpression .

    $default  reduce using rule 85 (SimpleOrClaspedTerm)


State 57

   74 Term: TypeCastingExpression .

    $default  reduce using rule 74 (Term)


State 58

   76 Term: LetExpression .

    $default  reduce using rule 76 (Term)


State 59

   77 Term: ConditionalExpression .

    $default  reduce using rule 77 (Term)


State 60

   78 Term: ChooseExpression .

    $default  reduce using rule 78 (Term)


State 61

   79 Term: UniversalQuantifierExpression .

    $default  reduce using rule 79 (Term)


State 62

   80 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 80 (Term)


State 63

   86 SimpleOrClaspedTerm: Literal .

    $default  reduce using rule 86 (SimpleOrClaspedTerm)


State 64

  118 Literal: UndefinedLiteral .

    $default  reduce using rule 118 (Literal)


State 65

  119 Literal: BooleanLiteral .

    $default  reduce using rule 119 (Literal)


State 66

  120 Literal: IntegerLiteral .

    $default  reduce using rule 120 (Literal)


State 67

  121 Literal: RationalLiteral .

    $default  reduce using rule 121 (Literal)


State 68

  122 Literal: DecimalLiteral .

    $default  reduce using rule 122 (Literal)


State 69

  123 Literal: BinaryLiteral .

    $default  reduce using rule 123 (Literal)


State 70

  124 Literal: StringLiteral .

    $default  reduce using rule 124 (Literal)


State 71

  125 Literal: ReferenceLiteral .

    $default  reduce using rule 125 (Literal)


State 72

  126 Literal: ListLiteral .

    $default  reduce using rule 126 (Literal)


State 73

  127 Literal: RangeLiteral .

    $default  reduce using rule 127 (Literal)


State 74

  128 Literal: TupleLiteral .

    $default  reduce using rule 128 (Literal)


State 75

  129 Literal: NamedTupleLiteral .

    $default  reduce using rule 129 (Literal)


State 76

  187 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 187 (DotSeparatedIdentifiers)


State 77

  107 DirectCallExpression: IdentifierPath .
  108                     | IdentifierPath . Arguments

    "("  shift, and go to state 134

    $default  reduce using rule 107 (DirectCallExpression)

    Arguments  go to state 135


State 78

  184 IdentifierPath: DotSeparatedIdentifiers .
  186 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "::" Identifier

    "::"  shift, and go to state 136

    $default  reduce using rule 184 (IdentifierPath)


State 79

    2 Header: "[" Attributes "]" . "CASM"

    "CASM"  shift, and go to state 137


State 80

  195 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attribute            go to state 138
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 81

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 181 (MaybeInitializers)

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializers                     go to state 141
    Initializer                      go to state 142
    MaybeInitializers                go to state 143
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 82

   20 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 83

   15 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 144

    $default  reduce using rule 170 (MaybeParameters)

    MaybeParameters  go to state 145


State 84

   14 EnumerationDefinition: "enumeration" Identifier . "=" "{" Enumerators "}"

    "="  shift, and go to state 146


State 85

   16 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
   17               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 144

    $default  reduce using rule 170 (MaybeParameters)

    MaybeParameters  go to state 147


State 86

   27 UsingDefinition: "using" Identifier . "=" Type

    "="  shift, and go to state 148


State 87

   18 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 149


State 88

    6 AttributedDefinition: "[" Attributes . "]" Definition
  195 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 150
    ","  shift, and go to state 80


State 89

    4 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 4 (Definitions)


State 90

  191 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 151
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 91

  189 Variable: Identifier .
  190 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 152

    $default  reduce using rule 189 (Variable)


State 92

  192 AttributedVariable: Variable .

    $default  reduce using rule 192 (AttributedVariable)


State 93

  188 Variable: TypedVariable .

    $default  reduce using rule 188 (Variable)


State 94

  113 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 153


State 95

  116 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 154


State 96

  115 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 155


State 97

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 156
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 98

  117 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 157


State 99

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  106                   | "not" Term .
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 106 (OperatorExpression)


State 100

   87 OperatorExpression: "+" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 87 (OperatorExpression)


State 101

   88 OperatorExpression: "-" Term .
   89                   | Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 88 (OperatorExpression)


State 102

   82 SimpleOrClaspedTerm: "(" error . ")"

    ")"  shift, and go to state 158


State 103

  111 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 159
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 104

   71 Terms: Terms . "," Term
  144 TupleLiteral: "(" Terms . "," Term ")"

    ","  shift, and go to state 160


State 105

   72 Terms: Term .
   81 SimpleOrClaspedTerm: "(" Term . ")"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 161
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 106

  145 NamedTupleLiteral: "(" Assignments . ")"
  146 Assignments: Assignments . "," Assignment

    ")"  shift, and go to state 162
    ","  shift, and go to state 163


State 107

  147 Assignments: Assignment .

    $default  reduce using rule 147 (Assignments)


State 108

  148 Assignment: Identifier . ":" Term
  187 DotSeparatedIdentifiers: Identifier .

    ":"  shift, and go to state 164

    $default  reduce using rule 187 (DotSeparatedIdentifiers)


State 109

  142 ListLiteral: "[" error . "]"

    "]"  shift, and go to state 165


State 110

  140 ListLiteral: "[" "]" .

    $default  reduce using rule 140 (ListLiteral)


State 111

   71 Terms: Terms . "," Term
  141 ListLiteral: "[" Terms . "]"

    "]"  shift, and go to state 166
    ","  shift, and go to state 167


State 112

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  143 RangeLiteral: "[" Term . ".." Term "]"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    ".."       shift, and go to state 168
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 113

  185 IdentifierPath: "::" Identifier .

    $default  reduce using rule 185 (IdentifierPath)


State 114

  139 ReferenceLiteral: "@" IdentifierPath .

    $default  reduce using rule 139 (ReferenceLiteral)


State 115

  112 TypeCastingExpression: Term "as" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 169
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 116

  103 OperatorExpression: Term "and" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 175
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 117

  101 OperatorExpression: Term "or" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 176
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 118

  102 OperatorExpression: Term "xor" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 177
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 119

  105 OperatorExpression: Term "implies" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 178
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 120

   89 OperatorExpression: Term "+" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 179
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 121

   90 OperatorExpression: Term "-" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 180
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 122

   96 OperatorExpression: Term "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 181
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 123

   97 OperatorExpression: Term "<" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 182
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 124

   98 OperatorExpression: Term ">" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 183
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 125

   91 OperatorExpression: Term "*" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 184
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 126

   92 OperatorExpression: Term "/" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 185
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 127

   93 OperatorExpression: Term "%" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 186
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 128

   94 OperatorExpression: Term "^" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 187
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 129

  104 OperatorExpression: Term "=>" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 188
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 130

   95 OperatorExpression: Term "!=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 189
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 131

   99 OperatorExpression: Term "<=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 190
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 132

  100 OperatorExpression: Term ">=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 191
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 133

  109 MethodCallExpression: SimpleOrClaspedTerm "." . Identifier
  110                     | SimpleOrClaspedTerm "." . Identifier Arguments

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 192


State 134

  159 Arguments: "(" . Terms ")"
  160          | "(" . error ")"
  161          | "(" . ")"

    error          shift, and go to state 193
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    ")"            shift, and go to state 194
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Terms                            go to state 195
    Term                             go to state 196
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 135

  108 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 108 (DirectCallExpression)


State 136

  186 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 197


State 137

    2 Header: "[" Attributes "]" "CASM" .

    $default  reduce using rule 2 (Header)


State 138

  195 Attributes: Attributes "," Attribute .

    $default  reduce using rule 195 (Attributes)


State 139

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  177 Initializer: Term .
  178            | Term . "->" Term

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "->"       shift, and go to state 198
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 177 (Initializer)


State 140

  128 Literal: TupleLiteral .
  179 Initializer: TupleLiteral . "->" Term

    "->"  shift, and go to state 199

    "->"      [reduce using rule 128 (Literal)]
    $default  reduce using rule 128 (Literal)


State 141

  175 Initializers: Initializers . "," Initializer
  180 MaybeInitializers: Initializers .

    ","  shift, and go to state 200

    $default  reduce using rule 180 (MaybeInitializers)


State 142

  176 Initializers: Initializer .

    $default  reduce using rule 176 (Initializers)


State 143

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 201


State 144

  168 MaybeParameters: "(" . Parameters ")"
  169                | "(" . error ")"

    error         shift, and go to state 202
    "in"          shift, and go to state 5
    "["           shift, and go to state 203
    "identifier"  shift, and go to state 6

    Parameters               go to state 204
    Identifier               go to state 205
    TypedVariable            go to state 206
    TypedAttributedVariable  go to state 207


State 145

   15 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 208


State 146

   14 EnumerationDefinition: "enumeration" Identifier "=" . "{" Enumerators "}"

    "{"  shift, and go to state 209


State 147

   16 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
   17               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 210
    "->"  shift, and go to state 211


State 148

   27 UsingDefinition: "using" Identifier "=" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 212
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 149

   18 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 165 (MaybeFunctionParameters)

    Type                     go to state 213
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    FunctionParameters       go to state 214
    MaybeFunctionParameters  go to state 215
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 150

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"         shift, and go to state 14
    "derived"      shift, and go to state 15
    "enumeration"  shift, and go to state 16
    "rule"         shift, and go to state 17
    "using"        shift, and go to state 18
    "function"     shift, and go to state 19

    Definition                 go to state 216
    EnumerationDefinition      go to state 24
    DerivedDefinition          go to state 25
    RuleDefinition             go to state 26
    FunctionDefinition         go to state 27
    ProgramFunctionDefinition  go to state 28
    UsingDefinition            go to state 29


State 151

  191 AttributedVariable: "[" Attributes . "]" Variable
  195 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 217
    ","  shift, and go to state 80


State 152

  190 TypedVariable: Identifier ":" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 218
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 153

  113 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 219
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 154

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 220
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 155

  115 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 221
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 156

  114 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 222
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 157

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 223
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 158

   82 SimpleOrClaspedTerm: "(" error ")" .

    $default  reduce using rule 82 (SimpleOrClaspedTerm)


State 159

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  111 IndirectCallExpression: "(" "*" Term . ")" Arguments
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 224
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 160

   71 Terms: Terms "," . Term
  144 TupleLiteral: "(" Terms "," . Term ")"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 225
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 161

   81 SimpleOrClaspedTerm: "(" Term ")" .

    $default  reduce using rule 81 (SimpleOrClaspedTerm)


State 162

  145 NamedTupleLiteral: "(" Assignments ")" .

    $default  reduce using rule 145 (NamedTupleLiteral)


State 163

  146 Assignments: Assignments "," . Assignment

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Assignment  go to state 226
    Identifier  go to state 227


State 164

  148 Assignment: Identifier ":" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 228
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 165

  142 ListLiteral: "[" error "]" .

    $default  reduce using rule 142 (ListLiteral)


State 166

  141 ListLiteral: "[" Terms "]" .

    $default  reduce using rule 141 (ListLiteral)


State 167

   71 Terms: Terms "," . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 229
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 168

  143 RangeLiteral: "[" Term ".." . Term "]"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 230
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 169

  112 TypeCastingExpression: Term "as" Type .

    $default  reduce using rule 112 (TypeCastingExpression)


State 170

  151 Type: BasicType .

    $default  reduce using rule 151 (Type)


State 171

  152 Type: ComposedType .

    $default  reduce using rule 152 (Type)


State 172

  153 Type: RelationType .

    $default  reduce using rule 153 (Type)


State 173

  154 Type: FixedSizedType .

    $default  reduce using rule 154 (Type)


State 174

  155 BasicType: IdentifierPath .
  156 ComposedType: IdentifierPath . "<" Types ">"
  157 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
  158 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 231
    "'"  shift, and go to state 232

    $default  reduce using rule 155 (BasicType)


State 175

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  103                   | Term "and" Term .
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "="   shift, and go to state 122
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "!="  shift, and go to state 130
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 103 (OperatorExpression)


State 176

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  101                   | Term "or" Term .
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 101 (OperatorExpression)


State 177

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  102                   | Term "xor" Term .
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 102 (OperatorExpression)


State 178

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  105                   | Term "implies" Term .
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "or"   shift, and go to state 117
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 105 (OperatorExpression)


State 179

   89 OperatorExpression: Term . "+" Term
   89                   | Term "+" Term .
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 89 (OperatorExpression)


State 180

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   90                   | Term "-" Term .
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 90 (OperatorExpression)


State 181

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   96                   | Term "=" Term .
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 96 (OperatorExpression)


State 182

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   97                   | Term "<" Term .
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 97 (OperatorExpression)


State 183

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   98                   | Term ">" Term .
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 98 (OperatorExpression)


State 184

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   91                   | Term "*" Term .
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 91 (OperatorExpression)


State 185

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   92                   | Term "/" Term .
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 92 (OperatorExpression)


State 186

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   93                   | Term "%" Term .
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "^"  shift, and go to state 128

    $default  reduce using rule 93 (OperatorExpression)


State 187

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   94                   | Term "^" Term .
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    $default  reduce using rule 94 (OperatorExpression)


State 188

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  104                   | Term "=>" Term .
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "and"  shift, and go to state 116
    "or"   shift, and go to state 117
    "xor"  shift, and go to state 118
    "+"    shift, and go to state 120
    "-"    shift, and go to state 121
    "="    shift, and go to state 122
    "<"    shift, and go to state 123
    ">"    shift, and go to state 124
    "*"    shift, and go to state 125
    "/"    shift, and go to state 126
    "%"    shift, and go to state 127
    "^"    shift, and go to state 128
    "!="   shift, and go to state 130
    "<="   shift, and go to state 131
    ">="   shift, and go to state 132

    $default  reduce using rule 104 (OperatorExpression)


State 189

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   95                   | Term "!=" Term .
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"   shift, and go to state 120
    "-"   shift, and go to state 121
    "<"   shift, and go to state 123
    ">"   shift, and go to state 124
    "*"   shift, and go to state 125
    "/"   shift, and go to state 126
    "%"   shift, and go to state 127
    "^"   shift, and go to state 128
    "<="  shift, and go to state 131
    ">="  shift, and go to state 132

    $default  reduce using rule 95 (OperatorExpression)


State 190

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
   99                   | Term "<=" Term .
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 99 (OperatorExpression)


State 191

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  100                   | Term ">=" Term .
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "+"  shift, and go to state 120
    "-"  shift, and go to state 121
    "*"  shift, and go to state 125
    "/"  shift, and go to state 126
    "%"  shift, and go to state 127
    "^"  shift, and go to state 128

    $default  reduce using rule 100 (OperatorExpression)


State 192

  109 MethodCallExpression: SimpleOrClaspedTerm "." Identifier .
  110                     | SimpleOrClaspedTerm "." Identifier . Arguments

    "("  shift, and go to state 134

    $default  reduce using rule 109 (MethodCallExpression)

    Arguments  go to state 233


State 193

  160 Arguments: "(" error . ")"

    ")"  shift, and go to state 234


State 194

  161 Arguments: "(" ")" .

    $default  reduce using rule 161 (Arguments)


State 195

   71 Terms: Terms . "," Term
  159 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 235
    ","  shift, and go to state 167


State 196

   72 Terms: Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 72 (Terms)


State 197

  186 DotSeparatedIdentifiers: DotSeparatedIdentifiers "::" Identifier .

    $default  reduce using rule 186 (DotSeparatedIdentifiers)


State 198

  178 Initializer: Term "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 236
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 199

  179 Initializer: TupleLiteral "->" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 237
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 200

  175 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializer                      go to state 238
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 201

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 202

  169 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 239


State 203

  193 TypedAttributedVariable: "[" . Attributes "]" TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 240
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 204

  166 Parameters: Parameters . "," TypedAttributedVariable
  168 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 241
    ","  shift, and go to state 242


State 205

  190 TypedVariable: Identifier . ":" Type

    ":"  shift, and go to state 152


State 206

  194 TypedAttributedVariable: TypedVariable .

    $default  reduce using rule 194 (TypedAttributedVariable)


State 207

  167 Parameters: TypedAttributedVariable .

    $default  reduce using rule 167 (Parameters)


State 208

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 243
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 209

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" . Enumerators "}"

    error         shift, and go to state 244
    "in"          shift, and go to state 5
    "["           shift, and go to state 245
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 246
    Enumerators           go to state 247
    Identifier            go to state 248


State 210

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 261
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 211

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 277
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 212

   27 UsingDefinition: "using" Identifier "=" Type .

    $default  reduce using rule 27 (UsingDefinition)


State 213

  163 FunctionParameters: Type .

    $default  reduce using rule 163 (FunctionParameters)


State 214

  162 FunctionParameters: FunctionParameters . "*" Type
  164 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 278

    $default  reduce using rule 164 (MaybeFunctionParameters)


State 215

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 279


State 216

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 217

  191 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 91
    Variable       go to state 280
    TypedVariable  go to state 93


State 218

  190 TypedVariable: Identifier ":" Type .

    $default  reduce using rule 190 (TypedVariable)


State 219

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 281
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 220

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 282
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 221

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 283
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 222

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 284
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 223

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 285
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 224

  111 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 134

    Arguments  go to state 286


State 225

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  144 TupleLiteral: "(" Terms "," Term . ")"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ")"        shift, and go to state 287
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 71 (Terms)


State 226

  146 Assignments: Assignments "," Assignment .

    $default  reduce using rule 146 (Assignments)


State 227

  148 Assignment: Identifier . ":" Term

    ":"  shift, and go to state 164


State 228

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  148 Assignment: Identifier ":" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 148 (Assignment)


State 229

   71 Terms: Terms "," Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 71 (Terms)


State 230

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  143 RangeLiteral: "[" Term ".." Term . "]"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "]"        shift, and go to state 288
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 231

  156 ComposedType: IdentifierPath "<" . Types ">"
  157 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    $default  reduce using rule 165 (MaybeFunctionParameters)

    Types                    go to state 289
    Type                     go to state 290
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    FunctionParameters       go to state 214
    MaybeFunctionParameters  go to state 291
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 232

  158 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 292
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 233

  110 MethodCallExpression: SimpleOrClaspedTerm "." Identifier Arguments .

    $default  reduce using rule 110 (MethodCallExpression)


State 234

  160 Arguments: "(" error ")" .

    $default  reduce using rule 160 (Arguments)


State 235

  159 Arguments: "(" Terms ")" .

    $default  reduce using rule 159 (Arguments)


State 236

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  178 Initializer: Term "->" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 178 (Initializer)


State 237

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  179 Initializer: TupleLiteral "->" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 179 (Initializer)


State 238

  175 Initializers: Initializers "," Initializer .

    $default  reduce using rule 175 (Initializers)


State 239

  169 MaybeParameters: "(" error ")" .

    $default  reduce using rule 169 (MaybeParameters)


State 240

  193 TypedAttributedVariable: "[" Attributes . "]" TypedVariable
  195 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 293
    ","  shift, and go to state 80


State 241

  168 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 168 (MaybeParameters)


State 242

  166 Parameters: Parameters "," . TypedAttributedVariable

    "in"          shift, and go to state 5
    "["           shift, and go to state 203
    "identifier"  shift, and go to state 6

    Identifier               go to state 205
    TypedVariable            go to state 206
    TypedAttributedVariable  go to state 294


State 243

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 295


State 244

   24 EnumeratorDefinition: error .

    $default  reduce using rule 24 (EnumeratorDefinition)


State 245

   23 EnumeratorDefinition: "[" . Attributes "]" Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier           go to state 7
    Attributes           go to state 296
    Attribute            go to state 9
    BasicAttribute       go to state 10
    ExpressionAttribute  go to state 11


State 246

   26 Enumerators: EnumeratorDefinition .

    $default  reduce using rule 26 (Enumerators)


State 247

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators . "}"
   25 Enumerators: Enumerators . "," EnumeratorDefinition

    "}"  shift, and go to state 297
    ","  shift, and go to state 298


State 248

   22 EnumeratorDefinition: Identifier .

    $default  reduce using rule 22 (EnumeratorDefinition)


State 249

   61 SequenceRule: "seq" . Rules "endseq"
   63             | "seq" . error "endseq"

    error          shift, and go to state 299
    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 300
    Rules                    go to state 301
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 250

   57 BlockRule: "par" . Rules "endpar"
   59          | "par" . error "endpar"

    error          shift, and go to state 302
    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 300
    Rules                    go to state 303
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 251

   41 SkipRule: "skip" .

    $default  reduce using rule 41 (SkipRule)


State 252

   51 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 304


State 253

   52 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule
   53           | "forall" . AttributedVariable "in" Term "with" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 305


State 254

   54 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 5
    "["           shift, and go to state 90
    "identifier"  shift, and go to state 6

    Identifier          go to state 91
    Variable            go to state 92
    TypedVariable       go to state 93
    AttributedVariable  go to state 306


State 255

   55 IterateRule: "iterate" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 307
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 256

   65 CallRule: "call" . DirectCallExpression
   67         | "call" . MethodCallExpression
   69         | "call" . IndirectCallExpression

    "in"           shift, and go to state 5
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 308
    MethodCallExpression     go to state 309
    IndirectCallExpression   go to state 310
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 257

   42 ConditionalRule: "if" . Term "then" Rule
   43                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 311
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 258

   44 CaseRule: "case" . Term "of" "{" CaseLabels "}"
   45         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 312
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 259

   56 BlockRule: "{" . Rules "}"
   58          | "{" . error "}"

    error          shift, and go to state 313
    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 300
    Rules                    go to state 314
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 260

   60 SequenceRule: "{|" . Rules "|}"
   62             | "{|" . error "|}"

    error          shift, and go to state 315
    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 300
    Rules                    go to state 316
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 261

   16 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 16 (RuleDefinition)


State 262

   28 Rule: SkipRule .

    $default  reduce using rule 28 (Rule)


State 263

   29 Rule: ConditionalRule .

    $default  reduce using rule 29 (Rule)


State 264

   30 Rule: CaseRule .

    $default  reduce using rule 30 (Rule)


State 265

   31 Rule: LetRule .

    $default  reduce using rule 31 (Rule)


State 266

   32 Rule: ForallRule .

    $default  reduce using rule 32 (Rule)


State 267

   33 Rule: ChooseRule .

    $default  reduce using rule 33 (Rule)


State 268

   34 Rule: IterateRule .

    $default  reduce using rule 34 (Rule)


State 269

   35 Rule: BlockRule .

    $default  reduce using rule 35 (Rule)


State 270

   36 Rule: SequenceRule .

    $default  reduce using rule 36 (Rule)


State 271

   37 Rule: UpdateRule .

    $default  reduce using rule 37 (Rule)


State 272

   38 Rule: CallRule .

    $default  reduce using rule 38 (Rule)


State 273

  109 MethodCallExpression: SimpleOrClaspedTerm . "." Identifier
  110                     | SimpleOrClaspedTerm . "." Identifier Arguments

    "."  shift, and go to state 133


State 274

   64 UpdateRule: DirectCallExpression . ":=" Term
   66 CallRule: DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    ":="  shift, and go to state 317

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 66 (CallRule)


State 275

   68 CallRule: MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 68 (CallRule)


State 276

   70 CallRule: IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 70 (CallRule)


State 277

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 318


State 278

  162 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 319
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 279

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 320
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 280

  191 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 191 (AttributedVariable)


State 281

  113 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 321
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 282

  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 322
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 283

  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 323
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 284

  114 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 324
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 285

  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 325
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 286

  111 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 111 (IndirectCallExpression)


State 287

  144 TupleLiteral: "(" Terms "," Term ")" .

    $default  reduce using rule 144 (TupleLiteral)


State 288

  143 RangeLiteral: "[" Term ".." Term "]" .

    $default  reduce using rule 143 (RangeLiteral)


State 289

  149 Types: Types . "," Type
  156 ComposedType: IdentifierPath "<" Types . ">"

    ","  shift, and go to state 326
    ">"  shift, and go to state 327


State 290

  150 Types: Type .
  163 FunctionParameters: Type .

    "*"       reduce using rule 163 (FunctionParameters)
    "->"      reduce using rule 163 (FunctionParameters)
    $default  reduce using rule 150 (Types)


State 291

  157 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 328


State 292

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  158 FixedSizedType: IdentifierPath "'" Term .

    $default  reduce using rule 158 (FixedSizedType)


State 293

  193 TypedAttributedVariable: "[" Attributes "]" . TypedVariable

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier     go to state 205
    TypedVariable  go to state 329


State 294

  166 Parameters: Parameters "," TypedAttributedVariable .

    $default  reduce using rule 166 (Parameters)


State 295

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 330
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 296

   23 EnumeratorDefinition: "[" Attributes . "]" Identifier
  195 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 331
    ","  shift, and go to state 80


State 297

   14 EnumerationDefinition: "enumeration" Identifier "=" "{" Enumerators "}" .

    $default  reduce using rule 14 (EnumerationDefinition)


State 298

   25 Enumerators: Enumerators "," . EnumeratorDefinition

    error         shift, and go to state 244
    "in"          shift, and go to state 5
    "["           shift, and go to state 245
    "identifier"  shift, and go to state 6

    EnumeratorDefinition  go to state 332
    Identifier            go to state 248


State 299

   63 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 333


State 300

   40 Rules: Rule .

    $default  reduce using rule 40 (Rules)


State 301

   39 Rules: Rules . Rule
   61 SequenceRule: "seq" Rules . "endseq"

    "seq"          shift, and go to state 249
    "endseq"       shift, and go to state 334
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 335
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 302

   59 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 336


State 303

   39 Rules: Rules . Rule
   57 BlockRule: "par" Rules . "endpar"

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "endpar"       shift, and go to state 337
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 335
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 304

   51 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 338


State 305

   52 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule
   53           | "forall" AttributedVariable . "in" Term "with" Term "do" Rule

    "in"  shift, and go to state 339


State 306

   54 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 340


State 307

   55 IterateRule: "iterate" Rule .

    $default  reduce using rule 55 (IterateRule)


State 308

   65 CallRule: "call" DirectCallExpression .
   83 SimpleOrClaspedTerm: DirectCallExpression .

    "."       reduce using rule 83 (SimpleOrClaspedTerm)
    $default  reduce using rule 65 (CallRule)


State 309

   67 CallRule: "call" MethodCallExpression .
   84 SimpleOrClaspedTerm: MethodCallExpression .

    "."       reduce using rule 84 (SimpleOrClaspedTerm)
    $default  reduce using rule 67 (CallRule)


State 310

   69 CallRule: "call" IndirectCallExpression .
   85 SimpleOrClaspedTerm: IndirectCallExpression .

    "."       reduce using rule 85 (SimpleOrClaspedTerm)
    $default  reduce using rule 69 (CallRule)


State 311

   42 ConditionalRule: "if" Term . "then" Rule
   43                | "if" Term . "then" Rule "else" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "then"     shift, and go to state 341
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 312

   44 CaseRule: "case" Term . "of" "{" CaseLabels "}"
   45         | "case" Term . "of" "{" error "}"
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "of"       shift, and go to state 342
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 313

   58 BlockRule: "{" error . "}"

    "}"  shift, and go to state 343


State 314

   39 Rules: Rules . Rule
   56 BlockRule: "{" Rules . "}"

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "}"            shift, and go to state 344
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 335
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 315

   62 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 345


State 316

   39 Rules: Rules . Rule
   60 SequenceRule: "{|" Rules . "|}"

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "|}"           shift, and go to state 346
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 335
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 317

   64 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 347
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 318

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 348
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 319

  162 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 162 (FunctionParameters)


State 320

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 349

    $default  reduce using rule 172 (MaybeDefined)

    MaybeDefined  go to state 350


State 321

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  113 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 113 (LetExpression)


State 322

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  116 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 116 (UniversalQuantifierExpression)


State 323

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  115 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 115 (ChooseExpression)


State 324

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  114 ConditionalExpression: "if" Term "then" Term "else" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 114 (ConditionalExpression)


State 325

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  117 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 117 (ExistentialQuantifierExpression)


State 326

  149 Types: Types "," . Type

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 351
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 327

  156 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 156 (ComposedType)


State 328

  157 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 5
    "::"          shift, and go to state 43
    "identifier"  shift, and go to state 6

    Type                     go to state 352
    BasicType                go to state 170
    ComposedType             go to state 171
    RelationType             go to state 172
    FixedSizedType           go to state 173
    Identifier               go to state 76
    IdentifierPath           go to state 174
    DotSeparatedIdentifiers  go to state 78


State 329

  193 TypedAttributedVariable: "[" Attributes "]" TypedVariable .

    $default  reduce using rule 193 (TypedAttributedVariable)


State 330

   15 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 15 (DerivedDefinition)


State 331

   23 EnumeratorDefinition: "[" Attributes "]" . Identifier

    "in"          shift, and go to state 5
    "identifier"  shift, and go to state 6

    Identifier  go to state 353


State 332

   25 Enumerators: Enumerators "," EnumeratorDefinition .

    $default  reduce using rule 25 (Enumerators)


State 333

   63 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 63 (SequenceRule)


State 334

   61 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 61 (SequenceRule)


State 335

   39 Rules: Rules Rule .

    $default  reduce using rule 39 (Rules)


State 336

   59 BlockRule: "par" error "endpar" .

    $default  reduce using rule 59 (BlockRule)


State 337

   57 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 57 (BlockRule)


State 338

   51 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 354
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 339

   52 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule
   53           | "forall" AttributedVariable "in" . Term "with" Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 355
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 340

   54 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 356
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 341

   42 ConditionalRule: "if" Term "then" . Rule
   43                | "if" Term "then" . Rule "else" Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 357
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 342

   44 CaseRule: "case" Term "of" . "{" CaseLabels "}"
   45         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 358


State 343

   58 BlockRule: "{" error "}" .

    $default  reduce using rule 58 (BlockRule)


State 344

   56 BlockRule: "{" Rules "}" .

    $default  reduce using rule 56 (BlockRule)


State 345

   62 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 62 (SequenceRule)


State 346

   60 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 60 (SequenceRule)


State 347

   64 UpdateRule: DirectCallExpression ":=" Term .
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132

    $default  reduce using rule 64 (UpdateRule)


State 348

   17 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 17 (RuleDefinition)


State 349

  171 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 359


State 350

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 360

    $default  reduce using rule 174 (MaybeInitially)

    MaybeInitially  go to state 361


State 351

  149 Types: Types "," Type .

    $default  reduce using rule 149 (Types)


State 352

  157 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 362


State 353

   23 EnumeratorDefinition: "[" Attributes "]" Identifier .

    $default  reduce using rule 23 (EnumeratorDefinition)


State 354

   51 LetRule: "let" AttributedVariable "=" Term . "in" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "in"       shift, and go to state 363
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 355

   52 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule
   53           | "forall" AttributedVariable "in" Term . "with" Term "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 364
    "with"     shift, and go to state 365
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 356

   54 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 366
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 357

   42 ConditionalRule: "if" Term "then" Rule .
   43                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 367

    $default  reduce using rule 42 (ConditionalRule)


State 358

   44 CaseRule: "case" Term "of" "{" . CaseLabels "}"
   45         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 368
    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 369
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "_"            shift, and go to state 370
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 371
    CaseLabels                       go to state 372
    Term                             go to state 373
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 359

  171 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 374
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 360

  173 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 375


State 361

   18 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 18 (FunctionDefinition)


State 362

  157 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 157 (RelationType)


State 363

   51 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 376
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 364

   52 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 377
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 365

   53 ForallRule: "forall" AttributedVariable "in" Term "with" . Term "do" Rule

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Term                             go to state 378
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 366

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 379
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 367

   43 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 380
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 368

   45 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 381


State 369

   46 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 382


State 370

   47 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 383


State 371

   50 CaseLabels: CaseLabel .

    $default  reduce using rule 50 (CaseLabels)


State 372

   44 CaseRule: "case" Term "of" "{" CaseLabels . "}"
   49 CaseLabels: CaseLabels . CaseLabel

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "default"      shift, and go to state 369
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "}"            shift, and go to state 384
    "::"           shift, and go to state 43
    "_"            shift, and go to state 370
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    CaseLabel                        go to state 385
    Term                             go to state 373
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 74
    NamedTupleLiteral                go to state 75
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 373

   48 CaseLabel: Term . ":" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    ":"        shift, and go to state 386
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 374

   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type
  171 MaybeDefined: "defined" "{" Term . "}"

    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "}"        shift, and go to state 387
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 375

  173 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 30
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 31
    "choose"       shift, and go to state 32
    "if"           shift, and go to state 33
    "exists"       shift, and go to state 34
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "not"          shift, and go to state 38
    "+"            shift, and go to state 39
    "-"            shift, and go to state 40
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    $default  reduce using rule 181 (MaybeInitializers)

    Term                             go to state 139
    SimpleOrClaspedTerm              go to state 52
    OperatorExpression               go to state 53
    DirectCallExpression             go to state 54
    MethodCallExpression             go to state 55
    IndirectCallExpression           go to state 56
    TypeCastingExpression            go to state 57
    LetExpression                    go to state 58
    ConditionalExpression            go to state 59
    ChooseExpression                 go to state 60
    UniversalQuantifierExpression    go to state 61
    ExistentialQuantifierExpression  go to state 62
    Literal                          go to state 63
    UndefinedLiteral                 go to state 64
    BooleanLiteral                   go to state 65
    IntegerLiteral                   go to state 66
    RationalLiteral                  go to state 67
    DecimalLiteral                   go to state 68
    BinaryLiteral                    go to state 69
    StringLiteral                    go to state 70
    ReferenceLiteral                 go to state 71
    ListLiteral                      go to state 72
    RangeLiteral                     go to state 73
    TupleLiteral                     go to state 140
    NamedTupleLiteral                go to state 75
    Initializers                     go to state 141
    Initializer                      go to state 142
    MaybeInitializers                go to state 388
    Identifier                       go to state 76
    IdentifierPath                   go to state 77
    DotSeparatedIdentifiers          go to state 78


State 376

   51 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 51 (LetRule)


State 377

   52 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 52 (ForallRule)


State 378

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term . "do" Rule
   89 OperatorExpression: Term . "+" Term
   90                   | Term . "-" Term
   91                   | Term . "*" Term
   92                   | Term . "/" Term
   93                   | Term . "%" Term
   94                   | Term . "^" Term
   95                   | Term . "!=" Term
   96                   | Term . "=" Term
   97                   | Term . "<" Term
   98                   | Term . ">" Term
   99                   | Term . "<=" Term
  100                   | Term . ">=" Term
  101                   | Term . "or" Term
  102                   | Term . "xor" Term
  103                   | Term . "and" Term
  104                   | Term . "=>" Term
  105                   | Term . "implies" Term
  112 TypeCastingExpression: Term . "as" Type

    "do"       shift, and go to state 389
    "as"       shift, and go to state 115
    "and"      shift, and go to state 116
    "or"       shift, and go to state 117
    "xor"      shift, and go to state 118
    "implies"  shift, and go to state 119
    "+"        shift, and go to state 120
    "-"        shift, and go to state 121
    "="        shift, and go to state 122
    "<"        shift, and go to state 123
    ">"        shift, and go to state 124
    "*"        shift, and go to state 125
    "/"        shift, and go to state 126
    "%"        shift, and go to state 127
    "^"        shift, and go to state 128
    "=>"       shift, and go to state 129
    "!="       shift, and go to state 130
    "<="       shift, and go to state 131
    ">="       shift, and go to state 132


State 379

   54 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 54 (ChooseRule)


State 380

   43 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 43 (ConditionalRule)


State 381

   45 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 45 (CaseRule)


State 382

   46 CaseLabel: "default" ":" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 390
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 383

   47 CaseLabel: "_" ":" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 391
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 384

   44 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 44 (CaseRule)


State 385

   49 CaseLabels: CaseLabels CaseLabel .

    $default  reduce using rule 49 (CaseLabels)


State 386

   48 CaseLabel: Term ":" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 392
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 387

  171 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 171 (MaybeDefined)


State 388

  173 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 393


State 389

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" . Rule

    "seq"          shift, and go to state 249
    "par"          shift, and go to state 250
    "skip"         shift, and go to state 251
    "let"          shift, and go to state 252
    "in"           shift, and go to state 5
    "forall"       shift, and go to state 253
    "choose"       shift, and go to state 254
    "iterate"      shift, and go to state 255
    "call"         shift, and go to state 256
    "if"           shift, and go to state 257
    "case"         shift, and go to state 258
    "undef"        shift, and go to state 35
    "false"        shift, and go to state 36
    "true"         shift, and go to state 37
    "("            shift, and go to state 41
    "["            shift, and go to state 42
    "{"            shift, and go to state 259
    "::"           shift, and go to state 43
    "@"            shift, and go to state 44
    "{|"           shift, and go to state 260
    "binary"       shift, and go to state 45
    "hexadecimal"  shift, and go to state 46
    "integer"      shift, and go to state 47
    "rational"     shift, and go to state 48
    "decimal"      shift, and go to state 49
    "string"       shift, and go to state 50
    "identifier"   shift, and go to state 6

    Rule                     go to state 394
    SkipRule                 go to state 262
    ConditionalRule          go to state 263
    CaseRule                 go to state 264
    LetRule                  go to state 265
    ForallRule               go to state 266
    ChooseRule               go to state 267
    IterateRule              go to state 268
    BlockRule                go to state 269
    SequenceRule             go to state 270
    UpdateRule               go to state 271
    CallRule                 go to state 272
    SimpleOrClaspedTerm      go to state 273
    DirectCallExpression     go to state 274
    MethodCallExpression     go to state 275
    IndirectCallExpression   go to state 276
    Literal                  go to state 63
    UndefinedLiteral         go to state 64
    BooleanLiteral           go to state 65
    IntegerLiteral           go to state 66
    RationalLiteral          go to state 67
    DecimalLiteral           go to state 68
    BinaryLiteral            go to state 69
    StringLiteral            go to state 70
    ReferenceLiteral         go to state 71
    ListLiteral              go to state 72
    RangeLiteral             go to state 73
    TupleLiteral             go to state 74
    NamedTupleLiteral        go to state 75
    Identifier               go to state 76
    IdentifierPath           go to state 77
    DotSeparatedIdentifiers  go to state 78


State 390

   46 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 46 (CaseLabel)


State 391

   47 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 47 (CaseLabel)


State 392

   48 CaseLabel: Term ":" Rule .

    $default  reduce using rule 48 (CaseLabel)


State 393

  173 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 173 (MaybeInitially)


State 394

   53 ForallRule: "forall" AttributedVariable "in" Term "with" Term "do" Rule .

    $default  reduce using rule 53 (ForallRule)
