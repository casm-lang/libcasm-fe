Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition

    6 AttributedDefinition: "[" Attributes "]" Definition
    7                     | Definition

    8 Definitions: Definitions AttributedDefinition
    9            | AttributedDefinition

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   11                   | ProgramFunctionDefinition

   12 MaybeInitially: "initially" "{" MaybeInitializers "}"
   13               | %empty

   14 MaybeDefined: "defined" "{" Term "}"
   15             | %empty

   16 FunctionParameters: FunctionParameters "*" Type
   17                   | Type

   18 MaybeFunctionParameters: FunctionParameters
   19                        | %empty

   20 ProgramFunctionDefinition: "init" Identifier
   21                          | "init" "{" MaybeInitializers "}"

   22 Initializer: Term
   23            | Term "->" Term
   24            | TwoOrMoreArguments "->" Term

   25 Initializers: Initializers "," Initializer
   26             | Initializer

   27 MaybeInitializers: Initializers
   28                  | %empty

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   31 Identifier: "identifier"

   32 Identifiers: Identifiers "," Identifier
   33            | Identifier

   34 Variable: Identifier ":" Type
   35         | Identifier

   36 Parameters: Parameters "," Variable
   37           | Variable

   38 MaybeParameters: "(" Parameters ")"
   39                | %empty

   40 Type: BasicType
   41     | ComposedType
   42     | FixedSizedType

   43 BasicType: Identifier

   44 ComposedType: Identifier "<" Types ">"

   45 FixedSizedType: Identifier "'" Term

   46 Types: Types "," Type
   47      | Type

   48 Atom: RuleReference
   49     | BitNumber
   50     | IntegerNumber
   51     | FloatingNumber
   52     | RationalNumber
   53     | String
   54     | Undefined
   55     | Boolean

   56 Undefined: "undef"

   57 Boolean: "true"
   58        | "false"

   59 String: "string"

   60 BitNumber: "binary"
   61          | "hexadecimal"

   62 IntegerNumber: "integer"

   63 FloatingNumber: "floating"

   64 RationalNumber: "rational"

   65 RuleReference: "@" "identifier"

   66 Term: DirectCallExpression
   67     | IndirectCallExpression
   68     | ConditionalExpression
   69     | UniversalQuantifierExpression
   70     | ExistentialQuantifierExpression
   71     | Expression
   72     | List
   73     | Range
   74     | Atom

   75 Expression: "(" Term ")"
   76           | "+" Term
   77           | "-" Term
   78           | Term "+" Term
   79           | Term "-" Term
   80           | Term "*" Term
   81           | Term "/" Term
   82           | Term "%" Term
   83           | Term "^" Term
   84           | Term "!=" Term
   85           | Term "=" Term
   86           | Term "<" Term
   87           | Term ">" Term
   88           | Term "<=" Term
   89           | Term ">=" Term
   90           | Term "or" Term
   91           | Term "xor" Term
   92           | Term "and" Term
   93           | Term "implies" Term
   94           | "not" Term

   95 Range: "[" Term ".." Term "]"

   96 List: "[" "]"
   97     | "[" Terms "]"

   98 Terms: Terms "," Term
   99      | Term

  100 Arguments: "(" Terms ")"
  101          | "(" ")"

  102 TwoOrMoreArguments: "(" Term "," Terms ")"

  103 DirectCallExpression: Identifier
  104                     | Identifier Arguments

  105 IndirectCallExpression: "(" "*" Term ")" Arguments

  106 ConditionalExpression: "if" Term "then" Term "else" Term

  107 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term

  108 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term

  109 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  110               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  111 Rule: SkipRule
  112     | ConditionalRule
  113     | CaseRule
  114     | LetRule
  115     | ForallRule
  116     | IterateRule
  117     | BlockRule
  118     | SequenceRule
  119     | UpdateRule
  120     | CallRule

  121 Rules: Rules Rule
  122      | Rule

  123 SkipRule: "skip"

  124 ConditionalRule: "if" Term "then" Rule
  125                | "if" Term "then" Rule "else" Rule

  126 CaseRule: "case" Term "of" "{" CaseLabels "}"

  127 CaseLabel: "default" ":" Rule
  128          | "_" ":" Rule
  129          | Term ":" Rule

  130 CaseLabels: CaseLabel CaseLabels
  131           | CaseLabel

  132 LetRule: "let" Variable "=" Term "in" Rule

  133 ForallRule: "forall" Variable "in" Term "do" Rule

  134 IterateRule: "iterate" Rule

  135 BlockRule: "{" Rules "}"
  136          | "par" Rules "endpar"

  137 SequenceRule: "{|" Rules "|}"
  138             | "seq" Rules "endseq"

  139 UpdateRule: DirectCallExpression ":=" Term

  140 CallRule: "call" DirectCallExpression
  141         | DirectCallExpression
  142         | "call" IndirectCallExpression
  143         | IndirectCallExpression

  144 Attribute: BasicAttribute
  145          | ExpressionAttribute

  146 Attributes: Attributes "," Attribute
  147           | Attribute

  148 BasicAttribute: Identifier

  149 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"CASM" (258) 1
"init" (259) 20 21
"derived" (260) 29
"enum" (261) 30
"rule" (262) 109 110
"function" (263) 10
"initially" (264) 12
"defined" (265) 14
"seq" (266) 138
"endseq" (267) 138
"par" (268) 136
"endpar" (269) 136
"skip" (270) 123
"let" (271) 132
"in" (272) 107 108 132 133
"forall" (273) 107 133
"iterate" (274) 134
"do" (275) 133
"call" (276) 140 142
"if" (277) 106 124 125
"then" (278) 106 124 125
"else" (279) 106 125
"case" (280) 126
"of" (281) 126
"default" (282) 127
"holds" (283) 107
"exists" (284) 108
"with" (285) 108
"undef" (286) 56
"false" (287) 58
"true" (288) 57
"and" (289) 92
"or" (290) 90
"xor" (291) 91
"implies" (292) 93
"not" (293) 94
"+" (294) 76 78
"-" (295) 77 79
"=" (296) 29 30 85 109 110 132
"(" (297) 38 75 100 101 102 105
")" (298) 38 75 100 101 102 105
"[" (299) 6 95 96 97
"]" (300) 6 95 96 97
"{" (301) 12 14 21 30 126 135
"}" (302) 12 14 21 30 126 135
":" (303) 10 34 127 128 129
"_" (304) 128
"@" (305) 65
"," (306) 25 32 36 46 98 102 146
"<" (307) 44 86
">" (308) 44 87
"*" (309) 16 80 105
"/" (310) 81
"%" (311) 82
"^" (312) 83
"'" (313) 45
".." (314) 95
"->" (315) 10 23 24 29 110
":=" (316) 139
"!=" (317) 84
"<=" (318) 88
">=" (319) 89
"{|" (320) 137
"|}" (321) 137
"binary" (322) 60
"hexadecimal" (323) 61
"integer" (324) 62
"rational" (325) 64
"floating" (326) 63
"string" (327) 59
"identifier" (328) 31 65
UPLUS (329)
UMINUS (330)
CALL_WITHOUT_ARGS (331)


Nonterminals, with rules where they appear

$accept (77)
    on left: 0
Specification (78)
    on left: 1, on right: 0
Definition (79)
    on left: 2 3 4 5, on right: 6 7
AttributedDefinition (80)
    on left: 6 7, on right: 8 9
Definitions (81)
    on left: 8 9, on right: 1 8
FunctionDefinition (82)
    on left: 10 11, on right: 2
MaybeInitially (83)
    on left: 12 13, on right: 10
MaybeDefined (84)
    on left: 14 15, on right: 10
FunctionParameters (85)
    on left: 16 17, on right: 16 18
MaybeFunctionParameters (86)
    on left: 18 19, on right: 10
ProgramFunctionDefinition (87)
    on left: 20 21, on right: 11
Initializer (88)
    on left: 22 23 24, on right: 25 26
Initializers (89)
    on left: 25 26, on right: 25 27
MaybeInitializers (90)
    on left: 27 28, on right: 12 21
DerivedDefinition (91)
    on left: 29, on right: 3
EnumerationDefinition (92)
    on left: 30, on right: 5
Identifier (93)
    on left: 31, on right: 10 20 29 30 32 33 34 35 43 44 45 103 104
    109 110 148 149
Identifiers (94)
    on left: 32 33, on right: 30 32
Variable (95)
    on left: 34 35, on right: 36 37 107 108 132 133
Parameters (96)
    on left: 36 37, on right: 36 38
MaybeParameters (97)
    on left: 38 39, on right: 29 109 110
Type (98)
    on left: 40 41 42, on right: 10 16 17 29 34 46 47 110
BasicType (99)
    on left: 43, on right: 40
ComposedType (100)
    on left: 44, on right: 41
FixedSizedType (101)
    on left: 45, on right: 42
Types (102)
    on left: 46 47, on right: 44 46
Atom (103)
    on left: 48 49 50 51 52 53 54 55, on right: 74
Undefined (104)
    on left: 56, on right: 54
Boolean (105)
    on left: 57 58, on right: 55
String (106)
    on left: 59, on right: 53
BitNumber (107)
    on left: 60 61, on right: 49
IntegerNumber (108)
    on left: 62, on right: 50
FloatingNumber (109)
    on left: 63, on right: 51
RationalNumber (110)
    on left: 64, on right: 52
RuleReference (111)
    on left: 65, on right: 48
Term (112)
    on left: 66 67 68 69 70 71 72 73 74, on right: 14 22 23 24 29 45
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    98 99 102 105 106 107 108 124 125 126 129 132 133 139 149
Expression (113)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
    93 94, on right: 71
Range (114)
    on left: 95, on right: 73
List (115)
    on left: 96 97, on right: 72
Terms (116)
    on left: 98 99, on right: 97 98 100 102
Arguments (117)
    on left: 100 101, on right: 104 105
TwoOrMoreArguments (118)
    on left: 102, on right: 24
DirectCallExpression (119)
    on left: 103 104, on right: 66 139 140 141
IndirectCallExpression (120)
    on left: 105, on right: 67 142 143
ConditionalExpression (121)
    on left: 106, on right: 68
UniversalQuantifierExpression (122)
    on left: 107, on right: 69
ExistentialQuantifierExpression (123)
    on left: 108, on right: 70
RuleDefinition (124)
    on left: 109 110, on right: 4
Rule (125)
    on left: 111 112 113 114 115 116 117 118 119 120, on right: 109
    110 121 122 124 125 127 128 129 132 133 134
Rules (126)
    on left: 121 122, on right: 121 135 136 137 138
SkipRule (127)
    on left: 123, on right: 111
ConditionalRule (128)
    on left: 124 125, on right: 112
CaseRule (129)
    on left: 126, on right: 113
CaseLabel (130)
    on left: 127 128 129, on right: 130 131
CaseLabels (131)
    on left: 130 131, on right: 126 130
LetRule (132)
    on left: 132, on right: 114
ForallRule (133)
    on left: 133, on right: 115
IterateRule (134)
    on left: 134, on right: 116
BlockRule (135)
    on left: 135 136, on right: 117
SequenceRule (136)
    on left: 137 138, on right: 118
UpdateRule (137)
    on left: 139, on right: 119
CallRule (138)
    on left: 140 141 142 143, on right: 120
Attribute (139)
    on left: 144 145, on right: 146 147
Attributes (140)
    on left: 146 147, on right: 6 146
BasicAttribute (141)
    on left: 148, on right: 144
ExpressionAttribute (142)
    on left: 149, on right: 145


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    Definition                 go to state 9
    AttributedDefinition       go to state 10
    Definitions                go to state 11
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 17


State 3

   20 ProgramFunctionDefinition: "init" . Identifier
   21                          | "init" . "{" MaybeInitializers "}"

    "{"           shift, and go to state 18
    "identifier"  shift, and go to state 19

    Identifier  go to state 20


State 4

   29 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 21


State 5

   30 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier  go to state 22


State 6

  109 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  110               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 23


State 7

   10 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier  go to state 24


State 8

    6 AttributedDefinition: "[" . Attributes "]" Definition

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 26
    Attributes           go to state 27
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 9

    7 AttributedDefinition: Definition .

    $default  reduce using rule 7 (AttributedDefinition)


State 10

    9 Definitions: AttributedDefinition .

    $default  reduce using rule 9 (Definitions)


State 11

    1 Specification: "CASM" Definitions .
    8 Definitions: Definitions . AttributedDefinition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7
    "["         shift, and go to state 8

    $default  reduce using rule 1 (Specification)

    Definition                 go to state 9
    AttributedDefinition       go to state 30
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 12

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 13

   11 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 11 (FunctionDefinition)


State 14

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 15

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 16

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 17

    0 $accept: Specification "end of file" .

    $default  accept


State 18

   21 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 51
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 19

   31 Identifier: "identifier" .

    $default  reduce using rule 31 (Identifier)


State 20

   20 ProgramFunctionDefinition: "init" Identifier .

    $default  reduce using rule 20 (ProgramFunctionDefinition)


State 21

   29 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 73


State 22

   30 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 74


State 23

  109 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  110               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 72

    $default  reduce using rule 39 (MaybeParameters)

    MaybeParameters  go to state 75


State 24

   10 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 76


State 25

  148 BasicAttribute: Identifier .
  149 ExpressionAttribute: Identifier . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 148 (BasicAttribute)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 78
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 26

  147 Attributes: Attribute .

    $default  reduce using rule 147 (Attributes)


State 27

    6 AttributedDefinition: "[" Attributes . "]" Definition
  146 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 79
    ","  shift, and go to state 80


State 28

  144 Attribute: BasicAttribute .

    $default  reduce using rule 144 (Attribute)


State 29

  145 Attribute: ExpressionAttribute .

    $default  reduce using rule 145 (Attribute)


State 30

    8 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 8 (Definitions)


State 31

  107 UniversalQuantifierExpression: "forall" . Variable "in" Term "holds" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 82


State 32

  106 ConditionalExpression: "if" . Term "then" Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 83
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 33

  108 ExistentialQuantifierExpression: "exists" . Variable "in" Term "with" Term

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 84


State 34

   56 Undefined: "undef" .

    $default  reduce using rule 56 (Undefined)


State 35

   58 Boolean: "false" .

    $default  reduce using rule 58 (Boolean)


State 36

   57 Boolean: "true" .

    $default  reduce using rule 57 (Boolean)


State 37

   94 Expression: "not" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 85
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 38

   76 Expression: "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 86
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 39

   77 Expression: "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 87
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 40

   75 Expression: "(" . Term ")"
  102 TwoOrMoreArguments: "(" . Term "," Terms ")"
  105 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 88
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 89
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 41

   95 Range: "[" . Term ".." Term "]"
   96 List: "[" . "]"
   97     | "[" . Terms "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "]"            shift, and go to state 90
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 91
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 92
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 42

   65 RuleReference: "@" . "identifier"

    "identifier"  shift, and go to state 93


State 43

   60 BitNumber: "binary" .

    $default  reduce using rule 60 (BitNumber)


State 44

   61 BitNumber: "hexadecimal" .

    $default  reduce using rule 61 (BitNumber)


State 45

   62 IntegerNumber: "integer" .

    $default  reduce using rule 62 (IntegerNumber)


State 46

   64 RationalNumber: "rational" .

    $default  reduce using rule 64 (RationalNumber)


State 47

   63 FloatingNumber: "floating" .

    $default  reduce using rule 63 (FloatingNumber)


State 48

   59 String: "string" .

    $default  reduce using rule 59 (String)


State 49

   26 Initializers: Initializer .

    $default  reduce using rule 26 (Initializers)


State 50

   25 Initializers: Initializers . "," Initializer
   27 MaybeInitializers: Initializers .

    ","  shift, and go to state 94

    $default  reduce using rule 27 (MaybeInitializers)


State 51

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 95


State 52

  103 DirectCallExpression: Identifier .
  104                     | Identifier . Arguments

    "("  shift, and go to state 96

    $default  reduce using rule 103 (DirectCallExpression)

    Arguments  go to state 97


State 53

   74 Term: Atom .

    $default  reduce using rule 74 (Term)


State 54

   54 Atom: Undefined .

    $default  reduce using rule 54 (Atom)


State 55

   55 Atom: Boolean .

    $default  reduce using rule 55 (Atom)


State 56

   53 Atom: String .

    $default  reduce using rule 53 (Atom)


State 57

   49 Atom: BitNumber .

    $default  reduce using rule 49 (Atom)


State 58

   50 Atom: IntegerNumber .

    $default  reduce using rule 50 (Atom)


State 59

   51 Atom: FloatingNumber .

    $default  reduce using rule 51 (Atom)


State 60

   52 Atom: RationalNumber .

    $default  reduce using rule 52 (Atom)


State 61

   48 Atom: RuleReference .

    $default  reduce using rule 48 (Atom)


State 62

   22 Initializer: Term .
   23            | Term . "->" Term
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "->"       shift, and go to state 111
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 22 (Initializer)


State 63

   71 Term: Expression .

    $default  reduce using rule 71 (Term)


State 64

   73 Term: Range .

    $default  reduce using rule 73 (Term)


State 65

   72 Term: List .

    $default  reduce using rule 72 (Term)


State 66

   24 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 115


State 67

   66 Term: DirectCallExpression .

    $default  reduce using rule 66 (Term)


State 68

   67 Term: IndirectCallExpression .

    $default  reduce using rule 67 (Term)


State 69

   68 Term: ConditionalExpression .

    $default  reduce using rule 68 (Term)


State 70

   69 Term: UniversalQuantifierExpression .

    $default  reduce using rule 69 (Term)


State 71

   70 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 70 (Term)


State 72

   38 MaybeParameters: "(" . Parameters ")"

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 116
    Parameters  go to state 117


State 73

   29 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 118


State 74

   30 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 119


State 75

  109 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  110               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 120
    "->"  shift, and go to state 121


State 76

   10 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    $default  reduce using rule 19 (MaybeFunctionParameters)

    FunctionParameters       go to state 122
    MaybeFunctionParameters  go to state 123
    Identifier               go to state 124
    Type                     go to state 125
    BasicType                go to state 126
    ComposedType             go to state 127
    FixedSizedType           go to state 128


State 77

   75 Expression: "(" . Term ")"
  105 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "*"            shift, and go to state 88
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 129
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 78

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  149 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 149 (ExpressionAttribute)


State 79

    6 AttributedDefinition: "[" Attributes "]" . Definition

    "init"      shift, and go to state 3
    "derived"   shift, and go to state 4
    "enum"      shift, and go to state 5
    "rule"      shift, and go to state 6
    "function"  shift, and go to state 7

    Definition                 go to state 130
    FunctionDefinition         go to state 12
    ProgramFunctionDefinition  go to state 13
    DerivedDefinition          go to state 14
    EnumerationDefinition      go to state 15
    RuleDefinition             go to state 16


State 80

  146 Attributes: Attributes "," . Attribute

    "identifier"  shift, and go to state 19

    Identifier           go to state 25
    Attribute            go to state 131
    BasicAttribute       go to state 28
    ExpressionAttribute  go to state 29


State 81

   34 Variable: Identifier . ":" Type
   35         | Identifier .

    ":"  shift, and go to state 132

    $default  reduce using rule 35 (Variable)


State 82

  107 UniversalQuantifierExpression: "forall" Variable . "in" Term "holds" Term

    "in"  shift, and go to state 133


State 83

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  106 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 134
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 84

  108 ExistentialQuantifierExpression: "exists" Variable . "in" Term "with" Term

    "in"  shift, and go to state 135


State 85

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   94           | "not" Term .

    $default  reduce using rule 94 (Expression)


State 86

   76 Expression: "+" Term .
   78           | Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    $default  reduce using rule 76 (Expression)


State 87

   77 Expression: "-" Term .
   78           | Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    $default  reduce using rule 77 (Expression)


State 88

  105 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 136
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 89

   75 Expression: "(" Term . ")"
   78           | Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  102 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 137
    ","        shift, and go to state 138
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 90

   96 List: "[" "]" .

    $default  reduce using rule 96 (List)


State 91

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   95 Range: "[" Term . ".." Term "]"
   99 Terms: Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    ".."       shift, and go to state 139
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 99 (Terms)


State 92

   97 List: "[" Terms . "]"
   98 Terms: Terms . "," Term

    "]"  shift, and go to state 140
    ","  shift, and go to state 141


State 93

   65 RuleReference: "@" "identifier" .

    $default  reduce using rule 65 (RuleReference)


State 94

   25 Initializers: Initializers "," . Initializer

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Initializer                      go to state 142
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 95

   21 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 21 (ProgramFunctionDefinition)


State 96

  100 Arguments: "(" . Terms ")"
  101          | "(" . ")"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    ")"            shift, and go to state 143
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 144
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 145
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 97

  104 DirectCallExpression: Identifier Arguments .

    $default  reduce using rule 104 (DirectCallExpression)


State 98

   92 Expression: Term "and" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 146
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 99

   90 Expression: Term "or" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 147
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 100

   91 Expression: Term "xor" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 148
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 101

   93 Expression: Term "implies" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 149
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 102

   78 Expression: Term "+" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 150
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 103

   79 Expression: Term "-" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 151
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 104

   85 Expression: Term "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 152
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 105

   86 Expression: Term "<" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 153
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 106

   87 Expression: Term ">" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 154
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 107

   80 Expression: Term "*" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 155
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 108

   81 Expression: Term "/" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 156
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 109

   82 Expression: Term "%" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 157
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 110

   83 Expression: Term "^" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 158
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 111

   23 Initializer: Term "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 159
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 112

   84 Expression: Term "!=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 160
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 113

   88 Expression: Term "<=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 161
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 114

   89 Expression: Term ">=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 162
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 115

   24 Initializer: TwoOrMoreArguments "->" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 163
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 116

   37 Parameters: Variable .

    $default  reduce using rule 37 (Parameters)


State 117

   36 Parameters: Parameters . "," Variable
   38 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 164
    ","  shift, and go to state 165


State 118

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 166
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 119

   30 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "identifier"  shift, and go to state 19

    Identifier   go to state 167
    Identifiers  go to state 168


State 120

  109 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 183
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 121

  110 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 194
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 122

   16 FunctionParameters: FunctionParameters . "*" Type
   18 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 195

    $default  reduce using rule 18 (MaybeFunctionParameters)


State 123

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 196


State 124

   43 BasicType: Identifier .
   44 ComposedType: Identifier . "<" Types ">"
   45 FixedSizedType: Identifier . "'" Term

    "<"  shift, and go to state 197
    "'"  shift, and go to state 198

    $default  reduce using rule 43 (BasicType)


State 125

   17 FunctionParameters: Type .

    $default  reduce using rule 17 (FunctionParameters)


State 126

   40 Type: BasicType .

    $default  reduce using rule 40 (Type)


State 127

   41 Type: ComposedType .

    $default  reduce using rule 41 (Type)


State 128

   42 Type: FixedSizedType .

    $default  reduce using rule 42 (Type)


State 129

   75 Expression: "(" Term . ")"
   78           | Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 137
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 130

    6 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 6 (AttributedDefinition)


State 131

  146 Attributes: Attributes "," Attribute .

    $default  reduce using rule 146 (Attributes)


State 132

   34 Variable: Identifier ":" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 199
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 133

  107 UniversalQuantifierExpression: "forall" Variable "in" . Term "holds" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 200
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 134

  106 ConditionalExpression: "if" Term "then" . Term "else" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 201
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 135

  108 ExistentialQuantifierExpression: "exists" Variable "in" . Term "with" Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 202
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 136

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  105 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ")"        shift, and go to state 203
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 137

   75 Expression: "(" Term ")" .

    $default  reduce using rule 75 (Expression)


State 138

  102 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 144
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    Terms                            go to state 204
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 139

   95 Range: "[" Term ".." . Term "]"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 205
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 140

   97 List: "[" Terms "]" .

    $default  reduce using rule 97 (List)


State 141

   98 Terms: Terms "," . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 206
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 142

   25 Initializers: Initializers "," Initializer .

    $default  reduce using rule 25 (Initializers)


State 143

  101 Arguments: "(" ")" .

    $default  reduce using rule 101 (Arguments)


State 144

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   99 Terms: Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 99 (Terms)


State 145

   98 Terms: Terms . "," Term
  100 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 207
    ","  shift, and go to state 141


State 146

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   92           | Term "and" Term .
   93           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "="   shift, and go to state 104
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "!="  shift, and go to state 112
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 92 (Expression)


State 147

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   90           | Term "or" Term .
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"  shift, and go to state 98
    "xor"  shift, and go to state 100
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 90 (Expression)


State 148

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   91           | Term "xor" Term .
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"  shift, and go to state 98
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 91 (Expression)


State 149

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   93           | Term "implies" Term .

    "and"  shift, and go to state 98
    "or"   shift, and go to state 99
    "xor"  shift, and go to state 100
    "+"    shift, and go to state 102
    "-"    shift, and go to state 103
    "="    shift, and go to state 104
    "<"    shift, and go to state 105
    ">"    shift, and go to state 106
    "*"    shift, and go to state 107
    "/"    shift, and go to state 108
    "%"    shift, and go to state 109
    "^"    shift, and go to state 110
    "!="   shift, and go to state 112
    "<="   shift, and go to state 113
    ">="   shift, and go to state 114

    $default  reduce using rule 93 (Expression)


State 150

   78 Expression: Term . "+" Term
   78           | Term "+" Term .
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 78 (Expression)


State 151

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   79           | Term "-" Term .
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 79 (Expression)


State 152

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   85           | Term "=" Term .
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 85 (Expression)


State 153

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   86           | Term "<" Term .
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 86 (Expression)


State 154

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   87           | Term ">" Term .
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 87 (Expression)


State 155

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   80           | Term "*" Term .
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 80 (Expression)


State 156

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   81           | Term "/" Term .
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 81 (Expression)


State 157

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   82           | Term "%" Term .
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "^"  shift, and go to state 110

    $default  reduce using rule 82 (Expression)


State 158

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   83           | Term "^" Term .
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    $default  reduce using rule 83 (Expression)


State 159

   23 Initializer: Term "->" Term .
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 23 (Initializer)


State 160

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   84           | Term "!=" Term .
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"   shift, and go to state 102
    "-"   shift, and go to state 103
    "<"   shift, and go to state 105
    ">"   shift, and go to state 106
    "*"   shift, and go to state 107
    "/"   shift, and go to state 108
    "%"   shift, and go to state 109
    "^"   shift, and go to state 110
    "<="  shift, and go to state 113
    ">="  shift, and go to state 114

    $default  reduce using rule 84 (Expression)


State 161

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   88           | Term "<=" Term .
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 88 (Expression)


State 162

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   89           | Term ">=" Term .
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "+"  shift, and go to state 102
    "-"  shift, and go to state 103
    "*"  shift, and go to state 107
    "/"  shift, and go to state 108
    "%"  shift, and go to state 109
    "^"  shift, and go to state 110

    $default  reduce using rule 89 (Expression)


State 163

   24 Initializer: TwoOrMoreArguments "->" Term .
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 24 (Initializer)


State 164

   38 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 38 (MaybeParameters)


State 165

   36 Parameters: Parameters "," . Variable

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 208


State 166

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 209


State 167

   33 Identifiers: Identifier .

    $default  reduce using rule 33 (Identifiers)


State 168

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   32 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 210
    ","  shift, and go to state 211


State 169

  138 SequenceRule: "seq" . Rules "endseq"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 212
    Rules                   go to state 213
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 170

  136 BlockRule: "par" . Rules "endpar"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 212
    Rules                   go to state 214
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 171

  123 SkipRule: "skip" .

    $default  reduce using rule 123 (SkipRule)


State 172

  132 LetRule: "let" . Variable "=" Term "in" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 215


State 173

  133 ForallRule: "forall" . Variable "in" Term "do" Rule

    "identifier"  shift, and go to state 19

    Identifier  go to state 81
    Variable    go to state 216


State 174

  134 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 217
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 175

  140 CallRule: "call" . DirectCallExpression
  142         | "call" . IndirectCallExpression

    "("           shift, and go to state 178
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 218
    IndirectCallExpression  go to state 219


State 176

  124 ConditionalRule: "if" . Term "then" Rule
  125                | "if" . Term "then" Rule "else" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 220
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 177

  126 CaseRule: "case" . Term "of" "{" CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 221
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 178

  105 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 88


State 179

  135 BlockRule: "{" . Rules "}"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 212
    Rules                   go to state 222
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 180

  137 SequenceRule: "{|" . Rules "|}"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 212
    Rules                   go to state 223
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 181

  139 UpdateRule: DirectCallExpression . ":=" Term
  141 CallRule: DirectCallExpression .

    ":="  shift, and go to state 224

    $default  reduce using rule 141 (CallRule)


State 182

  143 CallRule: IndirectCallExpression .

    $default  reduce using rule 143 (CallRule)


State 183

  109 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 109 (RuleDefinition)


State 184

  111 Rule: SkipRule .

    $default  reduce using rule 111 (Rule)


State 185

  112 Rule: ConditionalRule .

    $default  reduce using rule 112 (Rule)


State 186

  113 Rule: CaseRule .

    $default  reduce using rule 113 (Rule)


State 187

  114 Rule: LetRule .

    $default  reduce using rule 114 (Rule)


State 188

  115 Rule: ForallRule .

    $default  reduce using rule 115 (Rule)


State 189

  116 Rule: IterateRule .

    $default  reduce using rule 116 (Rule)


State 190

  117 Rule: BlockRule .

    $default  reduce using rule 117 (Rule)


State 191

  118 Rule: SequenceRule .

    $default  reduce using rule 118 (Rule)


State 192

  119 Rule: UpdateRule .

    $default  reduce using rule 119 (Rule)


State 193

  120 Rule: CallRule .

    $default  reduce using rule 120 (Rule)


State 194

  110 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 225


State 195

   16 FunctionParameters: FunctionParameters "*" . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 226
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 196

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 227
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 197

   44 ComposedType: Identifier "<" . Types ">"

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 228
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128
    Types           go to state 229


State 198

   45 FixedSizedType: Identifier "'" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 230
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 199

   34 Variable: Identifier ":" Type .

    $default  reduce using rule 34 (Variable)


State 200

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  107 UniversalQuantifierExpression: "forall" Variable "in" Term . "holds" Term

    "holds"    shift, and go to state 231
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 201

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  106 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 232
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 202

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  108 ExistentialQuantifierExpression: "exists" Variable "in" Term . "with" Term

    "with"     shift, and go to state 233
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 203

  105 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 96

    Arguments  go to state 234


State 204

   98 Terms: Terms . "," Term
  102 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 235
    ","  shift, and go to state 141


State 205

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   95 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "]"        shift, and go to state 236
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 206

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
   98 Terms: Terms "," Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 98 (Terms)


State 207

  100 Arguments: "(" Terms ")" .

    $default  reduce using rule 100 (Arguments)


State 208

   36 Parameters: Parameters "," Variable .

    $default  reduce using rule 36 (Parameters)


State 209

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 237
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 210

   30 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 30 (EnumerationDefinition)


State 211

   32 Identifiers: Identifiers "," . Identifier

    "identifier"  shift, and go to state 19

    Identifier  go to state 238


State 212

  122 Rules: Rule .

    $default  reduce using rule 122 (Rules)


State 213

  121 Rules: Rules . Rule
  138 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 169
    "endseq"      shift, and go to state 239
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 240
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 214

  121 Rules: Rules . Rule
  136 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "endpar"      shift, and go to state 241
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 240
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 215

  132 LetRule: "let" Variable . "=" Term "in" Rule

    "="  shift, and go to state 242


State 216

  133 ForallRule: "forall" Variable . "in" Term "do" Rule

    "in"  shift, and go to state 243


State 217

  134 IterateRule: "iterate" Rule .

    $default  reduce using rule 134 (IterateRule)


State 218

  140 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 140 (CallRule)


State 219

  142 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 142 (CallRule)


State 220

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  124 ConditionalRule: "if" Term . "then" Rule
  125                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 244
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 221

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  126 CaseRule: "case" Term . "of" "{" CaseLabels "}"

    "of"       shift, and go to state 245
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 222

  121 Rules: Rules . Rule
  135 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "}"           shift, and go to state 246
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 240
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 223

  121 Rules: Rules . Rule
  137 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "|}"          shift, and go to state 247
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 240
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 224

  139 UpdateRule: DirectCallExpression ":=" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 248
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 225

  110 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 249
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 226

   16 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 16 (FunctionParameters)


State 227

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 250

    $default  reduce using rule 15 (MaybeDefined)

    MaybeDefined  go to state 251


State 228

   47 Types: Type .

    $default  reduce using rule 47 (Types)


State 229

   44 ComposedType: Identifier "<" Types . ">"
   46 Types: Types . "," Type

    ","  shift, and go to state 252
    ">"  shift, and go to state 253


State 230

   45 FixedSizedType: Identifier "'" Term .
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "<"        shift, and go to state 105
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 45 (FixedSizedType)


State 231

  107 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 254
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 232

  106 ConditionalExpression: "if" Term "then" Term "else" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 255
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 233

  108 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" . Term

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 256
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 234

  105 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 105 (IndirectCallExpression)


State 235

  102 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 102 (TwoOrMoreArguments)


State 236

   95 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 95 (Range)


State 237

   29 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 29 (DerivedDefinition)


State 238

   32 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 32 (Identifiers)


State 239

  138 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 138 (SequenceRule)


State 240

  121 Rules: Rules Rule .

    $default  reduce using rule 121 (Rules)


State 241

  136 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 136 (BlockRule)


State 242

  132 LetRule: "let" Variable "=" . Term "in" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 257
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 243

  133 ForallRule: "forall" Variable "in" . Term "do" Rule

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 258
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 244

  124 ConditionalRule: "if" Term "then" . Rule
  125                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 259
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 245

  126 CaseRule: "case" Term "of" . "{" CaseLabels "}"

    "{"  shift, and go to state 260


State 246

  135 BlockRule: "{" Rules "}" .

    $default  reduce using rule 135 (BlockRule)


State 247

  137 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 137 (SequenceRule)


State 248

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  139 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 139 (UpdateRule)


State 249

  110 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 110 (RuleDefinition)


State 250

   14 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 261


State 251

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 262

    $default  reduce using rule 13 (MaybeInitially)

    MaybeInitially  go to state 263


State 252

   46 Types: Types "," . Type

    "identifier"  shift, and go to state 19

    Identifier      go to state 124
    Type            go to state 264
    BasicType       go to state 126
    ComposedType    go to state 127
    FixedSizedType  go to state 128


State 253

   44 ComposedType: Identifier "<" Types ">" .

    $default  reduce using rule 44 (ComposedType)


State 254

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  107 UniversalQuantifierExpression: "forall" Variable "in" Term "holds" Term .

    $default  reduce using rule 107 (UniversalQuantifierExpression)


State 255

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  106 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114

    $default  reduce using rule 106 (ConditionalExpression)


State 256

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  108 ExistentialQuantifierExpression: "exists" Variable "in" Term "with" Term .

    $default  reduce using rule 108 (ExistentialQuantifierExpression)


State 257

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  132 LetRule: "let" Variable "=" Term . "in" Rule

    "in"       shift, and go to state 265
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 258

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  133 ForallRule: "forall" Variable "in" Term . "do" Rule

    "do"       shift, and go to state 266
    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 259

  124 ConditionalRule: "if" Term "then" Rule .
  125                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 267

    $default  reduce using rule 124 (ConditionalRule)


State 260

  126 CaseRule: "case" Term "of" "{" . CaseLabels "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 268
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 269
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 270
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 271
    CaseLabels                       go to state 272


State 261

   14 MaybeDefined: "defined" "{" . Term "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 273
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 262

   12 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 274


State 263

   10 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 10 (FunctionDefinition)


State 264

   46 Types: Types "," Type .

    $default  reduce using rule 46 (Types)


State 265

  132 LetRule: "let" Variable "=" Term "in" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 275
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 266

  133 ForallRule: "forall" Variable "in" Term "do" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 276
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 267

  125 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 277
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 268

  127 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 278


State 269

  128 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 279


State 270

   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term
  129 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    ":"        shift, and go to state 280
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 271

  130 CaseLabels: CaseLabel . CaseLabels
  131           | CaseLabel .

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "default"      shift, and go to state 268
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 77
    "["            shift, and go to state 41
    "_"            shift, and go to state 269
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 131 (CaseLabels)

    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 270
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71
    CaseLabel                        go to state 271
    CaseLabels                       go to state 281


State 272

  126 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 282


State 273

   14 MaybeDefined: "defined" "{" Term . "}"
   78 Expression: Term . "+" Term
   79           | Term . "-" Term
   80           | Term . "*" Term
   81           | Term . "/" Term
   82           | Term . "%" Term
   83           | Term . "^" Term
   84           | Term . "!=" Term
   85           | Term . "=" Term
   86           | Term . "<" Term
   87           | Term . ">" Term
   88           | Term . "<=" Term
   89           | Term . ">=" Term
   90           | Term . "or" Term
   91           | Term . "xor" Term
   92           | Term . "and" Term
   93           | Term . "implies" Term

    "and"      shift, and go to state 98
    "or"       shift, and go to state 99
    "xor"      shift, and go to state 100
    "implies"  shift, and go to state 101
    "+"        shift, and go to state 102
    "-"        shift, and go to state 103
    "="        shift, and go to state 104
    "}"        shift, and go to state 283
    "<"        shift, and go to state 105
    ">"        shift, and go to state 106
    "*"        shift, and go to state 107
    "/"        shift, and go to state 108
    "%"        shift, and go to state 109
    "^"        shift, and go to state 110
    "!="       shift, and go to state 112
    "<="       shift, and go to state 113
    ">="       shift, and go to state 114


State 274

   12 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "forall"       shift, and go to state 31
    "if"           shift, and go to state 32
    "exists"       shift, and go to state 33
    "undef"        shift, and go to state 34
    "false"        shift, and go to state 35
    "true"         shift, and go to state 36
    "not"          shift, and go to state 37
    "+"            shift, and go to state 38
    "-"            shift, and go to state 39
    "("            shift, and go to state 40
    "["            shift, and go to state 41
    "@"            shift, and go to state 42
    "binary"       shift, and go to state 43
    "hexadecimal"  shift, and go to state 44
    "integer"      shift, and go to state 45
    "rational"     shift, and go to state 46
    "floating"     shift, and go to state 47
    "string"       shift, and go to state 48
    "identifier"   shift, and go to state 19

    $default  reduce using rule 28 (MaybeInitializers)

    Initializer                      go to state 49
    Initializers                     go to state 50
    MaybeInitializers                go to state 284
    Identifier                       go to state 52
    Atom                             go to state 53
    Undefined                        go to state 54
    Boolean                          go to state 55
    String                           go to state 56
    BitNumber                        go to state 57
    IntegerNumber                    go to state 58
    FloatingNumber                   go to state 59
    RationalNumber                   go to state 60
    RuleReference                    go to state 61
    Term                             go to state 62
    Expression                       go to state 63
    Range                            go to state 64
    List                             go to state 65
    TwoOrMoreArguments               go to state 66
    DirectCallExpression             go to state 67
    IndirectCallExpression           go to state 68
    ConditionalExpression            go to state 69
    UniversalQuantifierExpression    go to state 70
    ExistentialQuantifierExpression  go to state 71


State 275

  132 LetRule: "let" Variable "=" Term "in" Rule .

    $default  reduce using rule 132 (LetRule)


State 276

  133 ForallRule: "forall" Variable "in" Term "do" Rule .

    $default  reduce using rule 133 (ForallRule)


State 277

  125 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 125 (ConditionalRule)


State 278

  127 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 285
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 279

  128 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 286
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 280

  129 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 169
    "par"         shift, and go to state 170
    "skip"        shift, and go to state 171
    "let"         shift, and go to state 172
    "forall"      shift, and go to state 173
    "iterate"     shift, and go to state 174
    "call"        shift, and go to state 175
    "if"          shift, and go to state 176
    "case"        shift, and go to state 177
    "("           shift, and go to state 178
    "{"           shift, and go to state 179
    "{|"          shift, and go to state 180
    "identifier"  shift, and go to state 19

    Identifier              go to state 52
    DirectCallExpression    go to state 181
    IndirectCallExpression  go to state 182
    Rule                    go to state 287
    SkipRule                go to state 184
    ConditionalRule         go to state 185
    CaseRule                go to state 186
    LetRule                 go to state 187
    ForallRule              go to state 188
    IterateRule             go to state 189
    BlockRule               go to state 190
    SequenceRule            go to state 191
    UpdateRule              go to state 192
    CallRule                go to state 193


State 281

  130 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 130 (CaseLabels)


State 282

  126 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 126 (CaseRule)


State 283

   14 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 14 (MaybeDefined)


State 284

   12 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 288


State 285

  127 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 127 (CaseLabel)


State 286

  128 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 128 (CaseLabel)


State 287

  129 CaseLabel: Term ":" Rule .

    $default  reduce using rule 129 (CaseLabel)


State 288

   12 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 12 (MaybeInitially)
