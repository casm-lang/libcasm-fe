Grammar

    0 $accept: Specification "end of file"

    1 Specification: "CASM" Definitions

    2 Definition: FunctionDefinition
    3           | DerivedDefinition
    4           | RuleDefinition
    5           | EnumerationDefinition
    6           | TypeDefinition
    7           | error

    8 AttributedDefinition: "[" Attributes "]" Definition
    9                     | Definition

   10 Definitions: Definitions AttributedDefinition
   11            | AttributedDefinition

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially
   13                   | ProgramFunctionDefinition

   14 MaybeInitially: "initially" "{" MaybeInitializers "}"
   15               | %empty

   16 MaybeDefined: "defined" "{" Term "}"
   17             | %empty

   18 FunctionParameters: FunctionParameters "*" Type
   19                   | Type

   20 MaybeFunctionParameters: FunctionParameters
   21                        | %empty

   22 ProgramFunctionDefinition: "init" IdentifierPath
   23                          | "init" "{" MaybeInitializers "}"

   24 Initializer: Term
   25            | Term "->" Term
   26            | TwoOrMoreArguments "->" Term

   27 Initializers: Initializers "," Initializer
   28             | Initializer

   29 MaybeInitializers: Initializers
   30                  | %empty

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}"

   33 TypeDefinition: "type" Identifier "=" Type

   34 Identifier: "identifier"
   35           | "in"

   36 Identifiers: Identifiers "," Identifier
   37            | Identifier

   38 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier
   39                        | Identifier

   40 IdentifierPath: DotSeparatedIdentifiers
   41               | "." DotSeparatedIdentifiers

   42 Variable: Identifier ":" Type
   43         | Identifier

   44 AttributedVariable: "[" Attributes "]" Variable
   45                   | Variable

   46 Parameters: Parameters "," AttributedVariable
   47           | AttributedVariable

   48 MaybeParameters: "(" Parameters ")"
   49                | "(" error ")"
   50                | %empty

   51 Type: BasicType
   52     | ComposedType
   53     | RelationType
   54     | FixedSizedType

   55 BasicType: IdentifierPath

   56 ComposedType: IdentifierPath "<" Types ">"

   57 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">"

   58 FixedSizedType: IdentifierPath "'" Term

   59 Types: Types "," Type
   60      | Type

   61 Atom: Reference
   62     | BitNumber
   63     | IntegerNumber
   64     | FloatingNumber
   65     | RationalNumber
   66     | String
   67     | Undefined
   68     | Boolean

   69 Undefined: "undef"

   70 Boolean: "true"
   71        | "false"

   72 String: "string"

   73 BitNumber: "binary"
   74          | "hexadecimal"

   75 IntegerNumber: "integer"

   76 FloatingNumber: "floating"

   77 RationalNumber: "rational"

   78 Reference: "@" IdentifierPath

   79 Term: DirectCallExpression
   80     | IndirectCallExpression
   81     | LetExpression
   82     | ConditionalExpression
   83     | ChooseExpression
   84     | UniversalQuantifierExpression
   85     | ExistentialQuantifierExpression
   86     | Expression
   87     | List
   88     | Range
   89     | Atom

   90 Expression: "(" Term ")"
   91           | "(" error ")"
   92           | "+" Term
   93           | "-" Term
   94           | Term "+" Term
   95           | Term "-" Term
   96           | Term "*" Term
   97           | Term "/" Term
   98           | Term "%" Term
   99           | Term "^" Term
  100           | Term "!=" Term
  101           | Term "=" Term
  102           | Term "<" Term
  103           | Term ">" Term
  104           | Term "<=" Term
  105           | Term ">=" Term
  106           | Term "or" Term
  107           | Term "xor" Term
  108           | Term "and" Term
  109           | Term "=>" Term
  110           | Term "implies" Term
  111           | "not" Term

  112 Range: "[" Term ".." Term "]"

  113 List: "[" "]"
  114     | "[" Terms "]"
  115     | "[" error "]"

  116 Terms: Terms "," Term
  117      | Term

  118 Arguments: "(" Terms ")"
  119          | "(" error ")"
  120          | "(" ")"

  121 TwoOrMoreArguments: "(" Term "," Terms ")"

  122 DirectCallExpression: IdentifierPath
  123                     | IdentifierPath Arguments

  124 IndirectCallExpression: "(" "*" Term ")" Arguments

  125 LetExpression: "let" AttributedVariable "=" Term "in" Term

  126 ConditionalExpression: "if" Term "then" Term "else" Term

  127 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term

  128 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term

  129 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term

  130 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule
  131               | "rule" Identifier MaybeParameters "->" Type "=" Rule

  132 Rule: SkipRule
  133     | ConditionalRule
  134     | CaseRule
  135     | LetRule
  136     | ForallRule
  137     | ChooseRule
  138     | IterateRule
  139     | BlockRule
  140     | SequenceRule
  141     | UpdateRule
  142     | CallRule

  143 Rules: Rules Rule
  144      | Rule

  145 SkipRule: "skip"

  146 ConditionalRule: "if" Term "then" Rule
  147                | "if" Term "then" Rule "else" Rule

  148 CaseRule: "case" Term "of" "{" CaseLabels "}"
  149         | "case" Term "of" "{" error "}"

  150 CaseLabel: "default" ":" Rule
  151          | "_" ":" Rule
  152          | Term ":" Rule

  153 CaseLabels: CaseLabel CaseLabels
  154           | CaseLabel

  155 LetRule: "let" AttributedVariable "=" Term "in" Rule

  156 ForallRule: "forall" AttributedVariable "in" Term "do" Rule

  157 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule

  158 IterateRule: "iterate" Rule

  159 BlockRule: "{" Rules "}"
  160          | "par" Rules "endpar"
  161          | "{" error "}"
  162          | "par" error "endpar"

  163 SequenceRule: "{|" Rules "|}"
  164             | "seq" Rules "endseq"
  165             | "{|" error "|}"
  166             | "seq" error "endseq"

  167 UpdateRule: DirectCallExpression ":=" Term

  168 CallRule: "call" DirectCallExpression
  169         | DirectCallExpression
  170         | "call" IndirectCallExpression
  171         | IndirectCallExpression

  172 Attribute: BasicAttribute
  173          | ExpressionAttribute

  174 Attributes: Attributes "," Attribute
  175           | Attribute

  176 BasicAttribute: Identifier

  177 ExpressionAttribute: Identifier Term


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 7 49 91 115 119 149 161 162 165 166
"CASM" (258) 1
"init" (259) 22 23
"derived" (260) 31
"enum" (261) 32
"rule" (262) 130 131
"type" (263) 33
"function" (264) 12
"initially" (265) 14
"defined" (266) 16
"seq" (267) 164 166
"endseq" (268) 164 166
"par" (269) 160 162
"endpar" (270) 160 162
"skip" (271) 145
"let" (272) 125 155
"in" (273) 35 125 127 128 129 155 156 157
"forall" (274) 128 156
"choose" (275) 127 157
"iterate" (276) 158
"do" (277) 127 156 157
"call" (278) 168 170
"if" (279) 126 146 147
"then" (280) 126 146 147
"else" (281) 126 147
"case" (282) 148 149
"of" (283) 148 149
"default" (284) 150
"holds" (285) 128
"exists" (286) 129
"with" (287) 129
"undef" (288) 69
"false" (289) 71
"true" (290) 70
"and" (291) 108
"or" (292) 106
"xor" (293) 107
"implies" (294) 110
"not" (295) 111
"+" (296) 92 94
"-" (297) 93 95
"=" (298) 31 32 33 101 125 130 131 155
"(" (299) 48 49 90 91 118 119 120 121 124
")" (300) 48 49 90 91 118 119 120 121 124
"[" (301) 8 44 112 113 114 115
"]" (302) 8 44 112 113 114 115
"{" (303) 14 16 23 32 148 149 159 161
"}" (304) 14 16 23 32 148 149 159 161
":" (305) 12 42 150 151 152
"_" (306) 151
"@" (307) 78
"," (308) 27 36 46 59 116 121 174
"<" (309) 56 57 102
">" (310) 56 57 103
"*" (311) 18 96 124
"/" (312) 97
"%" (313) 98
"^" (314) 99
"'" (315) 58
".." (316) 112
"." (317) 38 41
"->" (318) 12 25 26 31 57 131
"=>" (319) 109
":=" (320) 167
"!=" (321) 100
"<=" (322) 104
">=" (323) 105
"{|" (324) 163 165
"|}" (325) 163 165
"binary" (326) 73
"hexadecimal" (327) 74
"integer" (328) 75
"rational" (329) 77
"floating" (330) 76
"string" (331) 72
"identifier" (332) 34
ABSOLUTE_PATH (333)
UPLUS (334)
UMINUS (335)
CALL_WITHOUT_ARGS (336)


Nonterminals, with rules where they appear

$accept (82)
    on left: 0
Specification (83)
    on left: 1, on right: 0
Definition (84)
    on left: 2 3 4 5 6 7, on right: 8 9
AttributedDefinition (85)
    on left: 8 9, on right: 10 11
Definitions (86)
    on left: 10 11, on right: 1 10
FunctionDefinition (87)
    on left: 12 13, on right: 2
MaybeInitially (88)
    on left: 14 15, on right: 12
MaybeDefined (89)
    on left: 16 17, on right: 12
FunctionParameters (90)
    on left: 18 19, on right: 18 20
MaybeFunctionParameters (91)
    on left: 20 21, on right: 12 57
ProgramFunctionDefinition (92)
    on left: 22 23, on right: 13
Initializer (93)
    on left: 24 25 26, on right: 27 28
Initializers (94)
    on left: 27 28, on right: 27 29
MaybeInitializers (95)
    on left: 29 30, on right: 14 23
DerivedDefinition (96)
    on left: 31, on right: 3
EnumerationDefinition (97)
    on left: 32, on right: 5
TypeDefinition (98)
    on left: 33, on right: 6
Identifier (99)
    on left: 34 35, on right: 12 31 32 33 36 37 38 39 42 43 130 131
    176 177
Identifiers (100)
    on left: 36 37, on right: 32 36
DotSeparatedIdentifiers (101)
    on left: 38 39, on right: 38 40 41
IdentifierPath (102)
    on left: 40 41, on right: 22 55 56 57 58 78 122 123
Variable (103)
    on left: 42 43, on right: 44 45
AttributedVariable (104)
    on left: 44 45, on right: 46 47 125 127 128 129 155 156 157
Parameters (105)
    on left: 46 47, on right: 46 48
MaybeParameters (106)
    on left: 48 49 50, on right: 31 130 131
Type (107)
    on left: 51 52 53 54, on right: 12 18 19 31 33 42 57 59 60 131
BasicType (108)
    on left: 55, on right: 51
ComposedType (109)
    on left: 56, on right: 52
RelationType (110)
    on left: 57, on right: 53
FixedSizedType (111)
    on left: 58, on right: 54
Types (112)
    on left: 59 60, on right: 56 59
Atom (113)
    on left: 61 62 63 64 65 66 67 68, on right: 89
Undefined (114)
    on left: 69, on right: 67
Boolean (115)
    on left: 70 71, on right: 68
String (116)
    on left: 72, on right: 66
BitNumber (117)
    on left: 73 74, on right: 62
IntegerNumber (118)
    on left: 75, on right: 63
FloatingNumber (119)
    on left: 76, on right: 64
RationalNumber (120)
    on left: 77, on right: 65
Reference (121)
    on left: 78, on right: 61
Term (122)
    on left: 79 80 81 82 83 84 85 86 87 88 89, on right: 16 24 25 26
    31 58 90 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
    108 109 110 111 112 116 117 121 124 125 126 127 128 129 146 147
    148 149 152 155 156 157 167 177
Expression (123)
    on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 111, on right: 86
Range (124)
    on left: 112, on right: 88
List (125)
    on left: 113 114 115, on right: 87
Terms (126)
    on left: 116 117, on right: 114 116 118 121
Arguments (127)
    on left: 118 119 120, on right: 123 124
TwoOrMoreArguments (128)
    on left: 121, on right: 26
DirectCallExpression (129)
    on left: 122 123, on right: 79 167 168 169
IndirectCallExpression (130)
    on left: 124, on right: 80 170 171
LetExpression (131)
    on left: 125, on right: 81
ConditionalExpression (132)
    on left: 126, on right: 82
ChooseExpression (133)
    on left: 127, on right: 83
UniversalQuantifierExpression (134)
    on left: 128, on right: 84
ExistentialQuantifierExpression (135)
    on left: 129, on right: 85
RuleDefinition (136)
    on left: 130 131, on right: 4
Rule (137)
    on left: 132 133 134 135 136 137 138 139 140 141 142, on right:
    130 131 143 144 146 147 150 151 152 155 156 157 158
Rules (138)
    on left: 143 144, on right: 143 159 160 163 164
SkipRule (139)
    on left: 145, on right: 132
ConditionalRule (140)
    on left: 146 147, on right: 133
CaseRule (141)
    on left: 148 149, on right: 134
CaseLabel (142)
    on left: 150 151 152, on right: 153 154
CaseLabels (143)
    on left: 153 154, on right: 148 153
LetRule (144)
    on left: 155, on right: 135
ForallRule (145)
    on left: 156, on right: 136
ChooseRule (146)
    on left: 157, on right: 137
IterateRule (147)
    on left: 158, on right: 138
BlockRule (148)
    on left: 159 160 161 162, on right: 139
SequenceRule (149)
    on left: 163 164 165 166, on right: 140
UpdateRule (150)
    on left: 167, on right: 141
CallRule (151)
    on left: 168 169 170 171, on right: 142
Attribute (152)
    on left: 172 173, on right: 174 175
Attributes (153)
    on left: 174 175, on right: 8 44 174
BasicAttribute (154)
    on left: 176, on right: 172
ExpressionAttribute (155)
    on left: 177, on right: 173


State 0

    0 $accept: . Specification "end of file"

    "CASM"  shift, and go to state 1

    Specification  go to state 2


State 1

    1 Specification: "CASM" . Definitions

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "type"      shift, and go to state 8
    "function"  shift, and go to state 9
    "["         shift, and go to state 10

    Definition                 go to state 11
    AttributedDefinition       go to state 12
    Definitions                go to state 13
    FunctionDefinition         go to state 14
    ProgramFunctionDefinition  go to state 15
    DerivedDefinition          go to state 16
    EnumerationDefinition      go to state 17
    TypeDefinition             go to state 18
    RuleDefinition             go to state 19


State 2

    0 $accept: Specification . "end of file"

    "end of file"  shift, and go to state 20


State 3

    7 Definition: error .

    $default  reduce using rule 7 (Definition)


State 4

   22 ProgramFunctionDefinition: "init" . IdentifierPath
   23                          | "init" . "{" MaybeInitializers "}"

    "in"          shift, and go to state 21
    "{"           shift, and go to state 22
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 27


State 5

   31 DerivedDefinition: "derived" . Identifier MaybeParameters "->" Type "=" Term

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 28


State 6

   32 EnumerationDefinition: "enum" . Identifier "=" "{" Identifiers "}"

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 29


State 7

  130 RuleDefinition: "rule" . Identifier MaybeParameters "=" Rule
  131               | "rule" . Identifier MaybeParameters "->" Type "=" Rule

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 30


State 8

   33 TypeDefinition: "type" . Identifier "=" Type

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 31


State 9

   12 FunctionDefinition: "function" . Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 32


State 10

    8 AttributedDefinition: "[" . Attributes "]" Definition

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier           go to state 33
    Attribute            go to state 34
    Attributes           go to state 35
    BasicAttribute       go to state 36
    ExpressionAttribute  go to state 37


State 11

    9 AttributedDefinition: Definition .

    $default  reduce using rule 9 (AttributedDefinition)


State 12

   11 Definitions: AttributedDefinition .

    $default  reduce using rule 11 (Definitions)


State 13

    1 Specification: "CASM" Definitions .
   10 Definitions: Definitions . AttributedDefinition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "type"      shift, and go to state 8
    "function"  shift, and go to state 9
    "["         shift, and go to state 10

    "end of file"  reduce using rule 1 (Specification)

    Definition                 go to state 11
    AttributedDefinition       go to state 38
    FunctionDefinition         go to state 14
    ProgramFunctionDefinition  go to state 15
    DerivedDefinition          go to state 16
    EnumerationDefinition      go to state 17
    TypeDefinition             go to state 18
    RuleDefinition             go to state 19


State 14

    2 Definition: FunctionDefinition .

    $default  reduce using rule 2 (Definition)


State 15

   13 FunctionDefinition: ProgramFunctionDefinition .

    $default  reduce using rule 13 (FunctionDefinition)


State 16

    3 Definition: DerivedDefinition .

    $default  reduce using rule 3 (Definition)


State 17

    5 Definition: EnumerationDefinition .

    $default  reduce using rule 5 (Definition)


State 18

    6 Definition: TypeDefinition .

    $default  reduce using rule 6 (Definition)


State 19

    4 Definition: RuleDefinition .

    $default  reduce using rule 4 (Definition)


State 20

    0 $accept: Specification "end of file" .

    $default  accept


State 21

   35 Identifier: "in" .

    $default  reduce using rule 35 (Identifier)


State 22

   23 ProgramFunctionDefinition: "init" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 50
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    $default  reduce using rule 30 (MaybeInitializers)

    Initializer                      go to state 59
    Initializers                     go to state 60
    MaybeInitializers                go to state 61
    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 72
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    TwoOrMoreArguments               go to state 76
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 23

   41 IdentifierPath: "." . DotSeparatedIdentifiers

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 84


State 24

   34 Identifier: "identifier" .

    $default  reduce using rule 34 (Identifier)


State 25

   39 DotSeparatedIdentifiers: Identifier .

    $default  reduce using rule 39 (DotSeparatedIdentifiers)


State 26

   38 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   40 IdentifierPath: DotSeparatedIdentifiers .

    "."  shift, and go to state 85

    $default  reduce using rule 40 (IdentifierPath)


State 27

   22 ProgramFunctionDefinition: "init" IdentifierPath .

    $default  reduce using rule 22 (ProgramFunctionDefinition)


State 28

   31 DerivedDefinition: "derived" Identifier . MaybeParameters "->" Type "=" Term

    "("  shift, and go to state 86

    $default  reduce using rule 50 (MaybeParameters)

    MaybeParameters  go to state 87


State 29

   32 EnumerationDefinition: "enum" Identifier . "=" "{" Identifiers "}"

    "="  shift, and go to state 88


State 30

  130 RuleDefinition: "rule" Identifier . MaybeParameters "=" Rule
  131               | "rule" Identifier . MaybeParameters "->" Type "=" Rule

    "("  shift, and go to state 86

    $default  reduce using rule 50 (MaybeParameters)

    MaybeParameters  go to state 89


State 31

   33 TypeDefinition: "type" Identifier . "=" Type

    "="  shift, and go to state 90


State 32

   12 FunctionDefinition: "function" Identifier . ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    ":"  shift, and go to state 91


State 33

  176 BasicAttribute: Identifier .
  177 ExpressionAttribute: Identifier . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    $default  reduce using rule 176 (BasicAttribute)

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 93
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 34

  175 Attributes: Attribute .

    $default  reduce using rule 175 (Attributes)


State 35

    8 AttributedDefinition: "[" Attributes . "]" Definition
  174 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 94
    ","  shift, and go to state 95


State 36

  172 Attribute: BasicAttribute .

    $default  reduce using rule 172 (Attribute)


State 37

  173 Attribute: ExpressionAttribute .

    $default  reduce using rule 173 (Attribute)


State 38

   10 Definitions: Definitions AttributedDefinition .

    $default  reduce using rule 10 (Definitions)


State 39

  125 LetExpression: "let" . AttributedVariable "=" Term "in" Term

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 99


State 40

  128 UniversalQuantifierExpression: "forall" . AttributedVariable "in" Term "holds" Term

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 100


State 41

  127 ChooseExpression: "choose" . AttributedVariable "in" Term "do" Term

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 101


State 42

  126 ConditionalExpression: "if" . Term "then" Term "else" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 102
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 43

  129 ExistentialQuantifierExpression: "exists" . AttributedVariable "in" Term "with" Term

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 103


State 44

   69 Undefined: "undef" .

    $default  reduce using rule 69 (Undefined)


State 45

   71 Boolean: "false" .

    $default  reduce using rule 71 (Boolean)


State 46

   70 Boolean: "true" .

    $default  reduce using rule 70 (Boolean)


State 47

  111 Expression: "not" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 104
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 48

   92 Expression: "+" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 105
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 49

   93 Expression: "-" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 106
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 50

   90 Expression: "(" . Term ")"
   91           | "(" . error ")"
  121 TwoOrMoreArguments: "(" . Term "," Terms ")"
  124 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 107
    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "*"            shift, and go to state 108
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 109
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 51

  112 Range: "[" . Term ".." Term "]"
  113 List: "[" . "]"
  114     | "[" . Terms "]"
  115     | "[" . error "]"

    error          shift, and go to state 110
    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "]"            shift, and go to state 111
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 112
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    Terms                            go to state 113
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 52

   78 Reference: "@" . IdentifierPath

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 114


State 53

   73 BitNumber: "binary" .

    $default  reduce using rule 73 (BitNumber)


State 54

   74 BitNumber: "hexadecimal" .

    $default  reduce using rule 74 (BitNumber)


State 55

   75 IntegerNumber: "integer" .

    $default  reduce using rule 75 (IntegerNumber)


State 56

   77 RationalNumber: "rational" .

    $default  reduce using rule 77 (RationalNumber)


State 57

   76 FloatingNumber: "floating" .

    $default  reduce using rule 76 (FloatingNumber)


State 58

   72 String: "string" .

    $default  reduce using rule 72 (String)


State 59

   28 Initializers: Initializer .

    $default  reduce using rule 28 (Initializers)


State 60

   27 Initializers: Initializers . "," Initializer
   29 MaybeInitializers: Initializers .

    ","  shift, and go to state 115

    $default  reduce using rule 29 (MaybeInitializers)


State 61

   23 ProgramFunctionDefinition: "init" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 116


State 62

  122 DirectCallExpression: IdentifierPath .
  123                     | IdentifierPath . Arguments

    "("  shift, and go to state 117

    $default  reduce using rule 122 (DirectCallExpression)

    Arguments  go to state 118


State 63

   89 Term: Atom .

    $default  reduce using rule 89 (Term)


State 64

   67 Atom: Undefined .

    $default  reduce using rule 67 (Atom)


State 65

   68 Atom: Boolean .

    $default  reduce using rule 68 (Atom)


State 66

   66 Atom: String .

    $default  reduce using rule 66 (Atom)


State 67

   62 Atom: BitNumber .

    $default  reduce using rule 62 (Atom)


State 68

   63 Atom: IntegerNumber .

    $default  reduce using rule 63 (Atom)


State 69

   64 Atom: FloatingNumber .

    $default  reduce using rule 64 (Atom)


State 70

   65 Atom: RationalNumber .

    $default  reduce using rule 65 (Atom)


State 71

   61 Atom: Reference .

    $default  reduce using rule 61 (Atom)


State 72

   24 Initializer: Term .
   25            | Term . "->" Term
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "->"       shift, and go to state 132
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 24 (Initializer)


State 73

   86 Term: Expression .

    $default  reduce using rule 86 (Term)


State 74

   88 Term: Range .

    $default  reduce using rule 88 (Term)


State 75

   87 Term: List .

    $default  reduce using rule 87 (Term)


State 76

   26 Initializer: TwoOrMoreArguments . "->" Term

    "->"  shift, and go to state 137


State 77

   79 Term: DirectCallExpression .

    $default  reduce using rule 79 (Term)


State 78

   80 Term: IndirectCallExpression .

    $default  reduce using rule 80 (Term)


State 79

   81 Term: LetExpression .

    $default  reduce using rule 81 (Term)


State 80

   82 Term: ConditionalExpression .

    $default  reduce using rule 82 (Term)


State 81

   83 Term: ChooseExpression .

    $default  reduce using rule 83 (Term)


State 82

   84 Term: UniversalQuantifierExpression .

    $default  reduce using rule 84 (Term)


State 83

   85 Term: ExistentialQuantifierExpression .

    $default  reduce using rule 85 (Term)


State 84

   38 DotSeparatedIdentifiers: DotSeparatedIdentifiers . "." Identifier
   41 IdentifierPath: "." DotSeparatedIdentifiers .

    $default  reduce using rule 41 (IdentifierPath)


State 85

   38 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." . Identifier

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 138


State 86

   48 MaybeParameters: "(" . Parameters ")"
   49                | "(" . error ")"

    error         shift, and go to state 139
    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 140
    Parameters          go to state 141


State 87

   31 DerivedDefinition: "derived" Identifier MaybeParameters . "->" Type "=" Term

    "->"  shift, and go to state 142


State 88

   32 EnumerationDefinition: "enum" Identifier "=" . "{" Identifiers "}"

    "{"  shift, and go to state 143


State 89

  130 RuleDefinition: "rule" Identifier MaybeParameters . "=" Rule
  131               | "rule" Identifier MaybeParameters . "->" Type "=" Rule

    "="   shift, and go to state 144
    "->"  shift, and go to state 145


State 90

   33 TypeDefinition: "type" Identifier "=" . Type

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 147
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 91

   12 FunctionDefinition: "function" Identifier ":" . MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    $default  reduce using rule 21 (MaybeFunctionParameters)

    FunctionParameters       go to state 152
    MaybeFunctionParameters  go to state 153
    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 154
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 92

   90 Expression: "(" . Term ")"
   91           | "(" . error ")"
  124 IndirectCallExpression: "(" . "*" Term ")" Arguments

    error          shift, and go to state 107
    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "*"            shift, and go to state 108
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 155
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 93

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  177 ExpressionAttribute: Identifier Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 177 (ExpressionAttribute)


State 94

    8 AttributedDefinition: "[" Attributes "]" . Definition

    error       shift, and go to state 3
    "init"      shift, and go to state 4
    "derived"   shift, and go to state 5
    "enum"      shift, and go to state 6
    "rule"      shift, and go to state 7
    "type"      shift, and go to state 8
    "function"  shift, and go to state 9

    Definition                 go to state 156
    FunctionDefinition         go to state 14
    ProgramFunctionDefinition  go to state 15
    DerivedDefinition          go to state 16
    EnumerationDefinition      go to state 17
    TypeDefinition             go to state 18
    RuleDefinition             go to state 19


State 95

  174 Attributes: Attributes "," . Attribute

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier           go to state 33
    Attribute            go to state 157
    BasicAttribute       go to state 36
    ExpressionAttribute  go to state 37


State 96

   44 AttributedVariable: "[" . Attributes "]" Variable

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier           go to state 33
    Attribute            go to state 34
    Attributes           go to state 158
    BasicAttribute       go to state 36
    ExpressionAttribute  go to state 37


State 97

   42 Variable: Identifier . ":" Type
   43         | Identifier .

    ":"  shift, and go to state 159

    $default  reduce using rule 43 (Variable)


State 98

   45 AttributedVariable: Variable .

    $default  reduce using rule 45 (AttributedVariable)


State 99

  125 LetExpression: "let" AttributedVariable . "=" Term "in" Term

    "="  shift, and go to state 160


State 100

  128 UniversalQuantifierExpression: "forall" AttributedVariable . "in" Term "holds" Term

    "in"  shift, and go to state 161


State 101

  127 ChooseExpression: "choose" AttributedVariable . "in" Term "do" Term

    "in"  shift, and go to state 162


State 102

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  126 ConditionalExpression: "if" Term . "then" Term "else" Term

    "then"     shift, and go to state 163
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 103

  129 ExistentialQuantifierExpression: "exists" AttributedVariable . "in" Term "with" Term

    "in"  shift, and go to state 164


State 104

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  111           | "not" Term .

    $default  reduce using rule 111 (Expression)


State 105

   92 Expression: "+" Term .
   94           | Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    $default  reduce using rule 92 (Expression)


State 106

   93 Expression: "-" Term .
   94           | Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    $default  reduce using rule 93 (Expression)


State 107

   91 Expression: "(" error . ")"

    ")"  shift, and go to state 165


State 108

  124 IndirectCallExpression: "(" "*" . Term ")" Arguments

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 166
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 109

   90 Expression: "(" Term . ")"
   94           | Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  121 TwoOrMoreArguments: "(" Term . "," Terms ")"

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    ")"        shift, and go to state 167
    ","        shift, and go to state 168
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 110

  115 List: "[" error . "]"

    "]"  shift, and go to state 169


State 111

  113 List: "[" "]" .

    $default  reduce using rule 113 (List)


State 112

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  112 Range: "[" Term . ".." Term "]"
  117 Terms: Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    ".."       shift, and go to state 170
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 117 (Terms)


State 113

  114 List: "[" Terms . "]"
  116 Terms: Terms . "," Term

    "]"  shift, and go to state 171
    ","  shift, and go to state 172


State 114

   78 Reference: "@" IdentifierPath .

    $default  reduce using rule 78 (Reference)


State 115

   27 Initializers: Initializers "," . Initializer

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 50
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Initializer                      go to state 173
    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 72
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    TwoOrMoreArguments               go to state 76
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 116

   23 ProgramFunctionDefinition: "init" "{" MaybeInitializers "}" .

    $default  reduce using rule 23 (ProgramFunctionDefinition)


State 117

  118 Arguments: "(" . Terms ")"
  119          | "(" . error ")"
  120          | "(" . ")"

    error          shift, and go to state 174
    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    ")"            shift, and go to state 175
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 176
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    Terms                            go to state 177
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 118

  123 DirectCallExpression: IdentifierPath Arguments .

    $default  reduce using rule 123 (DirectCallExpression)


State 119

  108 Expression: Term "and" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 178
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 120

  106 Expression: Term "or" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 179
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 121

  107 Expression: Term "xor" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 180
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 122

  110 Expression: Term "implies" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 181
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 123

   94 Expression: Term "+" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 182
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 124

   95 Expression: Term "-" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 183
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 125

  101 Expression: Term "=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 184
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 126

  102 Expression: Term "<" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 185
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 127

  103 Expression: Term ">" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 186
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 128

   96 Expression: Term "*" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 187
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 129

   97 Expression: Term "/" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 188
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 130

   98 Expression: Term "%" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 189
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 131

   99 Expression: Term "^" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 190
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 132

   25 Initializer: Term "->" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 191
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 133

  109 Expression: Term "=>" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 192
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 134

  100 Expression: Term "!=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 193
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 135

  104 Expression: Term "<=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 194
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 136

  105 Expression: Term ">=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 195
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 137

   26 Initializer: TwoOrMoreArguments "->" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 196
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 138

   38 DotSeparatedIdentifiers: DotSeparatedIdentifiers "." Identifier .

    $default  reduce using rule 38 (DotSeparatedIdentifiers)


State 139

   49 MaybeParameters: "(" error . ")"

    ")"  shift, and go to state 197


State 140

   47 Parameters: AttributedVariable .

    $default  reduce using rule 47 (Parameters)


State 141

   46 Parameters: Parameters . "," AttributedVariable
   48 MaybeParameters: "(" Parameters . ")"

    ")"  shift, and go to state 198
    ","  shift, and go to state 199


State 142

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" . Type "=" Term

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 200
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 143

   32 EnumerationDefinition: "enum" Identifier "=" "{" . Identifiers "}"

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier   go to state 201
    Identifiers  go to state 202


State 144

  130 RuleDefinition: "rule" Identifier MaybeParameters "=" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 218
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 145

  131 RuleDefinition: "rule" Identifier MaybeParameters "->" . Type "=" Rule

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 230
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 146

   55 BasicType: IdentifierPath .
   56 ComposedType: IdentifierPath . "<" Types ">"
   57 RelationType: IdentifierPath . "<" MaybeFunctionParameters "->" Type ">"
   58 FixedSizedType: IdentifierPath . "'" Term

    "<"  shift, and go to state 231
    "'"  shift, and go to state 232

    $default  reduce using rule 55 (BasicType)


State 147

   33 TypeDefinition: "type" Identifier "=" Type .

    $default  reduce using rule 33 (TypeDefinition)


State 148

   51 Type: BasicType .

    $default  reduce using rule 51 (Type)


State 149

   52 Type: ComposedType .

    $default  reduce using rule 52 (Type)


State 150

   53 Type: RelationType .

    $default  reduce using rule 53 (Type)


State 151

   54 Type: FixedSizedType .

    $default  reduce using rule 54 (Type)


State 152

   18 FunctionParameters: FunctionParameters . "*" Type
   20 MaybeFunctionParameters: FunctionParameters .

    "*"  shift, and go to state 233

    $default  reduce using rule 20 (MaybeFunctionParameters)


State 153

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters . "->" Type MaybeDefined MaybeInitially

    "->"  shift, and go to state 234


State 154

   19 FunctionParameters: Type .

    $default  reduce using rule 19 (FunctionParameters)


State 155

   90 Expression: "(" Term . ")"
   94           | Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    ")"        shift, and go to state 167
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 156

    8 AttributedDefinition: "[" Attributes "]" Definition .

    $default  reduce using rule 8 (AttributedDefinition)


State 157

  174 Attributes: Attributes "," Attribute .

    $default  reduce using rule 174 (Attributes)


State 158

   44 AttributedVariable: "[" Attributes . "]" Variable
  174 Attributes: Attributes . "," Attribute

    "]"  shift, and go to state 235
    ","  shift, and go to state 95


State 159

   42 Variable: Identifier ":" . Type

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 236
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 160

  125 LetExpression: "let" AttributedVariable "=" . Term "in" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 237
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 161

  128 UniversalQuantifierExpression: "forall" AttributedVariable "in" . Term "holds" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 238
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 162

  127 ChooseExpression: "choose" AttributedVariable "in" . Term "do" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 239
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 163

  126 ConditionalExpression: "if" Term "then" . Term "else" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 240
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 164

  129 ExistentialQuantifierExpression: "exists" AttributedVariable "in" . Term "with" Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 241
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 165

   91 Expression: "(" error ")" .

    $default  reduce using rule 91 (Expression)


State 166

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  124 IndirectCallExpression: "(" "*" Term . ")" Arguments

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    ")"        shift, and go to state 242
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 167

   90 Expression: "(" Term ")" .

    $default  reduce using rule 90 (Expression)


State 168

  121 TwoOrMoreArguments: "(" Term "," . Terms ")"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 176
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    Terms                            go to state 243
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 169

  115 List: "[" error "]" .

    $default  reduce using rule 115 (List)


State 170

  112 Range: "[" Term ".." . Term "]"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 244
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 171

  114 List: "[" Terms "]" .

    $default  reduce using rule 114 (List)


State 172

  116 Terms: Terms "," . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 245
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 173

   27 Initializers: Initializers "," Initializer .

    $default  reduce using rule 27 (Initializers)


State 174

  119 Arguments: "(" error . ")"

    ")"  shift, and go to state 246


State 175

  120 Arguments: "(" ")" .

    $default  reduce using rule 120 (Arguments)


State 176

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  117 Terms: Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 117 (Terms)


State 177

  116 Terms: Terms . "," Term
  118 Arguments: "(" Terms . ")"

    ")"  shift, and go to state 247
    ","  shift, and go to state 172


State 178

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  108           | Term "and" Term .
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"   shift, and go to state 123
    "-"   shift, and go to state 124
    "="   shift, and go to state 125
    "<"   shift, and go to state 126
    ">"   shift, and go to state 127
    "*"   shift, and go to state 128
    "/"   shift, and go to state 129
    "%"   shift, and go to state 130
    "^"   shift, and go to state 131
    "!="  shift, and go to state 134
    "<="  shift, and go to state 135
    ">="  shift, and go to state 136

    $default  reduce using rule 108 (Expression)


State 179

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  106           | Term "or" Term .
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"  shift, and go to state 119
    "xor"  shift, and go to state 121
    "+"    shift, and go to state 123
    "-"    shift, and go to state 124
    "="    shift, and go to state 125
    "<"    shift, and go to state 126
    ">"    shift, and go to state 127
    "*"    shift, and go to state 128
    "/"    shift, and go to state 129
    "%"    shift, and go to state 130
    "^"    shift, and go to state 131
    "!="   shift, and go to state 134
    "<="   shift, and go to state 135
    ">="   shift, and go to state 136

    $default  reduce using rule 106 (Expression)


State 180

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  107           | Term "xor" Term .
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"  shift, and go to state 119
    "+"    shift, and go to state 123
    "-"    shift, and go to state 124
    "="    shift, and go to state 125
    "<"    shift, and go to state 126
    ">"    shift, and go to state 127
    "*"    shift, and go to state 128
    "/"    shift, and go to state 129
    "%"    shift, and go to state 130
    "^"    shift, and go to state 131
    "!="   shift, and go to state 134
    "<="   shift, and go to state 135
    ">="   shift, and go to state 136

    $default  reduce using rule 107 (Expression)


State 181

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  110           | Term "implies" Term .

    "and"  shift, and go to state 119
    "or"   shift, and go to state 120
    "xor"  shift, and go to state 121
    "+"    shift, and go to state 123
    "-"    shift, and go to state 124
    "="    shift, and go to state 125
    "<"    shift, and go to state 126
    ">"    shift, and go to state 127
    "*"    shift, and go to state 128
    "/"    shift, and go to state 129
    "%"    shift, and go to state 130
    "^"    shift, and go to state 131
    "!="   shift, and go to state 134
    "<="   shift, and go to state 135
    ">="   shift, and go to state 136

    $default  reduce using rule 110 (Expression)


State 182

   94 Expression: Term . "+" Term
   94           | Term "+" Term .
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 94 (Expression)


State 183

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   95           | Term "-" Term .
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 95 (Expression)


State 184

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  101           | Term "=" Term .
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"   shift, and go to state 123
    "-"   shift, and go to state 124
    "<"   shift, and go to state 126
    ">"   shift, and go to state 127
    "*"   shift, and go to state 128
    "/"   shift, and go to state 129
    "%"   shift, and go to state 130
    "^"   shift, and go to state 131
    "<="  shift, and go to state 135
    ">="  shift, and go to state 136

    $default  reduce using rule 101 (Expression)


State 185

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  102           | Term "<" Term .
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"  shift, and go to state 123
    "-"  shift, and go to state 124
    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 102 (Expression)


State 186

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  103           | Term ">" Term .
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"  shift, and go to state 123
    "-"  shift, and go to state 124
    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 103 (Expression)


State 187

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   96           | Term "*" Term .
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "^"  shift, and go to state 131

    $default  reduce using rule 96 (Expression)


State 188

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   97           | Term "/" Term .
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "^"  shift, and go to state 131

    $default  reduce using rule 97 (Expression)


State 189

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   98           | Term "%" Term .
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "^"  shift, and go to state 131

    $default  reduce using rule 98 (Expression)


State 190

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
   99           | Term "^" Term .
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    $default  reduce using rule 99 (Expression)


State 191

   25 Initializer: Term "->" Term .
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 25 (Initializer)


State 192

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  109           | Term "=>" Term .
  110           | Term . "implies" Term

    "and"  shift, and go to state 119
    "or"   shift, and go to state 120
    "xor"  shift, and go to state 121
    "+"    shift, and go to state 123
    "-"    shift, and go to state 124
    "="    shift, and go to state 125
    "<"    shift, and go to state 126
    ">"    shift, and go to state 127
    "*"    shift, and go to state 128
    "/"    shift, and go to state 129
    "%"    shift, and go to state 130
    "^"    shift, and go to state 131
    "!="   shift, and go to state 134
    "<="   shift, and go to state 135
    ">="   shift, and go to state 136

    $default  reduce using rule 109 (Expression)


State 193

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  100           | Term "!=" Term .
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"   shift, and go to state 123
    "-"   shift, and go to state 124
    "<"   shift, and go to state 126
    ">"   shift, and go to state 127
    "*"   shift, and go to state 128
    "/"   shift, and go to state 129
    "%"   shift, and go to state 130
    "^"   shift, and go to state 131
    "<="  shift, and go to state 135
    ">="  shift, and go to state 136

    $default  reduce using rule 100 (Expression)


State 194

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  104           | Term "<=" Term .
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"  shift, and go to state 123
    "-"  shift, and go to state 124
    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 104 (Expression)


State 195

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  105           | Term ">=" Term .
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "+"  shift, and go to state 123
    "-"  shift, and go to state 124
    "*"  shift, and go to state 128
    "/"  shift, and go to state 129
    "%"  shift, and go to state 130
    "^"  shift, and go to state 131

    $default  reduce using rule 105 (Expression)


State 196

   26 Initializer: TwoOrMoreArguments "->" Term .
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 26 (Initializer)


State 197

   49 MaybeParameters: "(" error ")" .

    $default  reduce using rule 49 (MaybeParameters)


State 198

   48 MaybeParameters: "(" Parameters ")" .

    $default  reduce using rule 48 (MaybeParameters)


State 199

   46 Parameters: Parameters "," . AttributedVariable

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 248


State 200

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type . "=" Term

    "="  shift, and go to state 249


State 201

   37 Identifiers: Identifier .

    $default  reduce using rule 37 (Identifiers)


State 202

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers . "}"
   36 Identifiers: Identifiers . "," Identifier

    "}"  shift, and go to state 250
    ","  shift, and go to state 251


State 203

  164 SequenceRule: "seq" . Rules "endseq"
  166             | "seq" . error "endseq"

    error         shift, and go to state 252
    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 253
    Rules                    go to state 254
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 204

  160 BlockRule: "par" . Rules "endpar"
  162          | "par" . error "endpar"

    error         shift, and go to state 255
    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 253
    Rules                    go to state 256
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 205

  145 SkipRule: "skip" .

    $default  reduce using rule 145 (SkipRule)


State 206

  155 LetRule: "let" . AttributedVariable "=" Term "in" Rule

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 257


State 207

  156 ForallRule: "forall" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 258


State 208

  157 ChooseRule: "choose" . AttributedVariable "in" Term "do" Rule

    "in"          shift, and go to state 21
    "["           shift, and go to state 96
    "identifier"  shift, and go to state 24

    Identifier          go to state 97
    Variable            go to state 98
    AttributedVariable  go to state 259


State 209

  158 IterateRule: "iterate" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 260
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 210

  168 CallRule: "call" . DirectCallExpression
  170         | "call" . IndirectCallExpression

    "in"          shift, and go to state 21
    "("           shift, and go to state 213
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 261
    IndirectCallExpression   go to state 262


State 211

  146 ConditionalRule: "if" . Term "then" Rule
  147                | "if" . Term "then" Rule "else" Rule

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 263
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 212

  148 CaseRule: "case" . Term "of" "{" CaseLabels "}"
  149         | "case" . Term "of" "{" error "}"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 264
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 213

  124 IndirectCallExpression: "(" . "*" Term ")" Arguments

    "*"  shift, and go to state 108


State 214

  159 BlockRule: "{" . Rules "}"
  161          | "{" . error "}"

    error         shift, and go to state 265
    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 253
    Rules                    go to state 266
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 215

  163 SequenceRule: "{|" . Rules "|}"
  165             | "{|" . error "|}"

    error         shift, and go to state 267
    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 253
    Rules                    go to state 268
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 216

  167 UpdateRule: DirectCallExpression . ":=" Term
  169 CallRule: DirectCallExpression .

    ":="  shift, and go to state 269

    $default  reduce using rule 169 (CallRule)


State 217

  171 CallRule: IndirectCallExpression .

    $default  reduce using rule 171 (CallRule)


State 218

  130 RuleDefinition: "rule" Identifier MaybeParameters "=" Rule .

    $default  reduce using rule 130 (RuleDefinition)


State 219

  132 Rule: SkipRule .

    $default  reduce using rule 132 (Rule)


State 220

  133 Rule: ConditionalRule .

    $default  reduce using rule 133 (Rule)


State 221

  134 Rule: CaseRule .

    $default  reduce using rule 134 (Rule)


State 222

  135 Rule: LetRule .

    $default  reduce using rule 135 (Rule)


State 223

  136 Rule: ForallRule .

    $default  reduce using rule 136 (Rule)


State 224

  137 Rule: ChooseRule .

    $default  reduce using rule 137 (Rule)


State 225

  138 Rule: IterateRule .

    $default  reduce using rule 138 (Rule)


State 226

  139 Rule: BlockRule .

    $default  reduce using rule 139 (Rule)


State 227

  140 Rule: SequenceRule .

    $default  reduce using rule 140 (Rule)


State 228

  141 Rule: UpdateRule .

    $default  reduce using rule 141 (Rule)


State 229

  142 Rule: CallRule .

    $default  reduce using rule 142 (Rule)


State 230

  131 RuleDefinition: "rule" Identifier MaybeParameters "->" Type . "=" Rule

    "="  shift, and go to state 270


State 231

   56 ComposedType: IdentifierPath "<" . Types ">"
   57 RelationType: IdentifierPath "<" . MaybeFunctionParameters "->" Type ">"

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    $default  reduce using rule 21 (MaybeFunctionParameters)

    FunctionParameters       go to state 152
    MaybeFunctionParameters  go to state 271
    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 272
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151
    Types                    go to state 273


State 232

   58 FixedSizedType: IdentifierPath "'" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 274
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 233

   18 FunctionParameters: FunctionParameters "*" . Type

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 275
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 234

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" . Type MaybeDefined MaybeInitially

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 276
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 235

   44 AttributedVariable: "[" Attributes "]" . Variable

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 97
    Variable    go to state 277


State 236

   42 Variable: Identifier ":" Type .

    $default  reduce using rule 42 (Variable)


State 237

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  125 LetExpression: "let" AttributedVariable "=" Term . "in" Term

    "in"       shift, and go to state 278
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 238

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  128 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term . "holds" Term

    "holds"    shift, and go to state 279
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 239

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  127 ChooseExpression: "choose" AttributedVariable "in" Term . "do" Term

    "do"       shift, and go to state 280
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 240

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  126 ConditionalExpression: "if" Term "then" Term . "else" Term

    "else"     shift, and go to state 281
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 241

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  129 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term . "with" Term

    "with"     shift, and go to state 282
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 242

  124 IndirectCallExpression: "(" "*" Term ")" . Arguments

    "("  shift, and go to state 117

    Arguments  go to state 283


State 243

  116 Terms: Terms . "," Term
  121 TwoOrMoreArguments: "(" Term "," Terms . ")"

    ")"  shift, and go to state 284
    ","  shift, and go to state 172


State 244

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  112 Range: "[" Term ".." Term . "]"

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "]"        shift, and go to state 285
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 245

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  116 Terms: Terms "," Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 116 (Terms)


State 246

  119 Arguments: "(" error ")" .

    $default  reduce using rule 119 (Arguments)


State 247

  118 Arguments: "(" Terms ")" .

    $default  reduce using rule 118 (Arguments)


State 248

   46 Parameters: Parameters "," AttributedVariable .

    $default  reduce using rule 46 (Parameters)


State 249

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 286
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 250

   32 EnumerationDefinition: "enum" Identifier "=" "{" Identifiers "}" .

    $default  reduce using rule 32 (EnumerationDefinition)


State 251

   36 Identifiers: Identifiers "," . Identifier

    "in"          shift, and go to state 21
    "identifier"  shift, and go to state 24

    Identifier  go to state 287


State 252

  166 SequenceRule: "seq" error . "endseq"

    "endseq"  shift, and go to state 288


State 253

  144 Rules: Rule .

    $default  reduce using rule 144 (Rules)


State 254

  143 Rules: Rules . Rule
  164 SequenceRule: "seq" Rules . "endseq"

    "seq"         shift, and go to state 203
    "endseq"      shift, and go to state 289
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 290
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 255

  162 BlockRule: "par" error . "endpar"

    "endpar"  shift, and go to state 291


State 256

  143 Rules: Rules . Rule
  160 BlockRule: "par" Rules . "endpar"

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "endpar"      shift, and go to state 292
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 290
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 257

  155 LetRule: "let" AttributedVariable . "=" Term "in" Rule

    "="  shift, and go to state 293


State 258

  156 ForallRule: "forall" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 294


State 259

  157 ChooseRule: "choose" AttributedVariable . "in" Term "do" Rule

    "in"  shift, and go to state 295


State 260

  158 IterateRule: "iterate" Rule .

    $default  reduce using rule 158 (IterateRule)


State 261

  168 CallRule: "call" DirectCallExpression .

    $default  reduce using rule 168 (CallRule)


State 262

  170 CallRule: "call" IndirectCallExpression .

    $default  reduce using rule 170 (CallRule)


State 263

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  146 ConditionalRule: "if" Term . "then" Rule
  147                | "if" Term . "then" Rule "else" Rule

    "then"     shift, and go to state 296
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 264

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  148 CaseRule: "case" Term . "of" "{" CaseLabels "}"
  149         | "case" Term . "of" "{" error "}"

    "of"       shift, and go to state 297
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 265

  161 BlockRule: "{" error . "}"

    "}"  shift, and go to state 298


State 266

  143 Rules: Rules . Rule
  159 BlockRule: "{" Rules . "}"

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "}"           shift, and go to state 299
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 290
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 267

  165 SequenceRule: "{|" error . "|}"

    "|}"  shift, and go to state 300


State 268

  143 Rules: Rules . Rule
  163 SequenceRule: "{|" Rules . "|}"

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "|}"          shift, and go to state 301
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 290
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 269

  167 UpdateRule: DirectCallExpression ":=" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 302
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 270

  131 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 303
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 271

   57 RelationType: IdentifierPath "<" MaybeFunctionParameters . "->" Type ">"

    "->"  shift, and go to state 304


State 272

   19 FunctionParameters: Type .
   60 Types: Type .

    ","       reduce using rule 60 (Types)
    ">"       reduce using rule 60 (Types)
    $default  reduce using rule 19 (FunctionParameters)


State 273

   56 ComposedType: IdentifierPath "<" Types . ">"
   59 Types: Types . "," Type

    ","  shift, and go to state 305
    ">"  shift, and go to state 306


State 274

   58 FixedSizedType: IdentifierPath "'" Term .
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "<"        shift, and go to state 126
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 58 (FixedSizedType)


State 275

   18 FunctionParameters: FunctionParameters "*" Type .

    $default  reduce using rule 18 (FunctionParameters)


State 276

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type . MaybeDefined MaybeInitially

    "defined"  shift, and go to state 307

    $default  reduce using rule 17 (MaybeDefined)

    MaybeDefined  go to state 308


State 277

   44 AttributedVariable: "[" Attributes "]" Variable .

    $default  reduce using rule 44 (AttributedVariable)


State 278

  125 LetExpression: "let" AttributedVariable "=" Term "in" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 309
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 279

  128 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 310
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 280

  127 ChooseExpression: "choose" AttributedVariable "in" Term "do" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 311
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 281

  126 ConditionalExpression: "if" Term "then" Term "else" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 312
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 282

  129 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" . Term

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 313
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 283

  124 IndirectCallExpression: "(" "*" Term ")" Arguments .

    $default  reduce using rule 124 (IndirectCallExpression)


State 284

  121 TwoOrMoreArguments: "(" Term "," Terms ")" .

    $default  reduce using rule 121 (TwoOrMoreArguments)


State 285

  112 Range: "[" Term ".." Term "]" .

    $default  reduce using rule 112 (Range)


State 286

   31 DerivedDefinition: "derived" Identifier MaybeParameters "->" Type "=" Term .
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 31 (DerivedDefinition)


State 287

   36 Identifiers: Identifiers "," Identifier .

    $default  reduce using rule 36 (Identifiers)


State 288

  166 SequenceRule: "seq" error "endseq" .

    $default  reduce using rule 166 (SequenceRule)


State 289

  164 SequenceRule: "seq" Rules "endseq" .

    $default  reduce using rule 164 (SequenceRule)


State 290

  143 Rules: Rules Rule .

    $default  reduce using rule 143 (Rules)


State 291

  162 BlockRule: "par" error "endpar" .

    $default  reduce using rule 162 (BlockRule)


State 292

  160 BlockRule: "par" Rules "endpar" .

    $default  reduce using rule 160 (BlockRule)


State 293

  155 LetRule: "let" AttributedVariable "=" . Term "in" Rule

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 314
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 294

  156 ForallRule: "forall" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 315
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 295

  157 ChooseRule: "choose" AttributedVariable "in" . Term "do" Rule

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 316
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 296

  146 ConditionalRule: "if" Term "then" . Rule
  147                | "if" Term "then" . Rule "else" Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 317
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 297

  148 CaseRule: "case" Term "of" . "{" CaseLabels "}"
  149         | "case" Term "of" . "{" error "}"

    "{"  shift, and go to state 318


State 298

  161 BlockRule: "{" error "}" .

    $default  reduce using rule 161 (BlockRule)


State 299

  159 BlockRule: "{" Rules "}" .

    $default  reduce using rule 159 (BlockRule)


State 300

  165 SequenceRule: "{|" error "|}" .

    $default  reduce using rule 165 (SequenceRule)


State 301

  163 SequenceRule: "{|" Rules "|}" .

    $default  reduce using rule 163 (SequenceRule)


State 302

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  167 UpdateRule: DirectCallExpression ":=" Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 167 (UpdateRule)


State 303

  131 RuleDefinition: "rule" Identifier MaybeParameters "->" Type "=" Rule .

    $default  reduce using rule 131 (RuleDefinition)


State 304

   57 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" . Type ">"

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 319
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 305

   59 Types: Types "," . Type

    "in"          shift, and go to state 21
    "."           shift, and go to state 23
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 146
    Type                     go to state 320
    BasicType                go to state 148
    ComposedType             go to state 149
    RelationType             go to state 150
    FixedSizedType           go to state 151


State 306

   56 ComposedType: IdentifierPath "<" Types ">" .

    $default  reduce using rule 56 (ComposedType)


State 307

   16 MaybeDefined: "defined" . "{" Term "}"

    "{"  shift, and go to state 321


State 308

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined . MaybeInitially

    "initially"  shift, and go to state 322

    $default  reduce using rule 15 (MaybeInitially)

    MaybeInitially  go to state 323


State 309

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  125 LetExpression: "let" AttributedVariable "=" Term "in" Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 125 (LetExpression)


State 310

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  128 UniversalQuantifierExpression: "forall" AttributedVariable "in" Term "holds" Term .

    $default  reduce using rule 128 (UniversalQuantifierExpression)


State 311

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  127 ChooseExpression: "choose" AttributedVariable "in" Term "do" Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 127 (ChooseExpression)


State 312

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  126 ConditionalExpression: "if" Term "then" Term "else" Term .

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136

    $default  reduce using rule 126 (ConditionalExpression)


State 313

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  129 ExistentialQuantifierExpression: "exists" AttributedVariable "in" Term "with" Term .

    $default  reduce using rule 129 (ExistentialQuantifierExpression)


State 314

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  155 LetRule: "let" AttributedVariable "=" Term . "in" Rule

    "in"       shift, and go to state 324
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 315

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  156 ForallRule: "forall" AttributedVariable "in" Term . "do" Rule

    "do"       shift, and go to state 325
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 316

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  157 ChooseRule: "choose" AttributedVariable "in" Term . "do" Rule

    "do"       shift, and go to state 326
    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 317

  146 ConditionalRule: "if" Term "then" Rule .
  147                | "if" Term "then" Rule . "else" Rule

    "else"  shift, and go to state 327

    $default  reduce using rule 146 (ConditionalRule)


State 318

  148 CaseRule: "case" Term "of" "{" . CaseLabels "}"
  149         | "case" Term "of" "{" . error "}"

    error          shift, and go to state 328
    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "default"      shift, and go to state 329
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "_"            shift, and go to state 330
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 331
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83
    CaseLabel                        go to state 332
    CaseLabels                       go to state 333


State 319

   57 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type . ">"

    ">"  shift, and go to state 334


State 320

   59 Types: Types "," Type .

    $default  reduce using rule 59 (Types)


State 321

   16 MaybeDefined: "defined" "{" . Term "}"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 335
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 322

   14 MaybeInitially: "initially" . "{" MaybeInitializers "}"

    "{"  shift, and go to state 336


State 323

   12 FunctionDefinition: "function" Identifier ":" MaybeFunctionParameters "->" Type MaybeDefined MaybeInitially .

    $default  reduce using rule 12 (FunctionDefinition)


State 324

  155 LetRule: "let" AttributedVariable "=" Term "in" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 337
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 325

  156 ForallRule: "forall" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 338
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 326

  157 ChooseRule: "choose" AttributedVariable "in" Term "do" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 339
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 327

  147 ConditionalRule: "if" Term "then" Rule "else" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 340
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 328

  149 CaseRule: "case" Term "of" "{" error . "}"

    "}"  shift, and go to state 341


State 329

  150 CaseLabel: "default" . ":" Rule

    ":"  shift, and go to state 342


State 330

  151 CaseLabel: "_" . ":" Rule

    ":"  shift, and go to state 343


State 331

   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term
  152 CaseLabel: Term . ":" Rule

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    ":"        shift, and go to state 344
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 332

  153 CaseLabels: CaseLabel . CaseLabels
  154           | CaseLabel .

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "default"      shift, and go to state 329
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 92
    "["            shift, and go to state 51
    "_"            shift, and go to state 330
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    $default  reduce using rule 154 (CaseLabels)

    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 331
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83
    CaseLabel                        go to state 332
    CaseLabels                       go to state 345


State 333

  148 CaseRule: "case" Term "of" "{" CaseLabels . "}"

    "}"  shift, and go to state 346


State 334

   57 RelationType: IdentifierPath "<" MaybeFunctionParameters "->" Type ">" .

    $default  reduce using rule 57 (RelationType)


State 335

   16 MaybeDefined: "defined" "{" Term . "}"
   94 Expression: Term . "+" Term
   95           | Term . "-" Term
   96           | Term . "*" Term
   97           | Term . "/" Term
   98           | Term . "%" Term
   99           | Term . "^" Term
  100           | Term . "!=" Term
  101           | Term . "=" Term
  102           | Term . "<" Term
  103           | Term . ">" Term
  104           | Term . "<=" Term
  105           | Term . ">=" Term
  106           | Term . "or" Term
  107           | Term . "xor" Term
  108           | Term . "and" Term
  109           | Term . "=>" Term
  110           | Term . "implies" Term

    "and"      shift, and go to state 119
    "or"       shift, and go to state 120
    "xor"      shift, and go to state 121
    "implies"  shift, and go to state 122
    "+"        shift, and go to state 123
    "-"        shift, and go to state 124
    "="        shift, and go to state 125
    "}"        shift, and go to state 347
    "<"        shift, and go to state 126
    ">"        shift, and go to state 127
    "*"        shift, and go to state 128
    "/"        shift, and go to state 129
    "%"        shift, and go to state 130
    "^"        shift, and go to state 131
    "=>"       shift, and go to state 133
    "!="       shift, and go to state 134
    "<="       shift, and go to state 135
    ">="       shift, and go to state 136


State 336

   14 MaybeInitially: "initially" "{" . MaybeInitializers "}"

    "let"          shift, and go to state 39
    "in"           shift, and go to state 21
    "forall"       shift, and go to state 40
    "choose"       shift, and go to state 41
    "if"           shift, and go to state 42
    "exists"       shift, and go to state 43
    "undef"        shift, and go to state 44
    "false"        shift, and go to state 45
    "true"         shift, and go to state 46
    "not"          shift, and go to state 47
    "+"            shift, and go to state 48
    "-"            shift, and go to state 49
    "("            shift, and go to state 50
    "["            shift, and go to state 51
    "@"            shift, and go to state 52
    "."            shift, and go to state 23
    "binary"       shift, and go to state 53
    "hexadecimal"  shift, and go to state 54
    "integer"      shift, and go to state 55
    "rational"     shift, and go to state 56
    "floating"     shift, and go to state 57
    "string"       shift, and go to state 58
    "identifier"   shift, and go to state 24

    $default  reduce using rule 30 (MaybeInitializers)

    Initializer                      go to state 59
    Initializers                     go to state 60
    MaybeInitializers                go to state 348
    Identifier                       go to state 25
    DotSeparatedIdentifiers          go to state 26
    IdentifierPath                   go to state 62
    Atom                             go to state 63
    Undefined                        go to state 64
    Boolean                          go to state 65
    String                           go to state 66
    BitNumber                        go to state 67
    IntegerNumber                    go to state 68
    FloatingNumber                   go to state 69
    RationalNumber                   go to state 70
    Reference                        go to state 71
    Term                             go to state 72
    Expression                       go to state 73
    Range                            go to state 74
    List                             go to state 75
    TwoOrMoreArguments               go to state 76
    DirectCallExpression             go to state 77
    IndirectCallExpression           go to state 78
    LetExpression                    go to state 79
    ConditionalExpression            go to state 80
    ChooseExpression                 go to state 81
    UniversalQuantifierExpression    go to state 82
    ExistentialQuantifierExpression  go to state 83


State 337

  155 LetRule: "let" AttributedVariable "=" Term "in" Rule .

    $default  reduce using rule 155 (LetRule)


State 338

  156 ForallRule: "forall" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 156 (ForallRule)


State 339

  157 ChooseRule: "choose" AttributedVariable "in" Term "do" Rule .

    $default  reduce using rule 157 (ChooseRule)


State 340

  147 ConditionalRule: "if" Term "then" Rule "else" Rule .

    $default  reduce using rule 147 (ConditionalRule)


State 341

  149 CaseRule: "case" Term "of" "{" error "}" .

    $default  reduce using rule 149 (CaseRule)


State 342

  150 CaseLabel: "default" ":" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 349
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 343

  151 CaseLabel: "_" ":" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 350
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 344

  152 CaseLabel: Term ":" . Rule

    "seq"         shift, and go to state 203
    "par"         shift, and go to state 204
    "skip"        shift, and go to state 205
    "let"         shift, and go to state 206
    "in"          shift, and go to state 21
    "forall"      shift, and go to state 207
    "choose"      shift, and go to state 208
    "iterate"     shift, and go to state 209
    "call"        shift, and go to state 210
    "if"          shift, and go to state 211
    "case"        shift, and go to state 212
    "("           shift, and go to state 213
    "{"           shift, and go to state 214
    "."           shift, and go to state 23
    "{|"          shift, and go to state 215
    "identifier"  shift, and go to state 24

    Identifier               go to state 25
    DotSeparatedIdentifiers  go to state 26
    IdentifierPath           go to state 62
    DirectCallExpression     go to state 216
    IndirectCallExpression   go to state 217
    Rule                     go to state 351
    SkipRule                 go to state 219
    ConditionalRule          go to state 220
    CaseRule                 go to state 221
    LetRule                  go to state 222
    ForallRule               go to state 223
    ChooseRule               go to state 224
    IterateRule              go to state 225
    BlockRule                go to state 226
    SequenceRule             go to state 227
    UpdateRule               go to state 228
    CallRule                 go to state 229


State 345

  153 CaseLabels: CaseLabel CaseLabels .

    $default  reduce using rule 153 (CaseLabels)


State 346

  148 CaseRule: "case" Term "of" "{" CaseLabels "}" .

    $default  reduce using rule 148 (CaseRule)


State 347

   16 MaybeDefined: "defined" "{" Term "}" .

    $default  reduce using rule 16 (MaybeDefined)


State 348

   14 MaybeInitially: "initially" "{" MaybeInitializers . "}"

    "}"  shift, and go to state 352


State 349

  150 CaseLabel: "default" ":" Rule .

    $default  reduce using rule 150 (CaseLabel)


State 350

  151 CaseLabel: "_" ":" Rule .

    $default  reduce using rule 151 (CaseLabel)


State 351

  152 CaseLabel: Term ":" Rule .

    $default  reduce using rule 152 (CaseLabel)


State 352

   14 MaybeInitially: "initially" "{" MaybeInitializers "}" .

    $default  reduce using rule 14 (MaybeInitially)
