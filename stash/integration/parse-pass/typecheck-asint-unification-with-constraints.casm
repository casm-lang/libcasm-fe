CASM foo

init main

enum my_e = { e1 }


rule main = {
    let x: List(Integer) = [1,2,3] in print asInteger(x)
        //~^ type of 1 argument of `asInteger` is List(Integer) but should be Unknown

    let x = e1 in print asInteger(x)
        //~^ type of 1 argument of `asInteger` is my_e but should be Unknown

    print asInteger([1])
    //~^ type of 1 argument of `asInteger` is Tuple (Integer,) but should be Unknown
        
    program(self) := undef
}
