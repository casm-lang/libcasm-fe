function (static) a: -> Integer initially { 2 }
function (static) b: -> Integer initially { 3 }
function (static) c: -> Integer initially { 4 }

function (static) d: Integer -> Integer initially { 1 -> 1, 2 -> 2, 3 -> 3 }

function (static) e: Integer * Integer -> Integer initially { [ 1,2 ] -> 3, [ 2,2 ] -> 4, [ 2,3 ] -> 5 }

init main

rule main = {
  assert a = 2
  assert b = 3
  assert c = 4

  assert d( 1 ) = 1
  assert d( 2 ) = 2
  assert d( 3 ) = 3
  assert d( 4 ) = undef

  assert e( 1,2 ) = 3
  assert e( 2,2 ) = 4
  assert e( 3,3 ) = undef

  program( self ) := undef
}
